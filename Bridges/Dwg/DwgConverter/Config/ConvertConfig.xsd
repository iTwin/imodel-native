<?xml version="1.0" encoding="utf-8"?>
<xs:schema  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xi="http://www.w3.org/2001/XInclude" >
    <xs:element name="ConvertConfig">
        <xs:annotation>
            <xs:documentation>
                <!--Holds information that configures the import process.-->
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element name="Layers" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Options for importing levels.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute name="copy" use="optional">
                            <xs:annotation>
                                <xs:documentation>
                                    Set to 'Never' if the converter should never make model-specific copies of any levels. This is the default. This is the best option to use if all level definitions are consistent across reference files.
                                    Set to 'Always' if the converter should always make model-specific copies of any levels. This option may result in a large number of subcategories and subcategory overrides. This is the best option to use if you want to replicate MicroStation's approach of defining levels differently in each reference file and controlling level visibility on a per-model basis.
                                    Set to 'IfDifferent' if the converter should make model-specific copies of levels that differ from the definition found in the root file either in symbology or visibility. This option may resuult in a large number of subcategories and subcategory overrides, but fewer than the 'Always' option. This is the best option to use if you care most about visual fidelity.
                                </xs:documentation>
                            </xs:annotation>
                            <xs:simpleType>
                                <xs:restriction base="xs:token">
                                    <xs:enumeration value="Never"/>
                                    <xs:enumeration value="Always"/>
                                    <xs:enumeration value="IfDifferent"/>
                                </xs:restriction>
                            </xs:simpleType>

                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element name="Models" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Options for importing models.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="UnspecifiedUnits" minOccurs="1" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Fallback units for a Unitless block.  Each DWG block has a unit option, aka INSUNITS or Design Center Units.  The units of modelspace block serves as DWG file units.
                                    </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:attribute name="units" use="required">
                                        <xs:annotation>
                                            <xs:documentation>
                                                Option to set model units.  Each DWG block has a unit option, aka INSUNITS or Design Center Units.  The units of modelspace block serves as DWG file units.
                                            </xs:documentation>
                                        </xs:annotation>
                                        <xs:simpleType>
                                            <xs:restriction base="xs:token">
                                                <xs:enumeration value="Meters"/>
                                                <xs:enumeration value="Decimeters"/>
                                                <xs:enumeration value="Centimeters"/>
                                                <xs:enumeration value="Millimeters"/>
                                                <xs:enumeration value="Micrometers"/>
                                                <xs:enumeration value="Nanometers"/>
                                                <xs:enumeration value="Picometers"/>
                                                <xs:enumeration value="Femtometers"/>
                                                <xs:enumeration value="Petameters"/>
                                                <xs:enumeration value="Terameters"/>
                                                <xs:enumeration value="Gigameters"/>
                                                <xs:enumeration value="Megameters"/>
                                                <xs:enumeration value="Kilometers"/>
                                                <xs:enumeration value="Hectometers"/>
                                                <xs:enumeration value="Dekameters"/>
                                                <xs:enumeration value="Inches"/>
                                                <xs:enumeration value="Feet"/>
                                                <xs:enumeration value="MicroInches"/>
                                                <xs:enumeration value="Miles"/>
                                                <xs:enumeration value="Yards"/>
                                                <xs:enumeration value="Picas"/>
                                                <xs:enumeration value="Points"/>
                                                <xs:enumeration value="Mils"/>
                                                <xs:enumeration value="SurveyInches"/>
                                                <xs:enumeration value="SurveyMiles"/>
                                                <xs:enumeration value="Furlongs"/>
                                                <xs:enumeration value="Chains"/>
                                                <xs:enumeration value="Rods"/>
                                                <xs:enumeration value="Fathoms"/>
                                                <xs:enumeration value="SurveyFeet"/>
                                                <xs:enumeration value="Parsecs"/>
                                                <xs:enumeration value="LightYears"/>
                                                <xs:enumeration value="Astronomical"/>
                                                <xs:enumeration value="NauticalMiles"/>
                                                <xs:enumeration value="Angstroms"/>
                                            </xs:restriction>
                                        </xs:simpleType>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="ImportRules" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Rules that control how models are renamed when merged from a input file into the DgnDb project.
                                        Rules are checked in the order given, and the first matching rule is applied.
                                        Therefore more specific rules should come before more general rules in the list.
                                    </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="If" minOccurs="0" maxOccurs="unbounded">
                                            <xs:annotation>
                                                <xs:documentation>
                                                    Specifies properties to match.
                                                    A rule is applied to a given model if all of the properties specified match the corresponding properties of the model.
                                                    A rule that specifies no properties matches all models.
                                                </xs:documentation>
                                            </xs:annotation>
                                            <xs:complexType>
                                                <xs:all>
                                                    <xs:element name="Then" minOccurs="1" maxOccurs="1">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                Specifies what the importer should do when the rule is applied to a model.
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                        <xs:complexType>
                                                            <xs:attribute name="newName" type="xs:string" use="required">
                                                                <xs:annotation>
                                                                    <xs:documentation>New name for the model. If the value includes %file, it is replaced with the request the name of the input file.</xs:documentation>
                                                                </xs:annotation>
                                                            </xs:attribute>
                                                        </xs:complexType>
                                                    </xs:element>
                                                </xs:all>
                                                <xs:attribute name="file" type="xs:string" use="optional">
                                                    <xs:annotation>
                                                        <xs:documentation>Matches models from a specified input file. Do not include drive, directory, or file extension. May contain wildcards.</xs:documentation>
                                                    </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="not_file" type="xs:string" use="optional">
                                                    <xs:annotation>
                                                        <xs:documentation>Matches models that are not from a specified input file. Do not include drive, directory, or file extension. May contain wildcards.</xs:documentation>
                                                    </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="name" type="xs:string" use="optional">
                                                    <xs:annotation>
                                                        <xs:documentation>Matches models with the specified name. May contain wildcards.</xs:documentation>
                                                    </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="not_name" type="xs:string" use="optional">
                                                    <xs:annotation>
                                                        <xs:documentation>Matches models that do not have the specified name. May contain wildcards.</xs:documentation>
                                                    </xs:annotation>
                                                </xs:attribute>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:all>
                    </xs:complexType>
                </xs:element>
                <xs:element name="References" minOccurs="1" maxOccurs="1" >
                    <xs:annotation>
                        <xs:documentation>Controls how DWG xreference attachments are merged into the database.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute name="newLayerDisplay" type="xs:boolean" use="required">
                            <xs:annotation>
                                <xs:documentation>
                                    When set to true, display newly created levels in references. By default, when new levels are created in a model that is referenced by another model, the new levels are not displayed when the referencing model is opened. Newly created levels are considered to be new until 'Save settings' is performed in the parent file.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="mergeIntoParent" type="xs:boolean" use="required">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, all reference attachments are merged into their parent models.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                      <xs:attribute name="cloneDuplicates" type="xs:boolean" use="optional">
                        <xs:annotation>
                          <xs:documentation>
                            If true, duplicate reference attachments of the same model are cloned. Otherwise, only the first is saved.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element name="LineWeightMapping" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Map DWG lineweights to DGN lineweights
                        </xs:documentation>
                    </xs:annotation>
                        <xs:sequence>
                            <xs:element name="MapEntry" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:attribute name="DwgWeight" use="required">
                                        <xs:annotation>
                                            <xs:documentation>
                                                DWG weight name
                                            </xs:documentation>
                                        </xs:annotation>
                                        <xs:simpleType>
                                            <xs:restriction base="xs:token">
                                                <xs:enumeration value="0.00mm" />
                                                <xs:enumeration value="0.05mm" />
                                                <xs:enumeration value="0.09mm" />
                                                <xs:enumeration value="0.13mm" />
                                                <xs:enumeration value="0.15mm" />
                                                <xs:enumeration value="0.18mm" />
                                                <xs:enumeration value="0.20mm" />
                                                <xs:enumeration value="0.25mm" />
                                                <xs:enumeration value="0.30mm" />
                                                <xs:enumeration value="0.35mm" />
                                                <xs:enumeration value="0.40mm" />
                                                <xs:enumeration value="0.50mm" />
                                                <xs:enumeration value="0.53mm" />
                                                <xs:enumeration value="0.60mm" />
                                                <xs:enumeration value="0.70mm" />
                                                <xs:enumeration value="0.80mm" />
                                                <xs:enumeration value="0.90mm" />
                                                <xs:enumeration value="1.00mm" />
                                                <xs:enumeration value="1.06mm" />
                                                <xs:enumeration value="1.20mm" />
                                                <xs:enumeration value="1.40mm" />
                                                <xs:enumeration value="1.58mm" />
                                                <xs:enumeration value="2.00mm" />
                                                <xs:enumeration value="2.11mm" />
                                            </xs:restriction>
                                        </xs:simpleType>
                                    </xs:attribute>
                                    <xs:attribute name="DgnWeight" use="required">
                                        <xs:annotation>
                                            <xs:documentation>
                                                DGN weight
                                            </xs:documentation>
                                        </xs:annotation>
                                        <xs:simpleType>
                                            <xs:restriction base="xs:positiveInteger">
                                                <xs:minInclusive value="0" />
                                                <xs:maxInclusive value="32" />
                                            </xs:restriction>
                                        </xs:simpleType>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                </xs:element>
                <xs:element name="Fonts" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>Controls how fonts are imported.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="Font" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Fonts are identified by their type and name. Last-in wins. Wildcards are used as defaults, which are always overridden by explicitly named fonts.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="EmbedAction" minOccurs="0" maxOccurs="1">
                                            <xs:annotation>
                                                <xs:documentation>By default, all used fonts are imported and embedded. Use this element to override the embedding of the font.</xs:documentation>
                                            </xs:annotation>
                                            <xs:simpleType>
                                                <xs:restriction base="xs:string">
                                                    <xs:enumeration value="IfUsed">
                                                        <xs:annotation>
                                                            <xs:documentation>This is the default. If this font is used in the file, the converter will attempt to find it and embed it.</xs:documentation>
                                                        </xs:annotation>
                                                    </xs:enumeration>
                                                    <xs:enumeration value="Always">
                                                        <xs:annotation>
                                                            <xs:documentation>Always attempt to find this font on the system and embed it, regardless of whether it was used in the file.</xs:documentation>
                                                        </xs:annotation>
                                                    </xs:enumeration>
                                                    <xs:enumeration value="Never">
                                                        <xs:annotation>
                                                            <xs:documentation>Never attempt to find this font and embed it, regardless of whether it was used in the file.</xs:documentation>
                                                        </xs:annotation>
                                                    </xs:enumeration>
                                                </xs:restriction>
                                            </xs:simpleType>
                                        </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="type" use="required">
                                        <xs:simpleType>
                                            <xs:restriction base="xs:string">
                                                <xs:enumeration value="*"/>
                                                <xs:enumeration value="SHX"/>
                                                <xs:enumeration value="TrueType"/>
                                            </xs:restriction>
                                        </xs:simpleType>
                                    </xs:attribute>
                                    <xs:attribute name="name" use="required"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="searchPaths" use="optional">
                            <xs:annotation>
                                <xs:documentation>A semi-colon delimited list of paths to search for fonts found in DWG files. The special token $(AppRoot) can be used to reference the path of the importer executable.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element name="Raster" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>Controls how DWG raster images are merged into the database.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute name="ImportRasters" type="xs:boolean" use="required">
                            <xs:annotation>
                                <xs:documentation>
                                    This controls whether a raster image is imported.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element name="PointClouds" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>Controls how DWG point clouds are merged into the database.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute name="ImportPointClouds" type="xs:boolean" use="required">
                            <xs:annotation>
                                <xs:documentation>
                                    This controls whether a point cloud attachment is imported or ignored.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="LevelOfDetails" type="xs:integer" use="optional">
                            <xs:simpleType>
                                <xs:annotation>
                                    <xs:documentation>
                                        This controls Level Of Details for a point cloud.  ACAD allows a value between 0 & 100.
                                    </xs:documentation>
                                </xs:annotation>
                                <xs:restriction base="xs:positiveInteger">
                                    <xs:minInclusive value="0" />
                                    <xs:maxInclusive value="100" />
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element name="ObjectEnablers" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation> Options for object enablers </xs:documentation>
                    </xs:annotation>
                    <xs:element name="PreLoadModules" minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation> 
                                Object enablers that are required to be pre-loaded into DwgImporter
                            </xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:list>
                                <xs:element name="Module" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation> Module name to be pre-loaded </xs:documentation>
                                    </xs:annotation>
                                <xs:attribute name="name" type="xs:string" use="required">
                                    <xs:annotation>
                                        <xs:documentation> 
                                            Object enabler module name, containing file extension. 
                                        </xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                                </xs:element>
                            </xs:list>
                        </xs:complexType>
                </xs:element>
                <xs:element name="Materials" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>Controls how materials are imported.</xs:documentation>
                    </xs:annotation>
                    <xs:element name="SearchPaths" minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation> A path list to search for material texture files </xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:list>
                                <xs:element name="Path" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation> A folder containing material textures </xs:documentation>
                                    </xs:annotation>
                                <xs:attribute name="name" type="xs:string" use="required">
                                    <xs:annotation>
                                        <xs:documentation> Full path name </xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                                </xs:element>
                            </xs:list>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="SearchOptions" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="IncludeDwgPath" type="xs:boolean" use="optional">
                                <xs:annotation>
                                    <xs:documentation> Should the input DWG path also be included in the material search? </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        <xs:complexType>
                    </xs:element>
                </xs:element>
                <xs:element name="Thumbnails" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            This configuration information informs the code that generates thumbnail images from views during DgnDb import. Unlike most DgnDb import logic, the thumbnail logic is in DgnView.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute name="viewTypes">
                            <xs:simpleType>
                                <xs:annotation>
                                    <xs:documentation>
                                        This is a space separated list of the view types that the importer should render into thumbnail images and include in the properties table as blobs.
                                    </xs:documentation>
                                </xs:annotation>
                                <xs:list>
                                    <xs:simpleType>
                                        <xs:restriction base="xs:token">
                                            <xs:enumeration value="None"/>
                                            <xs:enumeration value="Physical">
                                                <xs:annotation>
                                                    <xs:documentation>
                                                        View of a physical, 3d project model
                                                    </xs:documentation>
                                                </xs:annotation>
                                            </xs:enumeration>
                                            <xs:enumeration value="Sheet">
                                                <xs:annotation>
                                                    <xs:documentation>
                                                        View of a sheet, 2d project model
                                                    </xs:documentation>
                                                </xs:annotation>
                                            </xs:enumeration>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:list>
                            </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="pixelResolution">
                            <xs:annotation>
                                <xs:documentation>
                                    This controls pixel resolution of any thumbnails generated by DgnViewTable::RenderAndSaveThumbnail() method at DgnDb import time. Note that this controls both the x and y resolution (the images are always square).
                                </xs:documentation>
                            </xs:annotation>
                            <xs:simpleType>
                                <xs:restriction base="xs:positiveInteger">
                                    <xs:minInclusive value="64" />
                                    <xs:maxInclusive value="1600" />
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="renderModeOverride">
                            <xs:annotation>
                                <xs:documentation>
                                    Provide this element to override the render mode that is naturally defined within the view defintion.
                                </xs:documentation>
                            </xs:annotation>
                            <xs:simpleType>
                                <xs:restriction base="xs:token">
                                    <xs:enumeration value="None"/>
                                    <xs:enumeration value="Wireframe"/>
                                    <xs:enumeration value="HiddenLine"/>
                                    <xs:enumeration value="SolidFill"/>
                                    <xs:enumeration value="SmoothShade"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>

                <xs:element name="Options" minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="ZAbstractOptionBase" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                    <xs:unique name="OptionsCannotShareNames">
                        <xs:selector xpath="*"/>
                        <xs:field xpath="@name"/>
                    </xs:unique>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="ZAbstractOptionBaseCT">
        <xs:attribute name="name" type="xs:Name" use="required"/>
    </xs:complexType>
    <!-- ======================================================================================= -->
    <xs:element name="ZAbstractOptionBase" type="ZAbstractOptionBaseCT" abstract="true"/>
    <!-- ======================================================================================= -->
    <xs:element name="OptionString" substitutionGroup="ZAbstractOptionBase">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="ZAbstractOptionBaseCT">
                    <xs:attribute name="value" type="xs:string" use="required"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="OptionBool" substitutionGroup="ZAbstractOptionBase">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="ZAbstractOptionBaseCT">
                    <xs:attribute name="value" type="xs:boolean" use="required"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="OptionDouble" substitutionGroup="ZAbstractOptionBase">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="ZAbstractOptionBaseCT">
                    <xs:attribute name="value" type="xs:double" use="required"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="OptionInt64" substitutionGroup="ZAbstractOptionBase">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="ZAbstractOptionBaseCT">
                    <xs:attribute name="value" type="xs:long" use="required"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

</xs:schema>
