#----------------------------------------------------------------------
#
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#
#----------------------------------------------------------------------
%if $(DWGTOOLKIT) != "OpenDwg" || !defined(VendorVersion)
    %error  C3dBridge depends on OpenDWG toolkit of a correct version!
%endif

%include mdl.mki

appName         = C3dImporter
baseDir         = $(_MakeFilePath)

CompileOptionsMki = $(baseDir)C3dCompileOptions.mki
%include $(CompileOptionsMki)

o               = $(OutputRootDir)Build/$(appName)/
always:
    ~mkdir $(o)

ImportC3dDepends = $(baseDir)C3dInternal.h      \
                   $(baseDir)C3dImporter.h      \
                   $(baseDir)C3dHelper.h        \
                   $(baseDir)C3dProtocolExtensions.h \
                   $(DwgPublicAPI)DwgL10N.h     \
                   $(DwgPublicAPI)DwgBridge.h   \
                   $(DwgPublicAPI)DwgHelper.h   \
                   $(DwgPublicAPI)DwgImporter.h \
                   $(DwgPublicAPI)ProtocalExtensions.h

#--------------------------------------------------------------------------------------
#   Create prg.h header with build version numbers
#--------------------------------------------------------------------------------------
%include $(SharedMki)CreateBuildVersionHeader.mki

#----------------------------------------------------------------------
#   Compile C3dImporter
#----------------------------------------------------------------------
MultiCompileIntermediatePdbFile = $(o)$(CCompPDBName).pdb
IntermediatePdbFile             = $(MultiCompileIntermediatePdbFile)
PchCompiland                    = $(baseDir)C3dInternal.cpp
PchOutputDir                    = $(o)

%include $(SharedMki)PreCompileHeader.mki

CCPchOpts           = $(UsePrecompiledHeaderOptions)
CPchOpts            = $(UsePrecompiledHeaderOptions)
MultiCompileDepends = $(_MakeFileSpec)
%include MultiCppCompileRule.mki

$(o)$(appName).obj : $(baseDir)$(appName).cpp $(ImportC3dDepends) ${MultiCompileDepends}

$(o)ImportC3dSchema.obj : $(baseDir)ImportC3dSchema.cpp $(ImportC3dDepends) ${MultiCompileDepends}

$(o)ImportAlignment.obj : $(baseDir)ImportAlignment.cpp $(ImportC3dDepends) ${MultiCompileDepends}

$(o)ImportCorridor.obj : $(baseDir)ImportCorridor.cpp $(ImportC3dDepends) ${MultiCompileDepends}

$(o)ImportFeatureLine.obj : $(baseDir)ImportFeatureLine.cpp $(ImportC3dDepends) ${MultiCompileDepends}

$(o)C3dProvenance.obj : $(baseDir)C3dProvenance.cpp $(ImportC3dDepends) ${MultiCompileDepends}

$(o)C3dHelper.obj : $(baseDir)C3dHelper.cpp $(ImportC3dDepends) ${MultiCompileDepends}

%include MultiCppCompileGo.mki

#----------------------------------------------------------------------
#   Link the DLL
#----------------------------------------------------------------------
LINKER_LIBRARIES    = $(DwgImporterLib)
LINKER_LIBRARIES    + $(DwgBridgeLib)
LINKER_LIBRARIES    + $(DwgDbLibDir)$(DWGTOOLKIT)DbExchange$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)BeSQLite$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)BeSQLiteEC$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)Bentley$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)BentleyGeom$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)DgnPlatform$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)BeJsonCpp$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)ECObjects$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)ECPresentation$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)BeXml$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)iModelBridge$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)WebServicesClient$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)LinearReferencing$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)RoadRailAlignment$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)RoadRailPhysical$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)CivilBaseGeometry$(libext)
LINKER_LIBRARIES    + $(ToolkitLibs)TD_Root$(libext)
LINKER_LIBRARIES    + $(ToolkitLibs)TD_DbCore$(libext)
LINKER_LIBRARIES    + $(ToolkitLibs)TD_Ge$(libext)

LINKER_LIBRARIES_DELAYLOADED    = $(ToolkitLibs)TD_Db$(libext)
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)TD_DbRoot$(libext)
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)TD_DbEntities$(libext)
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)TD_DbIO$(libext)
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)TD_Alloc$(libext)
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)TD_Key$(libext)
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)TD_Gi$(libext)
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)TD_Gs$(libext)
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AecBase.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccBuildingSite.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccExtensions.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccHydrology.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AecCivilBase.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccLand.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccNetwork.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccPlanProd.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccPointCloud.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccPressurePipes.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccRoadway.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccSurvey.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccUiLand.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)AeccvBase.lib
LINKER_LIBRARIES_DELAYLOADED    + $(ToolkitLibs)FacetModeler.lib

DLM_NAME            = $(appName)
DLM_DEST            = $(o)
DLM_OBJECT_DEST     = $(o)
DLM_EXPORT_DEST     = $(o)
DLM_OBJECT_PCH      = $(o)C3dInternal$(oext)
DLM_OBJECT_FILES    = $(MultiCompileObjectList)
DLM_NOINITFUNC      = 1
DLM_NOENTRY         = 1

%include $(sharedMki)LinkLibrary.mki

#----------------------------------------------------------------------
#   Symlink C3D schemas
#----------------------------------------------------------------------
always:
    ~linkmultifiles "$(BuildContext)Delivery=$(baseDir)ECSchemas/*.xml"
