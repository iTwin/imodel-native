#----------------------------------------------------------------------
#
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#
#----------------------------------------------------------------------
%if $(DWGTOOLKIT) != "OpenDwg") || !defined(VendorVersion)
    %error  C3dBridge depends on OpenDWG toolkit of a correct version!
%endif

DwgImporterDir  = OpenDwg
DwgDbLibSubDir  =
VendorSubDir    = Teigha

%include mdl.mki

baseDir         = $(_MakeFilePath)
C3dImporterDir  = $(baseDir)../
DwgPublicAPI    = $(BuildContext)PublicAPI/Dwg/
DwgVendorAPI    = $(BuildContext)VendorAPI/$(VendorSubDir)/
DwgImporterLib  = $(BuildContext)SubParts/Files/$(DwgImporterDir)/DwgImporter$(libext)
DwgBridgeLib    = $(BuildContext)SubParts/Files/$(DwgImporterDir)/DwgBridge$(libext)
DwgDbLibDir     = $(ContextSubpartsLibs)$(DwgDbLibSubDir)

C3dAppDepends = $(DwgPublicAPI)DwgBridge.h      \
                $(baseDir)C3dBridge.h           \
                $(DwgPublicAPI)DwgImporter.h    \
                $(C3dImporterDir)C3dImporter.h

CCompOpts + -DDWGTOOLKIT_$(DWGTOOLKIT) -DODA_NEED_TEMP_USING -DADT_DYNAMIC_BUILD
CCompOpts + -I$(DwgVendorAPI) -I$(DwgVendorAPI)Kernel/Include/ -I$(DwgVendorAPI)Kernel/Extensions/ExServices/ -I$(DwgVendorAPI)Drawing/Include/ -I$(DwgVendorAPI)Architecture/ -I$(DwgVendorAPI)Civil/ -I$(DwgVendorAPI)FacetModeler/

o   = $(OutputRootDir)Build/C3dBridge/
always:
    ~mkdir $(o)

#--------------------------------------------------------------------------------------
#   Create prg.h header with build version numbers
#--------------------------------------------------------------------------------------
%include $(SharedMki)CreateBuildVersionHeader.mki

#----------------------------------------------------------------------
#   Compile C3dBridge
#----------------------------------------------------------------------
MultiCompileDepends = $(_MakeFileSpec)
%include MultiCppCompileRule.mki

$(o)C3dBridge.obj   : $(baseDir)C3dBridge.cpp $(C3dAppsDepends) ${MultiCompileDepends}

%include MultiCppCompileGo.mki

#----------------------------------------------------------------------
#   Link the DLL
#----------------------------------------------------------------------
LINKER_LIBRARIES    = $(DwgImporterLib)
LINKER_LIBRARIES    + $(DwgBridgeLib)
LINKER_LIBRARIES    + $(DwgDbLibDir)$(DWGTOOLKIT)DbExchange$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)C3dImporter$(libext)

LINKER_LIBRARIES_DELAYLOADED = $(ContextSubpartsLibs)Bentley$(libext)
LINKER_LIBRARIES_DELAYLOADED + $(ContextSubpartsLibs)DgnPlatform$(libext)
LINKER_LIBRARIES_DELAYLOADED + $(ContextSubpartsLibs)iModelBridge$(libext)
LINKER_LIBRARIES_DELAYLOADED + $(ContextSubpartsLibs)WebServicesClient$(libext)

DLM_NAME            = C3dBridge
DLM_DEST            = $(o)
DLM_OBJECT_DEST     = $(o)
DLM_EXPORT_DEST     = $(o)
DLM_OBJECT_FILES    = $(MultiCompileObjectList)
DLM_NOINITFUNC      = 1
DLM_NOENTRY         = 1
DLM_NO_IMPLIB       = 1

%include $(sharedMki)LinkLibrary.mki


#----------------------------------------------------------------------
#   Compile C3dImportApp
#----------------------------------------------------------------------
MultiCompileDepends = $(_MakeFileSpec)
%include MultiCppCompileRule.mki

$(o)C3dImportApp.obj    : $(baseDir)C3dImportApp.cpp $(ImportC3dDepends) ${MultiCompileDepends}

%include MultiCppCompileGo.mki

#----------------------------------------------------------------------
#   Link the EXE
#----------------------------------------------------------------------
EXE_NAME            = C3dImporter
EXE_DEST            = $(o)
EXE_OBJS            = $(MultiCompileObjectList)
EXE_LOPT1           = -entry:wmainCRTStartup
EXE_TMP_DIR         = $(o)

LINKER_LIBRARIES    = $(DwgImporterLib)
LINKER_LIBRARIES    + $(DwgBridgeLib)
LINKER_LIBRARIES    + $(o)C3dBridge$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)C3dImporter$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)Bentley$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)BeSQLite$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)DgnPlatform$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)iModelBridge$(libext)
LINKER_LIBRARIES    + $(ContextSubpartsLibs)WebServicesClient$(libext)

%if $(DWGTOOLKIT) == "RealDwg"
LINKER_LIBRARIES    + $(DwgDbLibDir)acpal$(libext)
%endif

%include $(sharedMki)linktool.mki
