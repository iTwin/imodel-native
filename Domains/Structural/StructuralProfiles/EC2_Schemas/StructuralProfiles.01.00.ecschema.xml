<?xml version="1.0" encoding="utf-8"?>
<!--
 $RCSfile: BuildingPhysical.01.00.ecschema.xml,v $
 $Revision: 1.15 $
 $Date: 2014/09/01 12:40:45 $
 $Copyright: (c) 2017 Bentley Systems, Incorporated. All rights reserved. $

 Warning!!! Auto Generated!.
-->
<ECSchema schemaName="StructuralProfiles" nameSpacePrefix="StrProf" version="1.0" description="Structural Profile Schema" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.2.0">
    <ECSchemaReference name="Bentley_Standard_CustomAttributes" version="01.00" prefix="bsca" />
    <ECSchemaReference name="BisCore" version="01.00" prefix="bis" />
    <ECSchemaReference name="ECDbMap" version="02.00" prefix="ecdbmap" />
    <ECSchemaReference name="CoreCustomAttributes" version="01.00" prefix="CoreCA" />
    <ECSchemaReference name="EditorCustomAttributes" version="01.00" prefix="beca" />
    <ECSchemaReference name="Unit_Attributes" version="01.00" prefix="units_attribs" />
    <ECCustomAttributes>
        <SchemaChangeTrackingState xmlns="Bentley_Standard_CustomAttributes.01.00">
            <FinalizationHistory />
            <TrackingEnabled>True</TrackingEnabled>
            <SchemaFullNameAtEditingStart>StructuralProfiles.01.00</SchemaFullNameAtEditingStart>
        </SchemaChangeTrackingState>
    </ECCustomAttributes>
    <ECClass typeName="Profile" description="A structural cross section profile (2D shape)." isDomainClass="False">
        <BaseClass>bis:DefinitionElement</BaseClass>
    </ECClass>
    <ECClass typeName="ConstantProfile" description="A Profile that does not varying along its length (unlike Varying Profile)." isDomainClass="True">
        <BaseClass>Profile</BaseClass>
        <ECProperty propertyName="Shape" typeName="Bentley.Geometry.Common.ISurfaceGroup" />
        <ECProperty propertyName="StandardizedProperties" typeName="string" description="JSON storage of section properties using BIS-standard names and BIS-standard units." />
        <ECArrayProperty propertyName="AlternateShapeClassification" typeName="string" description="Alternative ways shape can be classified. See ShapeClassification for list of standard values." minOccurs="1" maxOccurs="1" />
        <ECProperty propertyName="ShapeClassification" typeName="string" description="The primary classification of the shape. Leave unset if unknown. Standard values are&quot;BentPlate&quot;, &quot;C&quot;, &quot;DoubleL&quot;, &quot;HollowCircle&quot;, &quot;HollowRectangle&quot;, &quot;I&quot;, &quot;L&quot;, &quot;RoundedC&quot;, &quot;RoundedLippedC&quot;, &quot;RoundedLippedZ&quot;, &quot;RoundedHollowRectangle&quot;, &quot;RoundedZ&quot;, &quot;SchifflerizedL&quot;, &quot;SolidCircle&quot;, &quot;SolidRectangle&quot;, &quot;T&quot;." />
    </ECClass>
    <ECClass typeName="BuiltUpProfile" description="A Constant Profile that is built up from other Constant Profiles." isDomainClass="True">
        <BaseClass>ConstantProfile</BaseClass>
    </ECClass>
    <ECClass typeName="BuiltUpProfileComponent" isDomainClass="True">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECProperty propertyName="Index" typeName="int" description="Zero-based index corresponding to the order in which this component was added to its BuiltUpProfile." />
        <ECProperty propertyName="PlacementPoint" typeName="int" description="The identifier of the location on the related Profile that is Offet away from 0,0 of BuiltUpProfile. This values are exactly the same as CIS/2 cardinal points." />
        <ECProperty propertyName="MirrorProfileAboutYAxis" typeName="boolean" description="The profile used by the component is actually a mirror image of Profile. The mirroring is done about the profile's y-axis and is done before rotation and before determining the PlacementPoint." />
        <ECProperty propertyName="Offset" typeName="point2d" description="The offset in BuiltUpProfile coordinates from 0,0 to the PlacementPoint." />
        <ECProperty propertyName="Rotation" typeName="double" description="The rotation of this component's profile relative to the BuiltUpProfile's axes. Rotation are positive ccw (acw). A value of zero implies that the profile's x- and y- axes are parallel to those of the BuiltUpProfile. All rotation is done about the PlacementPoint.">
            <ECCustomAttributes>
                <Unit_Attributes xmlns="Unit_Attributes.01.00" />
            </ECCustomAttributes>
        </ECProperty>
    </ECClass>
    <ECRelationshipClass typeName="BuiltUpProfileOwnsComponent" description="BuildUpProfile's ownership of BuildUpProfileComponent." isDomainClass="True" strength="embedding" strengthDirection="forward">
        <Source cardinality="(0,1)" polymorphic="False">
            <Class class="BuiltUpProfile" />
        </Source>
        <Target cardinality="(0,N)" polymorphic="False">
            <Class class="BuiltUpProfileComponent" />
        </Target>
    </ECRelationshipClass>
    <ECClass typeName="ParametricProfile" description="A Constant Profile that can be defined by a small set of dimensions and a known profile type." isDomainClass="True">
        <BaseClass>ConstantProfile</BaseClass>
        <ECProperty propertyName="InputProperties" typeName="string" description="JSON storage of input properties for the parametric shape." />
    </ECClass>
    <ECRelationshipClass typeName="ProfileComponentUsesProfile" isDomainClass="True" strength="referencing" strengthDirection="forward">
        <Source cardinality="(0,1)" polymorphic="False">
            <Class class="BuiltUpProfileComponent" />
        </Source>
        <Target cardinality="(0,1)" polymorphic="False">
            <Class class="ConstantProfile" />
        </Target>
    </ECRelationshipClass>
    <ECClass typeName="VaryingProfileZone" description="This aspect defines a zone of a VaryingProfileByZone." isDomainClass="True">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECProperty propertyName="Index" typeName="int" description="Zero-based index corresponding to the order of zones within the VaryingProfileByZone." />
        <ECProperty propertyName="Transition" typeName="string" description="The transition of the profile between StartProfile and EndProfile along this zone. Standard values are &quot;Linear&quot;, &quot;ParabolicAtStart&quot;, &quot;ParabolicAtEnd&quot;, &quot;ParabolicAtBothEnds&quot;" />
    </ECClass>
    <ECRelationshipClass typeName="ProfileZoneUsesEndProfile" isDomainClass="True" strength="referencing" strengthDirection="forward">
        <Source cardinality="(0,1)" polymorphic="False">
            <Class class="VaryingProfileZone" />
        </Source>
        <Target cardinality="(0,1)" polymorphic="True">
            <Class class="ConstantProfile" />
        </Target>
    </ECRelationshipClass>
    <ECRelationshipClass typeName="ProfileZoneUsesStartProfile" isDomainClass="True" strength="referencing" strengthDirection="forward">
        <Source cardinality="(0,1)" roleLabel="uses start profile" polymorphic="False">
            <Class class="VaryingProfileZone" />
        </Source>
        <Target cardinality="(0,1)" roleLabel="is start profile for" polymorphic="True">
            <Class class="ConstantProfile" />
        </Target>
    </ECRelationshipClass>
    <ECClass typeName="PublishedProfile" description="A Constant Profile that is defined by a standards organization or other publisher." isDomainClass="True">
        <BaseClass>ConstantProfile</BaseClass>
        <ECProperty propertyName="Publisher" typeName="string" description="Name of the organization that published this profile." />
        <ECProperty propertyName="Document" typeName="string" description="The name of the document, catalog or standard that this profile was published in." />
        <ECProperty propertyName="Version" typeName="string" description="The version of the document, catalog or standard that that published this profile." />
    </ECClass>
    <ECClass typeName="VaryingProfile" description="A Profile that varies along its length (unlike Constant Profile)." isDomainClass="False">
        <BaseClass>Profile</BaseClass>
    </ECClass>
    <ECClass typeName="VaryingProfileByZone" description="A Varying Profile that is defined using zones along its length." isDomainClass="True">
        <BaseClass>VaryingProfile</BaseClass>
    </ECClass>
    <ECRelationshipClass typeName="VaryingProfileOwnsZone" description="VaryingProfileByZone's ownership of VaryingProfileZone." isDomainClass="True" strength="embedding" strengthDirection="forward">
        <Source cardinality="(0,1)" roleLabel="owns zone" polymorphic="False">
            <Class class="VaryingProfileByZone" />
        </Source>
        <Target cardinality="(0,N)" roleLabel="is zone of" polymorphic="False">
            <Class class="VaryingProfileZone" />
        </Target>
    </ECRelationshipClass>
</ECSchema>