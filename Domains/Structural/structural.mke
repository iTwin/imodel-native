#---------------------------------------------------------------------------------------+
#
#     $Source: structural.mke $
#
#  $Copyright: (c) 2017 Bentley Systems, Incorporated. All rights reserved. $
#
#---------------------------------------------------------------------------------------+
%include mdl.mki

CompileOptionsMki   = $(SrcRoot)DgnDomains/Structural/StructuralCompileOptions.mki
%include $(CompileOptionsMki)

StructPhysical          = $(_MakeFilePath)StructuralPhysical/
StructPhysicalPublicAPI = $(StructPhysical)PublicAPI/

#--------------------------------------------------------------------------------------
#   Macros
#--------------------------------------------------------------------------------------
appSrc              = $(_MakeFilePath)
appPublicApi        = $(appSrc)PublicAPI/$(appName)/
MultiCompileDepends = $(_MakeFileSpec) \

always:
    !~@mkdir $(o)

#----------------------------------------------------------------------
#   Pre-compiled header
#----------------------------------------------------------------------
# PchCompiland        = $(appSrc)___.cpp
# PchOutputDir        = $(o)
# PchExtraOptions     = -Zm160
# PchExplicitDepends  = $(MultiCompileDepends)

%if defined (winNT) && $(BUILD_TOOLSET) == "LINUX_GCC"
    # Avoid internal compiler error in GCC using windows ndk toolchain
    GCC_NO_PRE_COMPILED_HEADER = 1
%endif

# %include $(SharedMki)PreCompileHeader.mki

CCPchOpts = $(UsePrecompiledHeaderOptions)
CPchOpts  = $(UsePrecompiledHeaderOptions)

StructBase            = $(_MakeFilePath)
StructBasePublicAPI   = $(StructBase)PublicAPI/StructuralDomain/

StructCommon            = $(_MakeFilePath)StructuralCommon/
StructCommonPublicAPI   = $(StructCommon)PublicAPI/StructuralCommon/

StructPhys            = $(_MakeFilePath)StructuralPhysical/
StructPhysPublicAPI   = $(StructPhys)PublicAPI/StructuralPhysical/

StructProfiles            = $(_MakeFilePath)StructuralProfiles/
StructProfilesPublicAPI   = $(StructProfiles)PublicAPI/StructuralProfiles/

StructMaterial            = $(_MakeFilePath)StructuralMaterial/
StructMaterialPublicAPI   = $(StructMaterial)PublicAPI/StructuralMaterial/
#--------------------------------------------------------------------------------------
#   Compile source
#--------------------------------------------------------------------------------------

%include MultiCppCompileRule.mki

# Structural Domain
$(o)StructuralDomainUtilities$(oext) : $(StructBase)StructuralDomainUtilities.cpp \
    ${MultiCompileDepends} \
    $(StructBasePublicAPI)StructuralDomainApi.h \
    $(StructBasePublicAPI)StructuralDomainUtilities.h \
    $(StructCommonPublicAPI)StructuralCommonApi.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDomain.h \
    $(StructCommonPublicAPI)StructuralPhysicalModel.h \
    $(StructPhysPublicAPI)StructuralPhysicalApi.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructPhysPublicAPI)StructuralPhysicalDomain.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)SurfaceMember.h \
    $(StructPhysPublicAPI)StructuralAddition.h \
    $(StructPhysPublicAPI)StructuralSubtraction.h \
    $(StructPhysPublicAPI)Slab.h \
    $(StructPhysPublicAPI)Wall.h \
    $(StructPhysPublicAPI)CurveMember.h \
    $(StructPhysPublicAPI)Beam.h \
    $(StructPhysPublicAPI)Brace.h \
    $(StructPhysPublicAPI)Column.h \
    $(StructPhysPublicAPI)FoundationMember.h \
    $(StructPhysPublicAPI)SpreadFooting.h \
    $(StructPhysPublicAPI)StripFooting.h \
    $(StructMaterialPublicAPI)MaterialProperties.h \
    $(StructMaterialPublicAPI)ConcreteMaterialProperties.h \
    $(StructMaterialPublicAPI)SteelMaterialProperties.h

# Structural Common
$(o)StructuralCommonDomain$(oext) : $(StructCommon)StructuralCommonDomain.cpp \
    ${MultiCompileDepends} \
    $(StructCommonPublicAPI)StructuralCommonDomain.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)StructuralPhysicalModel$(oext) : $(StructCommon)StructuralPhysicalModel.cpp \
    ${MultiCompileDepends} \
    $(StructCommonPublicAPI)StructuralPhysicalModel.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

# Structural Physical
$(o)StructuralPhysicalDomain$(oext) : $(StructPhys)StructuralPhysicalDomain.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)StructuralPhysicalDomain.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)StructuralElement$(oext) : $(StructPhys)StructuralElement.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)StructuralMember$(oext) : $(StructPhys)StructuralMember.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)StructuralAddition$(oext) : $(StructPhys)StructuralAddition.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)StructuralAddition.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)StructuralSubtraction$(oext) : $(StructPhys)StructuralSubtraction.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)StructuralSubtraction.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)SurfaceMember$(oext) : $(StructPhys)SurfaceMember.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)SurfaceMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)Slab$(oext) : $(StructPhys)Slab.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)Slab.h \
    $(StructPhysPublicAPI)SurfaceMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)Wall$(oext) : $(StructPhys)Wall.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)Wall.h \
    $(StructPhysPublicAPI)SurfaceMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)CurveMember$(oext) : $(StructPhys)CurveMember.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)CurveMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)Beam$(oext) : $(StructPhys)Beam.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)Beam.h \
    $(StructPhysPublicAPI)CurveMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)Column$(oext) : $(StructPhys)Column.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)Column.h \
    $(StructPhysPublicAPI)CurveMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)Brace$(oext) : $(StructPhys)Brace.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)Brace.h \
    $(StructPhysPublicAPI)CurveMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)FoundationMember$(oext) : $(StructPhys)FoundationMember.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)FoundationMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)StripFooting$(oext) : $(StructPhys)StripFooting.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)StripFooting.h \
    $(StructPhysPublicAPI)FoundationMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)SpreadFooting$(oext) : $(StructPhys)SpreadFooting.cpp \
    ${MultiCompileDepends} \
    $(StructPhysPublicAPI)SpreadFooting.h \
    $(StructPhysPublicAPI)FoundationMember.h \
    $(StructPhysPublicAPI)StructuralMember.h \
    $(StructPhysPublicAPI)StructuralElement.h \
    $(StructPhysPublicAPI)StructuralPhysicalDefinitions.h \
    $(StructCommonPublicAPI)StructuralCommonDefinitions.h

$(o)MaterialProperties$(oext) : $(StructMaterial)MaterialProperties.cpp \
    ${MultiCompileDepends} \
    $(StructMaterialPublicAPI)MaterialProperties.h 

$(o)ConcreteMaterialProperties$(oext) : $(StructMaterial)ConcreteMaterialProperties.cpp \
    ${MultiCompileDepends} \
    $(StructMaterialPublicAPI)ConcreteMaterialProperties.h \
    $(StructMaterialPublicAPI)MaterialProperties.h 

$(o)SteelMaterialProperties$(oext) : $(StructMaterial)SteelMaterialProperties.cpp \
    ${MultiCompileDepends} \
    $(StructMaterialPublicAPI)SteelMaterialProperties.h \
    $(StructMaterialPublicAPI)MaterialProperties.h

%include MultiCppCompileGo.mki

#--------------------------------------------------------------------------------------
#   Create the library
#--------------------------------------------------------------------------------------
DLM_NAME                    = $(appName)
DLM_OBJECT_FILES            = $(MultiCompileObjectList)
DLM_OBJECT_DEST             = $(o)
# DLM_OBJECT_PCH              = $(o)____$(oext) 
DLM_DEST                    = $(o)
DLM_EXPORT_DEST             = $(o)
DLM_NOENTRY                 = 1
DLM_NO_DLS                  = 1
DLM_NO_DEF                  = 1
DLM_CONTEXT_LOCATION        = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION    = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1

LINKER_LIBRARIES            = $(BuildContext)SubParts/Libs/$(libprefix)BeSQLite$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeSQLiteEC$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BentleyGeom$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BentleyGeomSerialization$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)ECObjects$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)DgnPlatform$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeXml$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeLibxml2$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeJsonCpp$(libext)

%include $(sharedMki)linkLibrary.mki

