#---------------------------------------------------------------------------------------+
#
#     $Source: structural.mke $
#
#  $Copyright: (c) 2017 Bentley Systems, Incorporated. All rights reserved. $
#
#---------------------------------------------------------------------------------------+
%include mdl.mki

CompileOptionsMki   = $(SrcRoot)DgnDomains/Structural/StructuralCompileOptions.mki
%include $(CompileOptionsMki)


ConcreteSrc       = $(_MakeFilePath)ConcreteSchema/
ConcretePublicApi = $(ConcreteSrc)PublicAPI/Concrete/

StructPhysSrc       = $(_MakeFilePath)StructuralPhysicalSchema/
StructPhysPublicApi = $(StructPhysSrc)PublicAPI/StructuralPhysical/

StructMatSrc       = $(_MakeFilePath)StructuralMaterials/
StructMatPublicApi = $(StructMatSrc)PublicAPI/StructuralMaterials/


#--------------------------------------------------------------------------------------
#   Macros
#--------------------------------------------------------------------------------------
appSrc              = $(_MakeFilePath)
appPublicApi        = $(appSrc)PublicAPI/$(appName)/
MultiCompileDepends = $(_MakeFileSpec) \
                      $(appSrc)StructuralDomainInternal.h \

always:
    !~@mkdir $(o)

#----------------------------------------------------------------------
#   Pre-compiled header
#----------------------------------------------------------------------
PchCompiland        = $(appSrc)StructuralDomainInternal.cpp
PchOutputDir        = $(o)
PchExtraOptions     = -Zm160
PchExplicitDepends  = $(MultiCompileDepends)

%if defined (winNT) && $(BUILD_TOOLSET) == "LINUX_GCC"
    # Avoid internal compiler error in GCC using windows ndk toolchain
    GCC_NO_PRE_COMPILED_HEADER = 1
%endif

%include $(SharedMki)PreCompileHeader.mki

CCPchOpts = $(UsePrecompiledHeaderOptions)
CPchOpts  = $(UsePrecompiledHeaderOptions)

#--------------------------------------------------------------------------------------
#   Compile source
#--------------------------------------------------------------------------------------

%include MultiCppCompileRule.mki

$(o)ConcreteDomain$(oext) : $(ConcreteSrc)ConcreteDomain.cpp ${MultiCompileDepends} $(ConcretePublicApi)ConcreteDomain.h

$(o)StructuralPhysicalDomain$(oext) : $(StructPhysSrc)StructuralPhysicalDomain.cpp ${MultiCompileDepends} $(StructPhysPublicApi)StructuralPhysicalDomain.h

$(o)StructuralPhysicalModel$(oext) : $(StructPhysSrc)StructuralPhysicalModel.cpp ${MultiCompileDepends} $(StructPhysPublicApi)StructuralPhysicalModel.h

$(o)StructuralTypeDefinitionModel$(oext) : $(StructPhysSrc)StructuralTypeDefinitionModel.cpp ${MultiCompileDepends} $(StructPhysPublicApi)StructuralTypeDefinitionModel.h

$(o)StructuralMaterialsDomain$(oext) : $(StructMatSrc)StructuralMaterialsDomain.cpp ${MultiCompileDepends} $(StructMatPublicApi)StructuralMaterialsDomain.h

$(o)StructuralDomainUtilities$(oext) : $(appSrc)StructuralDomainUtilities.cpp ${MultiCompileDepends} $(appPublicApi)StructuralDomainUtilities.h


%include MultiCppCompileGo.mki

#--------------------------------------------------------------------------------------
#   Create the library
#--------------------------------------------------------------------------------------
DLM_NAME                    = $(appName)
DLM_OBJECT_FILES            = $(MultiCompileObjectList)
DLM_OBJECT_DEST             = $(o)
DLM_OBJECT_PCH              = $(o)StructuralDomainInternal$(oext) 
DLM_DEST                    = $(o)
DLM_EXPORT_DEST             = $(o)
DLM_NOENTRY                 = 1
DLM_NO_DLS                  = 1
DLM_NO_DEF                  = 1
DLM_CONTEXT_LOCATION        = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION    = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1

LINKER_LIBRARIES            = $(BuildContext)SubParts/Libs/$(libprefix)BeSQLite$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeSQLiteEC$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BentleyGeom$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BentleyGeomSerialization$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)ECObjects$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)DgnPlatform$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeXml$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeLibxml2$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeJsonCpp$(libext)



%include $(sharedMki)linkLibrary.mki

