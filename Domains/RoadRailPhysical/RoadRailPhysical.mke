#---------------------------------------------------------------------------------------+
#
#     $Source: RoadRailPhysical.mke $
#
#  $Copyright: (c) 2016 Bentley Systems, Incorporated. All rights reserved. $
#
#---------------------------------------------------------------------------------------+
%include mdl.mki
%include $(SrcRoot)DgnDomains/RoadRailPhysical/RoadRailPhysical.mki

#--------------------------------------------------------------------------------------
#   Macros
#--------------------------------------------------------------------------------------
appSrc              = $(_MakeFilePath)
appPublicApi        = $(appSrc)PublicAPI/$(appName)/
MultiCompileDepends = $(_MakeFileSpec) $(appSrc)RoadRailPhysicalInternal.h $(appPublicApi)RoadRailPhysicalApi.h

always:
    !~@mkdir $(o)

#----------------------------------------------------------------------
#   Pre-compiled header
#----------------------------------------------------------------------
PchCompiland        = $(appSrc)RoadRailPhysicalInternal.cpp
PchOutputDir        = $(o)
PchExtraOptions     = -Zm160
PchExplicitDepends  = $(MultiCompileDepends)

%if defined (winNT) && $(BUILD_TOOLSET) == "LINUX_GCC"
    # Avoid internal compiler error in GCC using windows ndk toolchain
    GCC_NO_PRE_COMPILED_HEADER = 1
%endif

CompileOptionsMki =$(SrcRoot)DgnDomains/RoadRailPhysical/RoadRailPhysical.mki
%include $(CompileOptionsMki)
%include $(SharedMki)PreCompileHeader.mki

CCPchOpts = $(UsePrecompiledHeaderOptions)
CPchOpts  = $(UsePrecompiledHeaderOptions)

#--------------------------------------------------------------------------------------
#   Compile source
#--------------------------------------------------------------------------------------
%include MultiCppCompileRule.mki

$(o)CrossSection$(oext) : $(_MakeFilePath)CrossSection.cpp ${MultiCompileDepends} $(appPublicApi)CrossSection.h

$(o)ElementAspects$(oext) : $(_MakeFilePath)ElementAspects.cpp ${MultiCompileDepends} $(appPublicApi)ElementAspects.h

$(o)LinearReferencing$(oext) : $(_MakeFilePath)LinearReferencing.cpp ${MultiCompileDepends} $(appPublicApi)LinearReferencing.h

$(o)RoadClass$(oext) : $(_MakeFilePath)RoadClass.cpp ${MultiCompileDepends} $(appPublicApi)RoadClass.h

$(o)RoadDesignSpeed$(oext) : $(_MakeFilePath)RoadDesignSpeed.cpp ${MultiCompileDepends} $(appPublicApi)RoadDesignSpeed.h

$(o)RoadRailCategory$(oext) : $(_MakeFilePath)RoadRailCategory.cpp ${MultiCompileDepends} $(appPublicApi)RoadRailCategory.h

$(o)RoadRailPhysicalDomain$(oext) : $(_MakeFilePath)RoadRailPhysicalDomain.cpp ${MultiCompileDepends} $(appPublicApi)RoadRailPhysicalDomain.h

$(o)Segment$(oext) : $(_MakeFilePath)Segment.cpp ${MultiCompileDepends} $(appPublicApi)Segment.h

$(o)SegmentRange$(oext) : $(_MakeFilePath)SegmentRange.cpp ${MultiCompileDepends} $(appPublicApi)SegmentRange.h

$(o)RoadSegment$(oext) : $(_MakeFilePath)RoadSegment.cpp ${MultiCompileDepends} $(appPublicApi)RoadSegment.h

%include MultiCppCompileGo.mki

#--------------------------------------------------------------------------------------
#   Create the library
#--------------------------------------------------------------------------------------
DLM_NAME                    = $(appName)
DLM_OBJECT_FILES            = $(MultiCompileObjectList)
DLM_OBJECT_DEST             = $(o)
DLM_OBJECT_PCH              = $(o)RoadRailPhysicalInternal$(oext) 
DLM_DEST                    = $(o)
DLM_EXPORT_DEST             = $(o)
DLM_NOENTRY                 = 1
DLM_CONTEXT_LOCATION        = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION    = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1

LINKER_LIBRARIES            = $(BuildContext)SubParts/Libs/$(libprefix)BeSQLite$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BeSQLiteEC$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BentleyGeom$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BentleyGeomSerialization$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)ECObjects$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)DgnPlatform$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)LinearReferencing$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)RoadRailAlignment$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)Costing$(libext)
LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(libprefix)BridgePhysical$(libext)

%include $(sharedMki)linkLibrary.mki

