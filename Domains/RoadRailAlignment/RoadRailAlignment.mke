#---------------------------------------------------------------------------------------+
#
#     $Source: RoadRailAlignment.mke $
#
#  $Copyright: (c) 2017 Bentley Systems, Incorporated. All rights reserved. $
#
#---------------------------------------------------------------------------------------+
%include RoadRailAlignment.Analyzer.mki
%include mdl.mki
%include $(SrcRoot)DgnDomains/RoadRailAlignment/RoadRailAlignment.mki

#--------------------------------------------------------------------------------------
#   Macros
#--------------------------------------------------------------------------------------
appSrc              = $(_MakeFilePath)
appPublicApi        = $(appSrc)PublicAPI/$(appName)/
MultiCompileDepends = $(_MakeFileSpec) $(appSrc)RoadRailAlignmentInternal.h $(appPublicApi)RoadRailAlignmentApi.h

always:
    !~@mkdir $(o)

#----------------------------------------------------------------------
#   Pre-compiled header
#----------------------------------------------------------------------
PchCompiland        = $(appSrc)RoadRailAlignmentInternal.cpp
PchOutputDir        = $(o)
PchExtraOptions     = -Zm160
PchExplicitDepends  = $(MultiCompileDepends)

%if defined (winNT) && $(BUILD_TOOLSET) == "LINUX_GCC"
    # Avoid internal compiler error in GCC using windows ndk toolchain
    GCC_NO_PRE_COMPILED_HEADER = 1
%endif

CompileOptionsMki =$(SrcRoot)DgnDomains/RoadRailAlignment/RoadRailAlignment.mki
%include $(CompileOptionsMki)
%include $(SharedMki)PreCompileHeader.mki

CCPchOpts = $(UsePrecompiledHeaderOptions)
CPchOpts  = $(UsePrecompiledHeaderOptions)

#--------------------------------------------------------------------------------------
#   Compile source
#--------------------------------------------------------------------------------------
%include MultiCppCompileRule.mki

$(o)Alignment$(oext) : $(_MakeFilePath)Alignment.cpp ${MultiCompileDepends} $(appPublicApi)Alignment.h

$(o)AlignmentCategory$(oext) : $(_MakeFilePath)AlignmentCategory.cpp ${MultiCompileDepends} $(appPublicApi)AlignmentCategory.h

$(o)AlignmentModel$(oext) : $(_MakeFilePath)AlignmentModel.cpp ${MultiCompileDepends} $(appPublicApi)AlignmentModel.h

$(o)AlignmentPair$(oext) : $(_MakeFilePath)AlignmentPair.cpp ${MultiCompileDepends} $(appPublicApi)AlignmentPair.h

$(o)AlignmentPairEditor$(oext) : $(_MakeFilePath)AlignmentPairEditor.cpp ${MultiCompileDepends} $(appPublicApi)AlignmentPairEditor.h

$(o)AlignmentPairIntersection$(oext) : $(_MakeFilePath)AlignmentPairIntersection.cpp ${MultiCompileDepends} $(appPublicApi)AlignmentPairIntersection.h

$(o)AlignmentProfileViewDefinition$(oext) : $(_MakeFilePath)AlignmentProfileViewDefinition.cpp ${MultiCompileDepends} $(appPublicApi)AlignmentProfileViewDefinition.h

$(o)AlignmentReferent$(oext) : $(_MakeFilePath)AlignmentReferent.cpp ${MultiCompileDepends} $(appPublicApi)AlignmentReferent.h

$(o)AlignmentXSViewDefinition$(oext) : $(_MakeFilePath)AlignmentXSViewDefinition.cpp ${MultiCompileDepends} $(appPublicApi)AlignmentXSViewDefinition.h

$(o)GeometryDebug$(oext) : $(_MakeFilePath)GeometryDebug.cpp ${MultiCompileDepends} $(appPublicApi)GeometryDebug.h

$(o)GeometryHelper$(oext) : $(_MakeFilePath)GeometryHelper.cpp ${MultiCompileDepends} $(appPublicApi)GeometryHelper.h

$(o)RoadAlignmentPairEditor$(oext) : $(_MakeFilePath)RoadAlignmentPairEditor.cpp ${MultiCompileDepends} $(appPublicApi)RoadAlignmentPairEditor.h

$(o)RoadRailAlignmentDomain$(oext) : $(_MakeFilePath)RoadRailAlignmentDomain.cpp ${MultiCompileDepends} $(appPublicApi)RoadRailAlignmentDomain.h

%include MultiCppCompileGo.mki

#--------------------------------------------------------------------------------------
#   Create the library
#--------------------------------------------------------------------------------------
DLM_NAME                    = $(appName)
DLM_OBJECT_FILES            = $(MultiCompileObjectList)
DLM_OBJECT_DEST             = $(o)
DLM_OBJECT_PCH              = $(o)RoadRailAlignmentInternal$(oext) 
DLM_DEST                    = $(o)
DLM_EXPORT_DEST             = $(o)
DLM_NOENTRY                 = 1
DLM_CONTEXT_LOCATION        = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION    = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1

LINKER_LIBRARIES            = $(ContextSubpartsLibs)$(libprefix)BeSQLite$(libext)
LINKER_LIBRARIES            + $(ContextSubpartsLibs)$(libprefix)BeSQLiteEC$(libext)
LINKER_LIBRARIES            + $(ContextSubpartsLibs)$(libprefix)BentleyGeom$(libext)
LINKER_LIBRARIES            + $(ContextSubpartsLibs)$(libprefix)BentleyGeomSerialization$(libext)
LINKER_LIBRARIES            + $(ContextSubpartsLibs)$(libprefix)BeJsonCpp$(libext)
LINKER_LIBRARIES            + $(ContextSubpartsLibs)$(libprefix)ECObjects$(libext)
LINKER_LIBRARIES            + $(ContextSubpartsLibs)$(libprefix)DgnPlatform$(libext)
LINKER_LIBRARIES            + $(ContextSubpartsLibs)$(libprefix)LinearReferencing$(libext)

%include $(sharedMki)linkLibrary.mki

