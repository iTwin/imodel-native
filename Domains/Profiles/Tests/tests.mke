#---------------------------------------------------------------------------------------+
#
#     $Source: Tests/tests.mke $
#
#  $Copyright: (c) 2018 Bentley Systems, Incorporated. All rights reserved. $
#
#---------------------------------------------------------------------------------------+
programName = ProfilesTests
baseDir =   $(_MakeFilePath)

BEGTEST_INPUT=$(baseDir)src\\

%include mdl.mki

# We don't want to run the test from the build location because the dependencies are not there.
GUNITTEST_NOEXEC = 1

# This macro is used by gtestobj.mki
GUnitTestDir = $(BuildContext)SubParts/google_gtest/

BEGTEST_NAME=$(programName)
BEGTEST_OUTPUT=$(OutputRootDir)build/$(BEGTEST_NAME)/
%include $(SrcRoot)bsicommon/sharedmki/BeTestSelectHarness.mki

# Let all stand-alone tests share the same gtestmain and TestFixture objects.
o = $(OutputRootDir)build/$(programName)/

always:
    !~@mkdir $(o)

MultiCompileDepends = $(_MakeFileSpec)

%include MultiCppCompileRule.mki

$(o)Main.obj                            : $(BEGTEST_INPUT)Main.cpp ${MultiCompileDepends}

$(o)TestHost.obj                        : $(BEGTEST_INPUT)TestHost.cpp ${MultiCompileDepends}

$(o)ProfilesTestCase.obj                : $(BEGTEST_INPUT)ProfilesTestCase.cpp ${MultiCompileDepends}

$(o)DomainTests.obj                     : $(BEGTEST_INPUT)DomainTests.cpp ${MultiCompileDepends}

$(o)GeometryTests.obj                   : $(BEGTEST_INPUT)GeometryTests.cpp ${MultiCompileDepends}

$(o)CShapeProfileTests.obj              : $(BEGTEST_INPUT)CShapeProfileTests.cpp ${MultiCompileDepends}

$(o)IShapeProfileTests.obj              : $(BEGTEST_INPUT)IShapeProfileTests.cpp ${MultiCompileDepends}

$(o)AsymmetricIShapeProfileTests.obj    : $(BEGTEST_INPUT)AsymmetricIShapeProfileTests.cpp ${MultiCompileDepends}

$(o)LShapeProfileTests.obj              : $(BEGTEST_INPUT)LShapeProfileTests.cpp ${MultiCompileDepends}

$(o)TShapeProfileTests.obj              : $(BEGTEST_INPUT)TShapeProfileTests.cpp ${MultiCompileDepends}

$(o)ZShapeProfileTests.obj              : $(BEGTEST_INPUT)ZShapeProfileTests.cpp ${MultiCompileDepends}

$(o)CircleProfileTests.obj              : $(BEGTEST_INPUT)CircleProfileTests.cpp ${MultiCompileDepends}

$(o)HollowCircleProfileTests.obj        : $(BEGTEST_INPUT)HollowCircleProfileTests.cpp ${MultiCompileDepends}

$(o)EllipseProfileTests.obj             : $(BEGTEST_INPUT)EllipseProfileTests.cpp ${MultiCompileDepends}

$(o)RectangleProfileTests.obj           : $(BEGTEST_INPUT)RectangleProfileTests.cpp ${MultiCompileDepends}

$(o)RoundedRectangleProfileTests.obj    : $(BEGTEST_INPUT)RoundedRectangleProfileTests.cpp ${MultiCompileDepends}

%include MultiCppCompileGo.mki

%undef CPchOpts
%undef CCPchOpts

GUNITTEST_OUT    = $(o)
GUNITTEST_NAME   = $(programName)
GUNITTEST_DEST   = $(o)
GUNITTEST_NTLIBS = advapi32.lib ole32.lib ws2_32.lib
GUNITTEST_PATH   = $(o)
GUNITTEST_SYMB   = $(o)
GTEST_MAIN_IS_SUPPLIED = 1

%include $(BuildContext)SubParts/google_gtest_mki/gtestobj.mki

LOCAL_GUNITTEST_OBJS + $(MultiCompileObjectList)
LOCAL_GUNITTEST_OBJS + $[@wildcard $(BuildContext)SubParts/Libs/*.lib]
LOCAL_GUNITTEST_OBJS + $[@wildcard $(BuildContext)delivery/*.lib]
#LOCAL_GUNITTEST_OBJS + $(BuildContext)../DgnPlatform/Delivery/UnitTests/Objects/DgnDbTestUtils/DgnDbTestUtils.obj

#LINKER_LIBRARIES_DELAYLOADED  + $(BuildContext)SubParts/VersionedDgnV8Libs/DgnPlatform.lib

%include $(SharedMki)gunittest.mki

always:
    ~linkfile "$(BuildContext)Delivery/$(programName).exe=$(o)$(programName).exe"

$(BuildContext)Delivery/$(programName).logging.config.xml : $(baseDir)logging.config.xml
    $(LinkFirstDepToFirstTarget)

#$(BuildContext)Delivery/$(programName).exe.is_google_test : $(baseDir)logging.config.xml
#    $(LinkFirstDepToFirstTarget)

$(BuildContext)Delivery/ignore_list.txt : $(baseDir)ignore_list.txt
    $(LinkFirstDepToFirstTarget)

# Create the sqlang database
SQLANG_OutputDb     = $(o)ProfilesTests_en-US.sqlang.db3
SQLANG_DeliveryDir  = $(BuildContext)Delivery/
SQLANG_XliffWildcard=$(BuildContext)SubParts/xliffs/*.xliff
%include $(SrcRoot)bsicommon\sqlang\mki\XliffsToDb.mke
