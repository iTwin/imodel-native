<?xml version="1.0" encoding="UTF-8"?>
<ECSchema schemaName="Profiles" alias="prf" version="01.00.00" description="Profiles Schema" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.1">
    <ECSchemaReference name="BisCore" version="01.00.00" alias="bis"/>
    <ECEntityClass typeName="ProfileDefinitionModel" displayLabel="Profiles Type Definition Model">
        <BaseClass>bis:DefinitionModel</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00"/>
        </ECCustomAttributes>
    </ECEntityClass>
    <ECStructClass typeName="CardinalPointStruct" description = "Cardinal point structure">
        <ECProperty propertyName="Name" typeName="string" readOnly= "false"/>
        <ECProperty propertyName="Coordinates" typeName="point2d" readOnly="false"/>
    </ECStructClass>
    <ECEntityClass typeName="Profile" description="A structural cross section profile (2D shape)." modifier="Abstract">
        <BaseClass>bis:DefinitionElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00" />
        </ECCustomAttributes>
        <ECStructArrayProperty propertyName="CardinalPoints" displayLabel = "Cardinal Points" typeName="CardinalPointStruct" readOnly="false" minOccurs="0" maxOccurs="unbounded"/>
    </ECEntityClass>
    <ECEntityClass typeName="ConstantProfile" description="A Profile that does not varying along its length (unlike Varying Profile).">
        <BaseClass>Profile</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00" />
        </ECCustomAttributes>
        <!--<ECProperty propertyName="Shape" typeName="Bentley.Geometry.Common.ISurfaceGroup"/>
        <ECProperty propertyName="StandardizedProperties" typeName="string" description="JSON storage of section properties using BIS-standard names and BIS-standard units."/>
        <ECArrayProperty propertyName="AlternateShapeClassification" typeName="string" description="Alternative ways shape can be classified. See ShapeClassification for list of standard values." minOccurs="1" maxOccurs="1"/>
        <ECProperty propertyName="ShapeClassification" typeName="string" description="The primary classification of the shape. Leave unset if unknown. Standard values are&quot;BentPlate&quot;, &quot;C&quot;, &quot;DoubleL&quot;, &quot;HollowCircle&quot;, &quot;HollowRectangle&quot;, &quot;I&quot;, &quot;L&quot;, &quot;RoundedC&quot;, &quot;RoundedLippedC&quot;, &quot;RoundedLippedZ&quot;, &quot;RoundedHollowRectangle&quot;, &quot;RoundedZ&quot;, &quot;SchifflerizedL&quot;, &quot;SolidCircle&quot;, &quot;SolidRectangle&quot;, &quot;T&quot;."/>-->
    </ECEntityClass>
    <ECEntityClass typeName="BuiltUpProfile" description="A Constant Profile that is built up from other Constant Profiles.">
        <BaseClass>ConstantProfile</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="BuiltUpProfileComponent">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00" />
        </ECCustomAttributes>
        <ECProperty propertyName="Index" typeName="int" description="Zero-based index corresponding to the order in which this component was added to its BuiltUpProfile."/>
        <ECProperty propertyName="PlacementPoint" typeName="int" description="The identifier of the location on the related Profile that is Offet away from 0,0 of BuiltUpProfile. This values are exactly the same as CIS/2 cardinal points."/>
        <ECProperty propertyName="MirrorProfileAboutYAxis" typeName="boolean" description="The profile used by the component is actually a mirror image of Profile. The mirroring is done about the profile's y-axis and is done before rotation and before determining the PlacementPoint."/>
        <ECProperty propertyName="OffsetPoint" typeName="point2d" description="The offset in BuiltUpProfile coordinates from 0,0 to the PlacementPoint."/>
        <ECProperty propertyName="Rotation" typeName="double" description="The rotation of this component's profile relative to the BuiltUpProfile's axes. Rotation are positive ccw (acw). A value of zero implies that the profile's x- and y- axes are parallel to those of the BuiltUpProfile. All rotation is done about the PlacementPoint."/>
        <ECNavigationProperty propertyName="Profile" relationshipName="BuiltUpProfileComponentUsesConstantProfile" direction="Forward" description="The using MultiAspect">
            <ECCustomAttributes>
            </ECCustomAttributes>
        </ECNavigationProperty>
    </ECEntityClass>
    <ECRelationshipClass typeName="BuiltUpProfileOwnsBuiltUpProfileComponent" description="BuildUpProfile's ownership of BuildUpProfileComponent." modifier="None" strength="embedding">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="BuiltUpProfileOwnsComponent" polymorphic="false">
            <Class class="BuiltUpProfile"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="BuiltUpProfileOwnsComponent (Reversed)" polymorphic="false">
            <Class class="BuiltUpProfileComponent"/>
        </Target>
    </ECRelationshipClass>
    <ECRelationshipClass typeName="BuiltUpProfileComponentUsesConstantProfile" modifier="None" strength="referencing">
        <Source multiplicity="(0..*)" roleLabel="BuiltUpProfileComponent Uses ConstantProfile" polymorphic="false">
            <Class class="BuiltUpProfileComponent"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="BuiltUpProfileComponent Uses ConstantProfile (Reversed)" polymorphic="true">
            <Class class="ConstantProfile"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="ParametricProfile" description="A Constant Profile that can be defined by a small set of dimensions and a known profile type.">
        <BaseClass>ConstantProfile</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00" />
        </ECCustomAttributes>
        <ECProperty propertyName="InputProperties" typeName="string" description="JSON storage of input properties for the parametric shape."/>
    </ECEntityClass>

</ECSchema>
