<?xml version="1.0" encoding="UTF-8"?>
<ECSchema schemaName="LinearReferencing" alias="lr" version="01.00.00" description="Base schema for Linear Referencing." xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.1">
    <ECSchemaReference name="BisCore" version="01.00.00" alias="bis"/>
    <KindOfQuantity typeName="LENGTH" displayLabel="LENGTH" persistenceUnit="M" relativeError="1e-2" />
    <KindOfQuantity typeName="OFFSET" displayLabel="OFFSET" persistenceUnit="M" relativeError="1e-2" />
    <ECEntityClass typeName="ILinearElement" description="Interface to be mixed-in by Element-subclasses meant to play the role of Linear-Elements." modifier="Abstract">
        <ECCustomAttributes>
            <IsMixin xmlns='CoreCustomAttributes.01.00'>
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
        <!--ECNavigationProperty propertyName="ILinearElementSource" relationshipName="ILinearElementSourceOwnsILinearElements" direction="backward"/-->
    </ECEntityClass>
    <ECEntityClass typeName="ILinearElementSource" description="Interface to be mixed-in by Element-subclasses meant to provide Linear-Elements." modifier="Abstract">
        <ECCustomAttributes>
            <IsMixin xmlns='CoreCustomAttributes.01.00'>
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>
    <!--ECRelationshipClass typeName="ILinearElementSourceOwnsILinearElements" strength="embedding">
        <Source multiplicity="(0..1)" polymorphic="true">
            <Class class="ILinearElementSource"/>
        </Source>
        <Target multiplicity="(0..*)" polymorphic="true">
            <Class class="ILinearElement"/>
        </Target>
    </ECRelationshipClass>
    <ECRelationshipClass typeName="ILinearElementSourceRefersToIReferents" strength="referencing">
        <Source multiplicity="(0..1)" polymorphic="true">
            <Class class="ILinearElementSource"/>
        </Source>
        <Target multiplicity="(0..*)" polymorphic="true">
            <Class class="IReferent"/>
        </Target>
    </ECRelationshipClass>
    <ECRelationshipClass typeName="ILinearElementSourceOwnsILinearlyLocatedAttributions" modifier="Abstract" strength="embedding">
        <Source multiplicity="(0..1)" polymorphic="true">
            <Class class="ILinearElementSource"/>
        </Source>
        <Target multiplicity="(0..*)" polymorphic="true">
            <Class class="ILinearlyLocatedAttribution"/>
        </Target>
    </ECRelationshipClass-->
    <!-- Restrictions that may be applied to an implementation of ILinearlyLocated during Segmentation operations. -->
    <ECEnumeration typeName="LinearlyReferencedLocationType" backingTypeName="int" isStrict="true">
        <ECEnumerator value="1" displayLabel="AtLocation"/>
        <ECEnumerator value="2" displayLabel="FromToLocation"/>
        <ECEnumerator value="3" displayLabel="All = AtLocation | FromToLocation"/>
    </ECEnumeration>

    <ECCustomAttributeClass typeName="ILinearlyLocatedSegmentationHints" description="Applied to an element mixing-in the ILinearlyLocated interface, providing hints during segmentation operations." appliesTo="AnyClass">
        <ECProperty propertyName="SupportedLinearlyReferencedLocationTypes" typeName="LinearlyReferencedLocationType"/>
    </ECCustomAttributeClass>
    
    <ECEntityClass typeName="ILinearlyLocated" modifier="Abstract">
        <ECCustomAttributes>
            <IsMixin xmlns='CoreCustomAttributes.01.00'>
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
        <ECNavigationProperty propertyName="ILinearElement" relationshipName="ILinearlyLocatedAlongILinearElement" direction="forward">
            <ECCustomAttributes>
                <AutoHandledProperty>
                    <!-- 3 translates to "ReadOnly = Select|Insert" -->
                    <StatementTypes>3</StatementTypes>
                </AutoHandledProperty>
            </ECCustomAttributes>
        </ECNavigationProperty>
    </ECEntityClass>
    <ECRelationshipClass typeName="ILinearlyLocatedAlongILinearElement" strength="referencing" modifier="None">
        <Source multiplicity="(0..*)" polymorphic="true" roleLabel="is the axis for N linearly-located entities">
            <Class class="ILinearlyLocated"/>
        </Source>
        <Target multiplicity="(0..1)" polymorphic="true" roleLabel="N entities linearly located along 1 linear-element">
            <Class class="ILinearElement"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="ILinearlyLocatedAttribution" description="Interface to be mixed-in by Element-subclasses representing properties that apply to only a portion of a Linear-Element-Source." modifier="Abstract">
        <BaseClass>ILinearlyLocated</BaseClass>
        <ECCustomAttributes>
            <IsMixin xmlns='CoreCustomAttributes.01.00'>
                <AppliesToEntityClass>bis:InformationContentElement</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="ILinearlyLocatedElement" description="Interface to be mixed-in by Element-subclasses located along a Linear-Element-Source." modifier="Abstract">
        <BaseClass>ILinearlyLocated</BaseClass>
        <ECCustomAttributes>
            <IsMixin xmlns='CoreCustomAttributes.01.00'>
                <AppliesToEntityClass>bis:GeometricElement</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="IReferent" description="Interface to be mixed-in by Element-subclasses that can play the role of a Referent (known location along a Linear-Element)." modifier="Abstract">
        <ECCustomAttributes>
            <IsMixin xmlns='CoreCustomAttributes.01.00'>
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
        <ECProperty propertyName="RestartValue" typeName="double" kindOfQuantity="LENGTH"/>
    </ECEntityClass>
    <ECEntityClass typeName="LinearlyReferencedLocation" modifier="Abstract">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="ILinearlyLocatedOwnsLocations" strength="embedding" modifier="None">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" polymorphic="true" roleLabel="is owned by 1 ILinearlyLocated">
            <Class class="ILinearlyLocated"/>
        </Source>
        <Target multiplicity="(0..*)" polymorphic="true" roleLabel="owns N LinearlyReferencedLocations">
            <Class class="LinearlyReferencedLocation"/>
        </Target>
    </ECRelationshipClass>
    <ECStructClass typeName="DistanceExpression">
        <ECProperty propertyName="DistanceAlongFromStart" typeName="double" kindOfQuantity="LENGTH"/>
        <ECProperty propertyName="LateralOffsetFromILinearElement" typeName="double" kindOfQuantity="OFFSET"/>
        <ECProperty propertyName="VerticalOffsetFromILinearElement" typeName="double" kindOfQuantity="OFFSET"/>
        <ECProperty propertyName="DistanceAlongFromReferent" typeName="double" kindOfQuantity="LENGTH"/>
    </ECStructClass>
    <ECEntityClass typeName="LinearlyReferencedAtLocation" modifier="Sealed">
        <BaseClass>LinearlyReferencedLocation</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00"/>
        </ECCustomAttributes>
        <ECStructProperty propertyName="AtPosition" typeName="DistanceExpression"/>
        <ECNavigationProperty propertyName="FromReferent" relationshipName="LinearlyReferencedAtPositionRefersToReferent" direction="Forward"/>
    </ECEntityClass>
    <ECEntityClass typeName="LinearlyReferencedFromToLocation" modifier="Sealed">
        <BaseClass>LinearlyReferencedLocation</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00"/>
        </ECCustomAttributes>
        <ECStructProperty propertyName="FromPosition" typeName="DistanceExpression"/>
        <ECNavigationProperty propertyName="FromPositionFromReferent" relationshipName="LinearlyReferencedFromPositionRefersToReferent" direction="Forward"/>
        <ECStructProperty propertyName="ToPosition" typeName="DistanceExpression"/>
        <ECNavigationProperty propertyName="ToPositionFromReferent" relationshipName="LinearlyReferencedToPositionRefersToReferent" direction="Forward"/>
    </ECEntityClass>
    <ECRelationshipClass typeName="LinearlyReferencedAtPositionRefersToReferent" strength="referencing" modifier="None">
        <Source multiplicity="(0..*)" polymorphic="true" roleLabel="1 IReferent used to linearly-locate N locations">
            <Class class="LinearlyReferencedLocation"/>
        </Source>
        <Target multiplicity="(0..1)" polymorphic="true" roleLabel="N locations linearly located along 1 IReferent">
            <Class class="IReferent"/>
        </Target>
    </ECRelationshipClass>
    <ECRelationshipClass typeName="LinearlyReferencedFromPositionRefersToReferent" strength="referencing" modifier="None">
        <Source multiplicity="(0..*)" polymorphic="true" roleLabel="1 IReferent used to linearly-locate N locations">
            <Class class="LinearlyReferencedLocation"/>
        </Source>
        <Target multiplicity="(0..1)" polymorphic="true" roleLabel="N locations linearly located along 1 IReferent">
            <Class class="IReferent"/>
        </Target>
    </ECRelationshipClass>
    <ECRelationshipClass typeName="LinearlyReferencedToPositionRefersToReferent" strength="referencing" modifier="None">
        <Source multiplicity="(0..*)" polymorphic="true" roleLabel="1 IReferent used to linearly-locate N locations">
            <Class class="LinearlyReferencedLocation"/>
        </Source>
        <Target multiplicity="(0..1)" polymorphic="true" roleLabel="N locations linearly located along 1 IReferent">
            <Class class="IReferent"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="LinearlyLocatedReferent" modifier="Abstract">
        <BaseClass>bis:SpatialLocationElement</BaseClass>
        <BaseClass>IReferent</BaseClass>
        <BaseClass>ILinearlyLocatedElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00"/>
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="GeometricElementAsReferent" modifier="Abstract">
        <BaseClass>bis:SpatialLocationElement</BaseClass>
        <BaseClass>IReferent</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00"/>
        </ECCustomAttributes>
    </ECEntityClass>
    <ECRelationshipClass typeName="GeometricElementDrivesReferent" strength="referencing" modifier="None">
        <BaseClass>bis:ElementDrivesElement</BaseClass>
        <Source multiplicity="(0..1)" polymorphic="true" roleLabel="1 IReferent used to linearly-locate N locations">
            <Class class="bis:GeometricElement"/>
        </Source>
        <Target multiplicity="(0..1)" polymorphic="true" roleLabel="N locations linearly located along 1 IReferent">
            <Class class="GeometricElementAsReferent"/>
        </Target>
    </ECRelationshipClass>
    
    <!-- Offset and towards referent-support to be added when needed
    <ECEntityClass typeName="IOffsetReferent" description="Interface to be mixed-in by Element-subclasses that can play the role of a Referent to be used to establish offset positions by projecting (laterally or vertically) to it along a vector perpendicular to the reference line (Linear-Element) from the distance-along point." modifier="Abstract"/>
    <ECStructClass typeName="DistanceExpression">
        <ECProperty propertyName="LateralOffsetDistanceFromOffsetReferent" typeName="double" kindOfQuantity="LENGTH"/>
        <ECProperty propertyName="VerticalOffsetDistanceFromOffsetReferent" typeName="double" kindOfQuantity="LENGTH"/>
    </ECStructClass>
    <ECEntityClass typeName="LinearlyReferencedAtLocation" modifier="Sealed">
        <ECNavigationProperty propertyName="TowardsReferent" relationshipName="LinearlyLocatedEntityLocationRefersToReferent" direction="forward"/>
        <ECNavigationProperty propertyName="LateralOffsetReferent" relationshipName="LinearlyLocatedEntityLocationRefersToOffsetReferent" direction="forward"/>
        <ECNavigationProperty propertyName="VerticalOffsetReferent" relationshipName="LinearlyLocatedEntityLocationRefersToOffsetReferent" direction="forward"/>
    </ECEntityClass>
    <ECEntityClass typeName="LinearlyReferencedFromToLocation" modifier="Sealed">
        <ECNavigationProperty propertyName="FromPositionTowardsReferent" relationshipName="LinearlyLocatedEntityLocationRefersToReferent" direction="forward"/>
        <ECNavigationProperty propertyName="FromPositionLateralOffsetReferent" relationshipName="LinearlyLocatedEntityLocationRefersToOffsetReferent" direction="forward"/>
        <ECNavigationProperty propertyName="FromPositionVerticalOffsetReferent" relationshipName="LinearlyLocatedEntityLocationRefersToOffsetReferent" direction="forward"/>
        <ECNavigationProperty propertyName="ToPositionTowardsReferent" relationshipName="LinearlyLocatedEntityLocationRefersToReferent" direction="forward"/>
        <ECNavigationProperty propertyName="ToPositionLateralOffsetReferent" relationshipName="LinearlyLocatedEntityLocationRefersToOffsetReferent" direction="forward"/>
        <ECNavigationProperty propertyName="ToPositionVerticalOffsetReferent" relationshipName="LinearlyLocatedEntityLocationRefersToOffsetReferent" direction="forward"/>
    </ECEntityClass>
    <ECRelationshipClass typeName="LinearlyLocatedEntityLocationRefersToOffsetReferent" strength="referencing">
        <Source multiplicity="(0..*)" polymorphic="true">
            <Class class="LinearlyLocatedEntityLocation"/>
        </Source>
        <Target multiplicity="(0..1)" polymorphic="true">
            <Class class="IOffsetReferent"/>
        </Target>
    </ECRelationshipClass>
    -->

</ECSchema>
