#--------------------------------------------------------------------------------------+
#
#     $Source: DgnV8OpenRoadsDesigner.mke $
#
#  $Copyright: (c) 2018 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------+
%include mdl.mki
%include $(SrcRoot)DgnDomains/DgnV8OpenRoadsDesigner/DgnV8OpenRoadsDesigner.mki

#--------------------------------------------------------------------------------------
#   Macros
#--------------------------------------------------------------------------------------
appSrc = $(_MakeFilePath)
appPublicApi = $(appSrc)PublicAPI/$(appName)/
MultiCompileDepends = $(_MakeFileSpec) $(appSrc)DgnV8OpenRoadsDesignerInternal.h $(appPublicApi)DgnV8OpenRoadsDesignerApi.h

always :
!~@mkdir $(o)

#----------------------------------------------------------------------
#   Pre - compiled header
#----------------------------------------------------------------------
PchCompiland = $(appSrc)DgnV8OpenRoadsDesignerInternal.cpp
PchOutputDir = $(o)
PchExtraOptions = -Zm160
PchExplicitDepends = $(MultiCompileDepends)

% if defined(winNT) && $(BUILD_TOOLSET) == "LINUX_GCC"
# Avoid internal compiler error in GCC using windows ndk toolchain
GCC_NO_PRE_COMPILED_HEADER = 1
% endif

CompileOptionsMki = $(SrcRoot)DgnDomains/DgnV8OpenRoadsDesigner/DgnV8OpenRoadsDesigner.mki
%include $(CompileOptionsMki)
% include $(SharedMki)PreCompileHeader.mki

CCPchOpts = $(UsePrecompiledHeaderOptions)
CPchOpts = $(UsePrecompiledHeaderOptions)

#--------------------------------------------------------------------------------------
#   Compile source
#--------------------------------------------------------------------------------------
%include MultiCppCompileRule.mki

$(o)Aspects$(oext) : $(_MakeFilePath)Aspects.cpp ${MultiCompileDepends} $(appPublicApi)Aspects.h

$(o)DgnV8OpenRoadsDesignerDomain$(oext) : $(_MakeFilePath)DgnV8OpenRoadsDesignerDomain.cpp ${MultiCompileDepends} $(appPublicApi)DgnV8OpenRoadsDesignerDomain.h

$(o)Handlers$(oext) : $(_MakeFilePath)Handlers.cpp ${MultiCompileDepends} $(appPublicApi)Handlers.h

%include MultiCppCompileGo.mki

#--------------------------------------------------------------------------------------
#   Create the library
#--------------------------------------------------------------------------------------
DLM_NAME = $(appName)
DLM_OBJECT_FILES = $(MultiCompileObjectList)
DLM_OBJECT_DEST = $(o)
DLM_OBJECT_PCH = $(o)DgnV8OpenRoadsDesignerInternal$(oext)
DLM_DEST = $(o)
DLM_EXPORT_DEST = $(o)
DLM_NOENTRY = 1
DLM_CONTEXT_LOCATION = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1

LINKER_LIBRARIES = $(ContextSubpartsLibs)$(libprefix)BeSQLite$(libext)
LINKER_LIBRARIES + $(ContextSubpartsLibs)$(libprefix)BeSQLiteEC$(libext)
LINKER_LIBRARIES + $(ContextSubpartsLibs)$(libprefix)BentleyGeom$(libext)
LINKER_LIBRARIES + $(ContextSubpartsLibs)$(libprefix)BentleyGeomSerialization$(libext)
LINKER_LIBRARIES + $(ContextSubpartsLibs)$(libprefix)BeJsonCpp$(libext)
LINKER_LIBRARIES + $(ContextSubpartsLibs)$(libprefix)ECObjects$(libext)
LINKER_LIBRARIES + $(ContextSubpartsLibs)$(libprefix)DgnPlatform$(libext)

% include $(sharedMki)linkLibrary.mki
