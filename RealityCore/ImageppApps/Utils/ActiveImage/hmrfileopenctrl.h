/*--------------------------------------------------------------------------------------+
|
|     $Source: Utils/ActiveImage/hmrfileopenctrl.h $
|
|  $Copyright: (c) 2013 Bentley Systems, Incorporated. All rights reserved. $
|
+--------------------------------------------------------------------------------------*/
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CHMRFileOpenCtrl wrapper class

class CHMRFileOpenCtrl : public CWnd
{
protected:
	DECLARE_DYNCREATE(CHMRFileOpenCtrl)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x86e1bd9, 0x60e3, 0x11d1, { 0x8c, 0x6b, 0x0, 0x60, 0x8, 0x48, 0x2d, 0x2e } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = false,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	short GetProtocol();
	void SetProtocol(short);
	CString GetServerIP();
	void SetServerIP(LPCTSTR);
	short GetServerPort();
	void SetServerPort(short);
	COleFont GetFont();
	void SetFont(LPDISPATCH);
	BOOL GetShowFileName();
	void SetShowFileName(BOOL);
	BOOL GetShowFileType();
	void SetShowFileType(BOOL);
	BOOL GetOpenCancelButtons();
	void SetOpenCancelButtons(BOOL);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	CString GetHTTPExtension();
	void SetHTTPExtension(LPCTSTR);
	BOOL GetAutoConnect();
	void SetAutoConnect(BOOL);
	CString GetDrive();
	void SetDrive(LPCTSTR);
	BOOL GetAPIMode();
	void SetAPIMode(BOOL);
	CString GetAPIPattern();
	void SetAPIPattern(LPCTSTR);
	BOOL GetMultiSel();
	void SetMultiSel(BOOL);
	BOOL GetMultiLineCtrl();
	void SetMultiLineCtrl(BOOL);
	BOOL GetShowLabel();
	void SetShowLabel(BOOL);
	short GetViewMode();
	void SetViewMode(short);
	BOOL GetCanEditDriveCombo();
	void SetCanEditDriveCombo(BOOL);
	BOOL GetAllowLocalDrives();
	void SetAllowLocalDrives(BOOL);

// Operations
public:
	CString GetPath();
	void ReConnect();
	BOOL APINext();
	BOOL APIFirst();
	long APIGetAttrib();
	CString APIGetName();
	BOOL APIChangeDir(LPCTSTR pi_pNewPath);
	BOOL APIFirstExtention();
	BOOL APINextExtention();
	CString APIDefaultExtention();
	CString APIExtentionDescription();
	void APISetCurrentServer(long pi_Server);
	long APIAddServer(LPCTSTR pi_Name, LPCTSTR pi_PathExtention, LPCTSTR pi_Address, short pi_Port, short pi_Type);
	long GetSelCount();
	CString GetFirstSel();
	CString GetNextSel();
	void AboutBox();
};
