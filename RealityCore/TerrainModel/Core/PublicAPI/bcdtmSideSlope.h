/*---------------------------------------------------------------------------------------------
* Copyright (c) Bentley Systems, Incorporated. All rights reserved.
* See COPYRIGHT.md in the repository root for full copyright notice.
*--------------------------------------------------------------------------------------------*/
#pragma once
//__BENTLEY_INTERNAL_ONLY__

BENTLEYDTM_EXPORT int bcdtmSideSlope_createSideSlopesForSideSlopeTableDtmObject (DTM_SIDE_SLOPE_TABLE **SideSlopeTable, long *SideSlopeTableSize, long SideSlopeDirection, DTM_SLOPE_TABLE *SlopeTable, long SlopeTableSize, long CornerOption, long StrokeCorners, double CornerStrokeTolerance, double Pptol, DPoint3d *ParallelEdgePts, long NumParallelEdgePts, DTMUserTag UserRadialTag, DTMUserTag UserElementTag, BC_DTM_OBJ* **DataObjects, long *NumberOfDataObjects);
int bcdtmSideSlope_copySideSlopeElementPointsToPointArray(DTM_SIDE_SLOPE_TABLE *sideSlopeTableP,long sideSlopeTableSize,DPoint3d **elemPtsPP,long *numElemPtsP) ;
int bcdtmSideSlope_pullSideSlopePointsOntoTin(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize) ;
int bcdtmSideSlope_validateSideSlopeElement(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long *SideSlopeTableSize,double Pptol) ;
int bcdtmSideSlope_deleteDuplicateSideSlopeElementPoints(DTM_SIDE_SLOPE_TABLE *Points,long *numPts,double Pptol) ;
int bcdtmSideSlope_checkForKnotsInSideSlopeElement(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,long *KnotFlag ) ;
int bcdtmSideSlope_getSideSlopeElementDirection(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize, DTMDirection *Direction,double *Area) ;
int bcdtmSideSlope_reverseSideSlopeTableDirection(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize) ;
int bcdtmSideSlope_setForceSlopeForVerticesNotOnTin(DTM_SIDE_SLOPE_TABLE *sideSlopeTableP,long sideSlopeTableSize,long sideSlopeDirection,long closeFlag) ;
int bcdtmSideSlope_setForceSlopeForSegmentsNotOnTin(DTM_SIDE_SLOPE_TABLE *sideSlopeTableP,long sideSlopeTableSize) ;
int bcdtmSideSlope_insertVerticesAtElevationTransitions(DTM_SIDE_SLOPE_TABLE **SideSlopeTable,long *SideSlopeTableSize) ;
int bcdtmSideSlope_markInactiveDeltaVerticalRadials(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize) ;
int bcdtmSideSlope_insertVerticesAtCutFillTransitions(DTM_SIDE_SLOPE_TABLE **SideSlopeTable,long *SideSlopeTableSize,double Pptol) ;
int bcdtmSideSlope_insertTransitionVerticesForSlopeToObject(DTM_SIDE_SLOPE_TABLE **SideSlopeTable,long *SideSlopeTableSize,double Pptol) ;
int bcdtmSideSlope_createSideSlopesForActiveRadials(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,long SideSlopeDirection,DTM_SLOPE_TABLE *SlopeTable,long SlopeTableSize,long CornerOption,long StrokeCorners,double CornerStrokeTolerance,double Pptol, DPoint3d *ParallelEdgePts,long NumParallelEdgePts, DTMUserTag UserRadialTag, DTMUserTag UserElementTag,BC_DTM_OBJ* **DataObjects,long *NumberOfDataObjects) ;
int bcdtmSideSlope_reorderSideSlopeTable(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize) ;
int bcdtmSideSlope_createSideSlopes(DTM_SIDE_SLOPE_TABLE **SideSlopeTable,long *SideSlopeTableSize,long SideSlopeDirection,DTM_SLOPE_TABLE *SlopeTable,long SlopeTableSize,long CornerOption,long StrokeCorners,double CornerStrokeTolerance,double Pptol) ;
int bcdtmSideSlope_assignRadialTypesToSideSlopeTablePoints(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,long SideSlopeDirection) ;
int bcdtmSideSlope_insertNormalRadialsAtConvexCorners(DTM_SIDE_SLOPE_TABLE **SideSlopeTable,long *SideSlopeTableSize) ;
int bcdtmSideSlope_insertNormalRadialsAtConcaveCorners(DTM_SIDE_SLOPE_TABLE **sideSlopeTablePP,long *sideSlopeTableSizeP,double p2pTol) ;
int bcdtmSideSlope_assignSlopesAndAnglesToRadials(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,long SideSlopeDirection,DTM_SLOPE_TABLE *SlopeTable,long SlopeTableSize) ;
int bcdtmSideSlope_adjustSlopesAndAnglesForCalculationMethod(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,long SideSlopeDirection,long CornerOption) ;
int bcdtmSideSlope_getReflexRadialAngleAndSlopeForLimit(DTM_SIDE_SLOPE_TABLE *sideSlopeTableP,long sideSlopeTableSize,DTM_SIDE_SLOPE_TABLE *radialP,long sideSlopeDirection,double *radialSlopesP,double *angleP,double *slopeP,double *horRatioP) ;
int bcdtmSideSlope_calculateAngleAndSlopeForCornerRadial(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,DTM_SIDE_SLOPE_TABLE *Radial,long SideSlopeDirection,long *PlaneSolution) ;
int bcdtmSideSlope_calculatePlanarAngleAndSlopeForCornerRadial(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeDirection,DTM_SIDE_SLOPE_TABLE *PriorRadial,DTM_SIDE_SLOPE_TABLE *Radial,DTM_SIDE_SLOPE_TABLE *NextRadial,double *Angle,double *Slope ) ;
int bcdtmSideSlope_calculateXYAngleBetweenPlanes(double *Angle,double A0,double B0,double C0,double A1,double B1,double C1) ;
int bcdtmSideSlope_checkForSolution(long SideSlopeDirection,long RadialType,double Angle,double PriorAngle,double NextAngle,long *SolutionFound) ;
int bcdtmSideSlope_calculateAngleAndSlopeForEdgeRadial(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,DTM_SIDE_SLOPE_TABLE *Radial,long SideSlopeDirection,long *PlaneSolution) ;
int bcdtmSideSlope_calculatePlanarAngleAndSlopeForEdgeRadial(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeDirection,DTM_SIDE_SLOPE_TABLE *PriorRadial,DTM_SIDE_SLOPE_TABLE *Radial,DTM_SIDE_SLOPE_TABLE *NextRadial,long *PlaneSolution,double *Angle,double *Slope ) ;
int bcdtmSideSlope_calculatePlaneCoefficientsForEdgeRadial(DTM_SIDE_SLOPE_TABLE *Radial1,DTM_SIDE_SLOPE_TABLE *Radial2,long SideSlopeDirection,long *PlaneSolution,double *A,double *B,double *C,double *D) ;
int bcdtmSideSlope_extendHorizontalLimitForCornerRadials(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,long SideSlopeDirection) ;
int bcdtmSideSlope_intersectRadialsWithSurface(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,long Status ) ;
int bcdtmSideSlope_projectVectorStartToHullDtmObject(BC_DTM_OBJ *tinP,double Sx,double Sy,double Sz,double xyAngle,double slope,double *Hx, double *Hy,double *Hz) ;
int bcdtmSideSlope_intersectSurfaceDtmObject(BC_DTM_OBJ *Tin,double Sx,double Sy,double Sz,double Angle,double Slope,long SideSlopeFlag,double EndValue,double *Lx, double *Ly,double *Lz,long *StartFlag,long *EndFlag) ;
int bcdtmSideSlope_getNextInterceptDtmObject(BC_DTM_OBJ *Tin,double Px,double Py,long *Ptype,double Ex,double Ey,long *P1,long *P2,long *P3,double *Nx,double *Ny, double *Nz ) ;
int bcdtmSideSlope_strokeConvexCorners(DTM_SIDE_SLOPE_TABLE **SideSlopeTable,long *SideSlopeTableSize,long SideSlopeDirection,long CornerOption,double CornerStrokeTolerance) ;
int bcdtmSideSlope_writeRadialsToBinaryDTMFile(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,long WriteElement,wchar_t const*DataFileP) ;
int bcdtmSideSlope_writeElementToBinaryDTMFile(DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,wchar_t const*DataFileP) ;
int bcdtmSideSlope_resolveOverlappingSideSlopeRadials(DTM_SIDE_SLOPE_TABLE *RightSideSlopeTable,long RightSideSlopeTableSize,DTM_SIDE_SLOPE_TABLE *LeftSideSlopeTable,long LeftSideSlopeTableSize,DPoint3d *ParallelEdgePts,long NumParallelEdgePts,long SideDirection,double CornerTolerance,double RadialExtension,DTMUserTag RadialTag,DTMUserTag ElementTag,double Pptol,double Pltol,BC_DTM_OBJ *SideSlopes) ;
int bcdtmSideSlope_removeType2RadialsCoincicidentWithType1(DTM_OVERLAP_RADIAL_TABLE **sideSlopeRadialsPP, long *numSideSlopeRadialsP ) ;
int bcdtmSideSlope_extendRadialsAtTransistionPoints(long SideSlopeElementType,DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,double RadialExtension) ;
int bcdtmSideSlope_createRadialOverlapTable(long sideSlopeElementType,DTM_SIDE_SLOPE_TABLE *SideSlopeTable,long SideSlopeTableSize,DTM_OVERLAP_RADIAL_TABLE **Radials,long *NumRadials) ;
int bcdtmSideSlope_removeAdjacentRadialsToConvexRadials(long sideSlopeElementType,DTM_OVERLAP_RADIAL_TABLE *radialsP,long *numRadialsP,double tolerance,long *numRemovedP) ;
int bcdtmSideSlope_removeAdjacentSideSlopeRadialsWithinTolerance(DTM_OVERLAP_RADIAL_TABLE *Radials,long *NumRadials,double Tolerance) ;
int bcdtmSideSlope_writeOverlapRadialTableToBinaryDTMFile(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,wchar_t const*DataFileP) ;
int bcdtmSideSlope_writeOverlapRadialTableToDTMLogFile(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,char const*Message) ;
int bcdtmSideSlope_truncateSideSlopeRadialsAtParallelBoundaryEdge(DPoint3d *PadPts,long NumPadPts,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long *NumOvlPts) ;
int bcdtmSideSlope_buildRadialParallelEdgeIntersectionTable(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,DPoint3d *ParallelPts,long NumParallelPts,DTM_STR_INT_TAB **IntTable,long *IntTableNe) ;
int bcdtmSideSlope_scanForRadialParallelEdgeIntersections(DTM_STR_INT_TAB *IntTable,long IntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc) ;
int bcdtmSideSlope_determineRadialParallelEdgeIntersections(DTM_STR_INT_TAB *ActIntTable,long ActIntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc ) ;
int bcdtmSideSlope_truncateSideSlopeRadialsAtPadEdge(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,long sideSlopeElementType) ;
int bcdtmSideSlope_buildRadialEdgeIntersectionTable(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,long sideSlopeElementType,DTM_STR_INT_TAB **IntTable,long *IntTableNe) ;
int bcdtmSideSlope_scanForRadialEdgeIntersections(DTM_STR_INT_TAB *IntTable,long IntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc) ;
int bcdtmSideSlope_determineRadialEdgeIntersections(DTM_STR_INT_TAB *ActIntTable,long ActIntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc ) ;
int bcdtmSideSlope_truncateElementRadialsWithElementEndRadials(long SideDirection,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts) ;
int bcdtmSideSlope_intersectSideSlopeRadials(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,long sideSlopeElementType,long *RadialIntersectFlag) ;
int bcdtmSideSlope_radialRadialIntersectionPointsCompareFunction(const DTM_STR_INT_PTS *Tp1,const DTM_STR_INT_PTS *Tp2) ;
int bcdtmSideSlope_buildRadialIntersectionTable(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,DTM_STR_INT_TAB **IntTable,long *IntTableNe) ;
int bcdtmSideSlope_scanForRadialIntersections(DTM_STR_INT_TAB *IntTable,long IntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc) ;
int bcdtmSideSlope_determineRadialIntersections(DTM_STR_INT_TAB *ActIntTable,long ActIntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc ) ;
int bcdtmSideSlope_truncateRadialsUsingIntersectionPoints(long sideSlopeElementType,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,DTM_STR_INT_PTS *IntPts,long NumIntPts) ;
int bcdtmSideSlope_checkForPriorTruncationOfTruncatingRadial(DTM_OVERLAP_RADIAL_TABLE *OvlPts,DTM_STR_INT_PTS *RadIntPts,long RadStartOfs,long RadEndOfs) ;
int bcdtmSideSlope_removeActiveIntersectionPointsForRadialFromOffset(long Radial,DTM_STR_INT_PTS *IntPts,long NumIntPts,long Offset,long *IntIndex) ;
int bcdtmSideSlope_truncateIntersectedSideSlopeRadials(long Direction,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts) ;
int bcdtmSideSlope_truncateSideSlopeRadial(DTM_OVERLAP_RADIAL_TABLE *OvlPts,DTM_OVERLAP_RADIAL_TABLE *Ovl1,DTM_OVERLAP_RADIAL_TABLE *Ovl2,DTM_OVERLAP_RADIAL_TABLE *Ovl3,long Flag) ;
int bcdtmSideSlope_intersectSideSlopeRadialsWithBaseLines(long sideSlopeElementType,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts) ;
int bcdtmSideSlope_buildRadialBaseLineIntersectionTable(long SideSlopeElementType,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,DTM_STR_INT_TAB **IntTable,long *IntTableNe) ;
int bcdtmSideSlope_storeRadialBaseLineInRadialBaseLineIntersectionTable(long Ofs1,long Ofs2,long Type,long Direction,double X1,double Y1,double Z1,double X2,double Y2,double Z2, DTM_STR_INT_TAB **IntTable,long *IntTableNe,long *IntTableMe,long IntTableMinc ) ;
int bcdtmSideSlope_scanForRadialBaseLineIntersections(DTM_STR_INT_TAB *IntTable,long IntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc) ;
int bcdtmSideSlope_determineActiveRadialBaseLineIntersections(DTM_STR_INT_TAB *ActIntTable,long ActIntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc ) ;
int bcdtmSideSlope_setElevationOfIntersectedSideSlopeRadials(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts) ;
void bcdtmSideSlope_setIntersectedSideSlopeRadialElevation(DTM_OVERLAP_RADIAL_TABLE *Ovl,DTM_OVERLAP_RADIAL_TABLE *Ovl1,DTM_OVERLAP_RADIAL_TABLE *Ovl2) ;
int bcdtmSideSlope_writeSideSlopeRadialsToDataObject(long SideSlopeElementType,long SideDirection,DTM_OVERLAP_RADIAL_TABLE *RghtRadials,long NumRghtRadials,DTM_OVERLAP_RADIAL_TABLE *LeftRadials,long NumLeftRadials,DTMUserTag UserRadialTag,DTMUserTag UserElementTag,BC_DTM_OBJ *SideSlopes) ;
int bcdtmSideSlope_writeOpenSideSlopeElementBoundaryPolygonToDataObject(DTM_OVERLAP_RADIAL_TABLE *RghtRadials,long NumRghtRadials,DTM_OVERLAP_RADIAL_TABLE *LeftRadials,long NumLeftRadials,long SideDirection,BC_DTM_OBJ *SideSlopes,double Pptol,double Pltol) ;
int bcdtmSideSlope_reverseOrderOfSideSlopeRadials(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts) ;
int bcdtmSideSlope_removeExternalLoopsFromBoundaryDtmObject( BC_DTM_OBJ *tinP ) ;
int bcdtmSideSlope_writeClosedSideSlopeElementBoundaryPolygonToDataObject(DTM_OVERLAP_RADIAL_TABLE *RghtRadials,long NumRghtRadials,DTM_OVERLAP_RADIAL_TABLE *LeftRadials,long NumLeftRadials,long SideDirection,BC_DTM_OBJ *SideSlopes,double Pptol,double Pltol) ;
int bcdtmSideSlope_detectAndFixBreaksInSlopeToes(BC_DTM_OBJ *tinP) ;
int bcdtmSideSlope_writeSlopeToesToDataObject(long sideSlopeElementType,BC_DTM_OBJ *Data,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts) ;
int bcdtmSideSlope_buildSlopeToeIntersectionTable(DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,DTM_STR_INT_TAB **IntTable,long *IntTableNe) ;
int bcdtmSideSlope_scanForSlopeToeIntersections(DTM_STR_INT_TAB *IntTable,long IntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc) ;
int bcdtmSideSlope_determineSlopeToeIntersections(DTM_STR_INT_TAB *ActIntTable,long ActIntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc ) ;
int bcdtmSideSlope_findFirstPriorNonTruncatedPadToePoint(long sideSlopeElementType,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,DTM_STR_INT_TAB *IntTable,long IntTableNe,DTM_OVERLAP_RADIAL_TABLE *Ovl,DTM_OVERLAP_RADIAL_TABLE **Ovp ) ;
int bcdtmSideSlope_findFirstNextNonTruncatedPadToePoint(long sideSlopeElementType,DTM_OVERLAP_RADIAL_TABLE *OvlPts,long NumOvlPts,DTM_STR_INT_TAB *IntTable,long IntTableNe,DTM_OVERLAP_RADIAL_TABLE *Ovl,DTM_OVERLAP_RADIAL_TABLE **Ovn ) ;
int bcdtmSideSlope_checkForInterectionOfSlopeToeWithRadialOrPadEdge(DTM_OVERLAP_RADIAL_TABLE *OvlPts,DTM_OVERLAP_RADIAL_TABLE *Ovl1,DTM_OVERLAP_RADIAL_TABLE *Ovl2,DTM_STR_INT_TAB *IntTable,long IntTableNe,long *IntFlag) ;
int bcdtmSideSlope_writePadSideSlopeHolesToDataObject(DTM_OVERLAP_RADIAL_TABLE *LeftRadials,long NumLeftRadials,BC_DTM_OBJ *SideSlopes,double Pptol,double Pltol) ;
int bcdtmSideSlope_writeInternalPadHolesToDataObject(BC_DTM_OBJ *Tin,BC_DTM_OBJ *Data,long HoleDirection) ;
int bcdtmSideSlope_countNumberOfDtmFeaturesAtPointDtmObject(BC_DTM_OBJ *Tin,long P,long *Count) ;
int bcdtmSideSlope_removeDanglingBreaksDtmObject(BC_DTM_OBJ *Tin) ;
int bcdtmSideSlope_countNumberOfDtmFeatureTypeForTinPointDtmObject(BC_DTM_OBJ *Tin,long TinPoint,DTMFeatureType DtmFeatureType,long *NumberOfFeatures) ;
int bcdtmSideSlope_removeBreakLineSegmentAtTinPointDtmObject(BC_DTM_OBJ *Tin,long P) ;
int bcdtmSideSlope_extractBenchesFromSlopeToesAndStoreInSeparateDataObjects(BC_DTM_OBJ *Tin,BC_DTM_OBJ *SideSlopes,BC_DTM_OBJ* **DataObjects,long *NumberOfDataObjects) ;
int bcdtmSideSlope_markTruncatedRadials(DTM_OVERLAP_RADIAL_TABLE *radialTableP,long radialTableSize) ;
int bcdtmSideSlope_truncateRadialsWithToePointsInsideSlopeToe(DTM_OVERLAP_RADIAL_TABLE *ovlPtsP,long numOvlPts,long direction) ;
int bcdtmSideSlope_copyParallel3D( DPoint3d *pointsP, long numPoints, double offset, double slope, long copyMode, double cornerStrokeTolerance, DPoint3d **parallelPtsPP, long *numParallelPtsP ) ;
int bcdtmSideSlope_removeDuplicatesPointArray( DPoint3d *lineString, long *sizeLineString, double pptol ) ;
int bcdtmSideSlope_detectKnotsPointArray( DPoint3d *lineString, long sizeLineString, DTM_STR_INT_PTS **knotPoints, long *numKnotPoints ) ;
int bcdtmSideSlope_insertKnots( DPoint3d *lineString, long sizeLineString, DTM_STR_INT_PTS **knotPoints, long *numKnotPoints ) ;
int bcdtmSideSlope_removeKnots( DPoint3d **linePtsPP, long *numLinePtsP, DTM_STR_INT_PTS **knotPtsPP, long *numKnotPtsP ) ;
int bcdtmSideSlope_detectStringIntersections( DTM_P3D_LINE_STRING* *lineStrings, long numLineStrings, DTM_STR_INT_PTS **intPoints, long *numIntPoints ) ;
int bcdtmSideSlope_insertStringIntersections( DTM_P3D_LINE_STRING* *lineStrings, long numLineStrings, DTM_STR_INT_PTS **intPoints, long *numIntPoints ) ;
int bcdtmSideSlope_buildD3dLineStringIntersectionTable(DTM_P3D_LINE_STRING* *lineStrings,long numLineStrings,DTM_STR_INT_TAB **intTable,long *intTableSize) ;
int bcdtmSideSlope_intersectionTableCompareFunction(const DTM_STR_INT_TAB *Tp1,const DTM_STR_INT_TAB *Tp2) ;
int bcdtmSideSlope_scanForStringLineIntersections(DTM_STR_INT_TAB *IntTable,long IntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc) ;
int bcdtmSideSlope_deleteActiveStringLines(DTM_STR_INT_TAB *ActIntTable,long *ActIntTableNe,DTM_STR_INT_TAB *Pint) ;
int bcdtmSideSlope_addActiveStringLine(DTM_STR_INT_TAB **ActIntTable,long *ActIntTableNe,long *ActIntTableMe,DTM_STR_INT_TAB *Pint) ;
int bcdtmSideSlope_determineActiveStringLineIntersections(DTM_STR_INT_TAB *ActIntTable,long ActIntTableNe,DTM_STR_INT_PTS **IntPts,long *IntPtsNe,long *IntPtsMe,long IntPtsMinc ) ;
int bcdtmSideSlope_checkIfLinesIntersect(double x1,double y1,double x2,double y2,double x3,double y3,double x4,double y4) ;
int bcdtmSideSlope_sideOf(double x1,double y1,double x2,double y2,double x3,double y3) ;
int bcdtmSideSlope_normalIntersectLines(double X1,double Y1,double X2,double Y2,double X3,double Y3,double X4,double Y4,double *Xi,double *Yi) ;
double bcdtmSideSlope_normalDistanceToLine(double X1,double Y1,double X2,double Y2, double x, double y ) ;
int bcdtmSideSlope_intersectionPointsCompareFunction(const DTM_STR_INT_PTS *Tp1,const DTM_STR_INT_PTS *Tp2) ;
int bcdtmSideSlope_insertIntersectionPointsIntoLineStrings(DTM_P3D_LINE_STRING* *lineStrings,DTM_STR_INT_PTS *intPoints,long numIntPoints) ;
int bcdtmSideSlope_remove3DKnotsFromLineString(DPoint3d **linePtsPP,long *numLinePtsP,DTM_STR_INT_PTS *intPtsP,long numIntPts) ;
double bcdtmSideSlope_lengthOfNonKnotSection(DPoint3d *linePtsP,long *knotFlagP,long *l1P,long *l2P) ;
int bcdtmSideSlope_storePoint(double x,double y,double z,DPoint3d **pointsPP,long *numPtsP,long *memPtsP,long memPtsInc) ;
int bcdtmSideSlope_normalisePointArray(DPoint3d *pointsP,long numPts) ;
double bcdtmSideSlope_getAngle(double x1,double y1,double x2,double y2) ;
int bcdtmSideSlope_getPolygonDirection(DPoint3d *polyPtsP,long numPolyPts,long *directionP,double *areaP) ;
int bcdtmSideSlope_reversePolygonDirection(DPoint3d *polyPtsP,long numPolyPts) ;
int bcdtmSideSlope_breakPointArrayAtKnots(DPoint3d *pointsP,long numPoints,DTM_STR_INT_PTS *knotPtsP,long numKnotPts,DTM_P3D_LINE_STRING **stringsPP,long *numStringsP) ;
int bcdtmSideSlope_offsetCopyPointArray3D(DPoint3d *pointsP,long numPoints,double offset,double slope,long copyMode,double cornerStrokeTolerance,DPoint3d **parallelPtsPP,long *numParallelPtsP) ;
int bcdtmSideSlope_copyParallelSideSlopeElement( DTM_SIDE_SLOPE_TABLE *sideSlopeTableP, long sideSlopeTableSize, long sideSlopeDirection, long cornerOption, double cornerStrokeTolerance, BC_DTM_OBJ* **dataObjectsPPP, long *numberOfDataObjectsP ) ;
int bcdtmSideSlope_copyParallelSideSlopeElementToPointArray( DTM_SIDE_SLOPE_TABLE *sideSlopeTableP, long sideSlopeTableSize, long sideSlopeDirection, long cornerOption, double cornerStrokeTolerance, DPoint3d **paraElmemPolyPtsPP, long *numParaElmemPolyPtsP ) ;
int bcdtmSideSlope_writeLimitSlopeToesToDataObject(long sideSlopeType,BC_DTM_OBJ *dataP,DTM_OVERLAP_RADIAL_TABLE *ovlPtsP,long numOvlPts) ;
int bcdtmSideSlope_findFirstNonTruncatedRadial( DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts, long padType, DTM_OVERLAP_RADIAL_TABLE *ovlP, DTM_OVERLAP_RADIAL_TABLE **ovnPP) ;
int bcdtmSideSlope_findFirstIntersectionWithSideSlopeRadial( DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts, long direction, double slopeToe1X, double slopeToe1Y, double slopeToe1Z, double slopeToe2X, double slopeToe2Y, double slopeToe2Z, DTM_OVERLAP_RADIAL_TABLE *startP, DTM_OVERLAP_RADIAL_TABLE *endP, long *intersectionFoundP, double *intXP, double *intYP, double *intZP ) ;
int bcdtmSideSlope_writeLimitSlopeToesToDataObjectOld(long sideSlopeType,BC_DTM_OBJ *dataP,DTM_OVERLAP_RADIAL_TABLE *ovlPtsP,long numOvlPts) ;
int bcdtmSideSlope_limitFindFirstNonTruncatedSlopeToe( DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts, long padType, DTM_OVERLAP_RADIAL_TABLE *radP, DTM_OVERLAP_RADIAL_TABLE *ovlP, DTM_OVERLAP_RADIAL_TABLE *ovnP, long *intersectionFoundP, double *xIntP, double *yIntP, double *zIntP ) ;
int bcdtmSideSlope_writeLimitInternalPadHolesToDataObject(BC_DTM_OBJ *Tin,BC_DTM_OBJ *Data,long HoleDirection) ;
int bcdtmSideSlope_removeLimitDanglingBreaksDtmObject(BC_DTM_OBJ *tinP) ;
int bcdtmSideSlope_removeBreakLineSegmentDtmObject(BC_DTM_OBJ *tinP,long pnt1,long pnt2) ;
int bcdtmSideSlope_truncateTruncatingRadials(DTM_OVERLAP_RADIAL_TABLE *radialsP,long numRadials) ;
int bcdtmSideSlope_getBoundaryPolygonAndSlopeToesForClosedSideSlopeElementDataObject( BC_DTM_OBJ *sideSlopesP, long sideSlopeElementType, long sideSlopeDirection, DTM_SIDE_SLOPE_TABLE *RightSideSlopeTable, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_SIDE_SLOPE_TABLE *LeftSideSlopeTable, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials ) ;
int bcdtmSideSlope_getInternalSlopeToesForClosedSideSlopeElementDataObject( BC_DTM_OBJ *sideSlopesP, long sideSlopeElementType, long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials ) ;
int bcdtmSideSlope_reorderSideSlopeRadials( DTM_OVERLAP_RADIAL_TABLE *radialsP,long numRadials,DTM_OVERLAP_RADIAL_TABLE *firstRadialP ) ;
int bcdtmSideSlope_getExternalSlopeToesForClosedSideSlopeElementDataObject( BC_DTM_OBJ *sideSlopesP, long sideSlopeElementType, long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials ) ;
int bcdtmSideSlope_copySideSlopeRadialStartPointsToPointArray( long sideSlopeElementType, DTM_OVERLAP_RADIAL_TABLE *sideSlopeRadialsP, long numSideSlopeRadials, DPoint3d **elemPtsPP, long *numElemPtsP ) ;
int bcdtmSideSlope_copySideSlopeRadialToePointsToPointArray( long sideSlopeElementType, long toePointOption, DTM_OVERLAP_RADIAL_TABLE *sideSlopeRadialsP, long numSideSlopeRadials, DPoint3d **elemPtsPP, long *numElemPtsP ) ;
int bcdtmSideSlope_getPolygonFromClosedSideSlopeElementToesOld( DTMDirection direction, DTM_OVERLAP_RADIAL_TABLE *sideSlopeRadialsP, long numSideSlopeRadials, DPoint3d **hullPtsPP, long *numHullPtsP ) ;
int bcdtmSideSlope_getBoundaryPolygonAndSlopeToesForOpenSideSlopeElementDataObject( BC_DTM_OBJ *sideSlopesP, long sideSlopeElementType, long sideSlopeDirection, DTM_SIDE_SLOPE_TABLE *RightSideSlopeTable, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_SIDE_SLOPE_TABLE *LeftSideSlopeTable, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials ) ;
int bcdtmSideSlope_writeOpenSideSlopeElementNoneTruncatedSlopeToesToDataObject( BC_DTM_OBJ *sideSlopesP, long sideSlopeDirection, DTM_SIDE_SLOPE_TABLE *RightSideSlopeTable, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_SIDE_SLOPE_TABLE *LeftSideSlopeTable, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials ) ;
int bcdtmSideSlope_getPolygonFromClosedSideSlopeElementToes( long direction, DTM_OVERLAP_RADIAL_TABLE **sideSlopeRadialsPP, long *numSideSlopeRadialsP, DPoint3d **hullPtsPP, long *numHullPtsP ) ;
int bcdtmSideSlope_getPolygonFromOpenSideSlopeElementToes( long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials, DPoint3d **hullPtsPP, long *numHullPtsP, BC_DTM_OBJ **tinPP ) ;
int bcdtmSideSlope_truncateRadialsInsideTruncatedSlopeToe( DTM_OVERLAP_RADIAL_TABLE *radialsP, long numRadials, long sideSlopeElementType) ;

