#--------------------------------------------------------------------------------------
#
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#
#--------------------------------------------------------------------------------------
NOSTRICT=1
%include mdl.mki

nameToDefine = __IMODELJS_BUILD__
%include cdefapnd.mki

baseDir = $(_MakeFilePath)
publicApiSourceDr = $(baseDir)PublicAPI/iModelJs/
appName = iModelJs

%if $(TARGET_PLATFORM) == "Windows" || $(TARGET_PLATFORM) == "WinRT" || $(TARGET_PLATFORM) == "Android" || $(TARGET_PLATFORM) == "Linux"
    USE_V8 = 1
    nodeApiDir = $(baseDir)v8/
    cDefs + -DUSING_V8_SHARED=1
%elif $(TARGET_PLATFORM) == "iOS" || $(TARGET_PLATFORM) == "MacOS"
    USE_JAVASCRIPT_CORE=1
    nodeApiDir = $(baseDir)jsc/
%else
    %error Unsupported platform
%endif

o = $(OutputRootDir)build/$(appName)/

%if !defined (BMAKE_DELETE_ALL_TARGETS)
    $(o):
        ~@mkdir $@
%else
    always:
        -$(rmdirRecursiveCmd) $(o)

    %return
%endif

$(BuildContext)PublicAPI/iModelJs : $(baseDir)PublicAPI/iModelJs
    $(LinkFirstDepToFirstTargetAsDirectory)

#--------------------------------------------------------------------------------------
#   Compile source
#--------------------------------------------------------------------------------------
MultiCompileDepends = $(_MakeFileSpec) $(publicApiSourceDr)iModelJs.h \
                                       $(publicApiSourceDr)iModelJsServicesTier.h \
                                       $(publicApiSourceDr)iModelJsUtilities.h \
                                       $(baseDir)iModelJsInternal.h

%include MultiCppCompileRule.mki

$(o)ServicesTierHost$(oext) : $(baseDir)ServicesTierHost.cpp ${MultiCompileDepends}

$(o)ServicesTierScripts$(oext) : $(baseDir)ServicesTierScripts.cpp ${MultiCompileDepends}

$(o)ServicesTierUvHost$(oext) : $(baseDir)ServicesTierUvHost.cpp ${MultiCompileDepends}

$(o)ServicesTierNodeHost$(oext) : $(baseDir)ServicesTierNodeHost.cpp ${MultiCompileDepends}

$(o)Utilities$(oext) : $(baseDir)Utilities.cpp ${MultiCompileDepends}

$(o)ServicesTierEnvironment$(oext) : $(baseDir)ServicesTierEnvironment.cpp ${MultiCompileDepends}

$(o)ServicesTierExtension$(oext) : $(baseDir)ServicesTierExtension.cpp ${MultiCompileDepends}

$(o)ServicesTierUtilities$(oext) : $(baseDir)ServicesTierUtilities.cpp ${MultiCompileDepends}

%include MultiCppCompileGo.mki

iModelJsObjs =% $(MultiCompileObjectList)

#--------------------------------------------------------------------------------------
#   Compile our version of node-addon-api
#--------------------------------------------------------------------------------------

nodeAddonApiPublicApiSourceDir = $(BuildContext)VendorAPI/Napi/

napiHeaders = $(nodeAddonApiPublicApiSourceDir)napi.h

cDefs + -DUSING_UV_SHARED=1
cDefs + -DEXTERNAL_NAPI=1
cIncs + -I$(nodeAddonApiPublicApiSourceDir)

$(o)node_internals$(oext) : $(baseDir)node_internals.cc $(napiHeaders) ${MultiCompileDepends}

imodelJsObjs + $(o)node_internals$(oext) 

%if defined (USE_V8)

    $(o)node_api$(oext)       : $(nodeApiDir)node_api.cc $(napiHeaders) ${MultiCompileDepends}

    $(o)v8_node_internalsi$(oext) : $(nodeApiDir)v8_node_internals.cc $(napiHeaders) ${MultiCompileDepends}

    imodelJsObjs + $(o)node_api$(oext) $(o)v8_node_internalsi$(oext)

%elif defined(USE_JAVASCRIPT_CORE)

    $(o)node_api$(oext)       : $(nodeApiDir)node_api.cc $(napiHeaders) ${MultiCompileDepends}

    imodelJsObjs + $(o)node_api$(oext)

%else

    %error unsupported JavaScript engine

%endif

#--------------------------------------------------------------------------------------
#   Pull in the addon's object files
#--------------------------------------------------------------------------------------
addonObjs = $[@wildcard $(BuildContext)SubParts/imodeljs-addon-objs/*$(oext)]

#--------------------------------------------------------------------------------------
#   Create the library
#--------------------------------------------------------------------------------------
ContextLibPrefix = $(BuildContext)SubParts/Libs/$(libprefix)

DLM_NAME = $(appName)
DLM_OBJECT_FILES            = $(iModelJsObjs) $(addonObjs) $(ContextLibPrefix)uv$(stlibext)
DLM_OBJECT_DEST             = $(o)
DLM_DEST                    = $(o)
DLM_EXPORT_DEST             = $(o)
DLM_NOENTRY                 = 1
DLM_CONTEXT_LOCATION        = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION    = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1


%include $(BuildContext)SubParts/imodeljs-addon-build-tools/IModelJsNative_input_libs.mki

%if $(TARGET_PLATFORM) == "Windows"
    LINKER_LIBRARIES + $(ContextLibPrefix)v8$(stlibext) $(ContextLibPrefix)v8_libbase$(stlibext) $(ContextLibPrefix)v8_libplatform$(stlibext)
    LINKER_LIBRARIES + advapi32.lib iphlpapi.lib psapi.lib shell32.lib user32.lib userenv.lib ws2_32.lib
%endif

%include $(sharedMki)linkLibrary.mki
