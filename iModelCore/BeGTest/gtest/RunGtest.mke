#--------------------------------------------------------------------------------------
#
#     $Source: gtest/RunGtest.mke $
#
#  $Copyright: (c) 2016 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------
%include mdl.mki

%ifndef GTEST_EXE
    %error Define GTEST_EXE to identify the test runner executable that should be run
%endif

%ifndef GTEST_OUTPUT_DIR
    %error Define GTEST_OUTPUT_DIR to the directory where logs, etc. should go
%endif

BentleyTestDir=$(SrcRoot)util/gtest/BentleyTest/
runDir=$[@realpath ${GTEST_OUTPUT_DIR}]/run/

%if defined (BMAKE_DELETE_ALL_TARGETS)
always:
    $(rmdirRecursiveCmd) $(runDir)

    %return
%endif

LogDir=$(runDir)logs/
ResultsCapture=$(LogDir)ResultsCapture.txt

always:
    !~@mkdir ${GTEST_OUTPUT_DIR}
    !~@mkdir ${runDir}
    !~@mkdir ${runDir}/Output
    !~@mkdir ${runDir}/Temp
    !~@mkdir ${LogDir}

%if $(TARGET_PLATFORM)=="Windows"
    
    %if defined(RUN_GTEST_MINIMIZED)
        RunPrefix=start \/WAIT \/MIN
    %else
        RunPrefix=start \/WAIT
    %endif

    exeName = $[@realpath $(GTEST_EXE)]

    always:
        >$(LogDir)run.bat
        $(exeName) | $(_makeFilePath)TeeGtest.py $(ResultsCapture)
        exit
        <
        -$(RunPrefix) $(LogDir)run.bat
        %message See $(ResultsCapture)
        python $(_makeFilePath)CheckResultsForFailures.py $(ResultsCapture) $(exeName)
        
    %return

%endif

%if $(TARGET_PLATFORM) == "Linux" || $(TARGET_PLATFORM) == "MacOS"
    
    # This is a hack because symlinks wreck havoc when running on Linux... some shells and apps resolve, some resolve partially, some don't... sucks, but this is the most reliable way.
    # See associated code in RunTests.py:GetExeLocation
    appDir = $[@dir $(GTEST_EXE)]
    appDirectory        = $[@basename ${appDir}]
    copyFromDirectory   = $(OutputRootDir)Product/
    copyToDirectory     = $(OutputRootDir)ProductCopy/

    %if defined (BMAKE_DELETE_ALL_TARGETS)
        always:
            $(rmdirRecursiveCmd) $(copyToDirectory)$(appDirectory)
    %else
        always:
            !~@mkdir $(copyToDirectory)
            rsync -rLptgoD $(copyFromDirectory)${appDirectory} $(copyToDirectory)
    %endif

    exeName = $(copyToDirectory)${appDirectory}/$[@basename $(GTEST_EXE)]

    always:
        -$(exeName) | tee $(ResultsCapture)
        %message See $(ResultsCapture)
        python $(_makeFilePath)CheckResultsForFailures.py $(ResultsCapture) $(exeName)

    %return

%endif

%error Unsupported platform for running gtest