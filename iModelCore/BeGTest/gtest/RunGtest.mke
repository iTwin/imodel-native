#--------------------------------------------------------------------------------------
#
#     $Source: gtest/RunGtest.mke $
#
#  $Copyright: (c) 2018 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------
%include mdl.mki

%ifndef GTEST_PRODUCT
	%error Define GTEST_PRODUCT to identify the test executable as a path relative to the Product directory, e.g., -dGTEST_PRODUCT=BeSQLite-Gtest/BeSQLiteTest
%endif

%ifndef GTEST_NAME
	GTEST_NAME = $(GTEST_PROJECT)
%endif

%ifndef GTEST_OUTPUT_DIR
	GTEST_OUTPUT_DIR=$(OutputRootDir)build/RunGtest/${GTEST_PRODUCT}/$(GTEST_NAME)
%endif

%ifndef GTEST_LOGFILE_NAME
	GTEST_LOGFILE_NAME=$(GTEST_NAME).log
	#GTEST_LOGFILE_NAME=${GTEST_PRODUCT}/$(GTEST_NAME).log
%endif

BentleyTestDir=$(SrcRoot)imodel02/iModelCore/util/gtest/BentleyTest/
runDir=$[@realpath ${GTEST_OUTPUT_DIR}]/run/

%if defined (BMAKE_DELETE_ALL_TARGETS)
	always:
		-$(rmdirRecursiveCmd) $(runDir)

	%return
%endif

LogDir=$(runDir)logs/
ResultsCapture=$(LogDir)test.log

MAKE_PRODUCT_COPY_PRODUCT_NAME = $(GTEST_PRODUCT)

%include $(SharedMki)makeProductCopy.mki

exeName = ${MAKE_PRODUCT_COPY_DIR}/$(GTEST_NAME)

always:
	!~@mkdir ${GTEST_OUTPUT_DIR}
	!~@mkdir ${runDir}
	!~@mkdir ${runDir}/Output
	!~@mkdir ${runDir}/Temp
	!~@mkdir ${LogDir}

%ifdef BENTLEY_NO_RUN_GTEST
	always:
		>$(LogDir)test.log
		tests were not run
		<
		~linkfile "$(BuildContext)Delivery/Gtest/Logs/$(GTEST_LOGFILE_NAME)=$(ResultsCapture)"
%endif

%if defined (winNT)
	%ifdef ONLY_TEST_CHANGES
		%message Run only required tests
		always:
			python $(SrcRoot)DgnDbTestingScripts/TestImpactAnalysis/FindRequiredTests.py --gtestName=$(GTEST_NAME)

		REQ_TESTS_DIR=$(OutputRootDir)LogFiles/RunRequiredTests/
		GTEST_FILTER_FILE=$(REQ_TESTS_DIR)$(GTEST_NAME)_command.txt
		%iffile $(GTEST_FILTER_FILE) 
			%if $[@readfile $(GTEST_FILTER_FILE)] !=" " 
				GTEST_FILTER=$[@readfile $(GTEST_FILTER_FILE)]
			%endif
		%endif
		%ifndef GTEST_FILTER 
			#No need to run tests.
			%message Skipping test execution
			always:
				>$(LogDir)test.log
				[==========] No tests are affected by current change.
				[==========] 0 tests from 0 test cases ran. (0 ms total)
				<
				~linkfile "$(BuildContext)Delivery/Gtest/Logs/$(GTEST_LOGFILE_NAME)=$(ResultsCapture)"
		%endif
	%endif
	
	testName = $[@basename $(exeName)]

	%if defined(RUN_GTEST_MINIMIZED) || defined(BEGTEST_RUN_MINIMIZED)
		RunPrefix=start "$(testName)" \/WAIT \/MIN
	%else
		RunPrefix=start "$(testName)" \/WAIT
	%endif

	$(ResultsCapture) : $(exeName).exe
		>$(ResultsCapture)
		$(exeName)
		<
		%ifdef GTEST_FILTER
			python $(SrcRoot)DgnDbTestingScripts/TestImpactAnalysis/CreateBatch.py $(exeName) "$(GTEST_EXTRA_ARGS) $(GTEST_FILTER)" $(SrcRoot)imodel02/iModelCore/BeGTest/gtest/TeeGtest.py $(ResultsCapture)
		%else			
			>$(LogDir)run.bat
			$(exeName) $(GTEST_EXTRA_ARGS) | $(_makeFilePath)TeeGtest.py $(ResultsCapture)		
			exit
			<
		%endif			
		-$(RunPrefix) $(LogDir)run.bat
	
%else
	
	$(ResultsCapture) : $(exeName)
		>$(ResultsCapture)
		$(exeName)
		<
		-$(exeName) >> $(ResultsCapture) 2>&1

%endif

%message See $(ResultsCapture)

always:
	python $(_makeFilePath)CheckLogfilesForFailures.py $[@dir $(ResultsCapture)] 1
	~linkfile "$(BuildContext)Delivery/Gtest/Logs/$(GTEST_LOGFILE_NAME)=$(ResultsCapture)"

