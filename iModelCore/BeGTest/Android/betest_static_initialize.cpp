/*--------------------------------------------------------------------------------------+
|
|     $Source: Android/betest_static_initialize.cpp $
|
|  $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
|
+--------------------------------------------------------------------------------------*/
#include "BeTestHost.h"
#include <Bentley/BeJStringUtilities.h>
#include <BeSQLite/L10N.h>
#include <android/native_window_jni.h>
#include <android/log.h>
#include <TEST_FRAMEWORK_SQLANG_DEF.h> // This file is generated by MakeJUnitTestProject.mke

static BeFileName s_assetsDir;
static BeFileName s_docsDir;
static BeFileName s_tempDir;
static BeFileName s_localStateDir;

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
BeTestHost::BeTestHost ()
    {
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
void BeTestHost::_GetDocumentsRoot (BeFileName& path)
    {
    path = s_docsDir;
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
void BeTestHost::_GetDgnPlatformAssetsDirectory (BeFileName& path)
    {
    //  
    path = s_assetsDir;
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
void BeTestHost::_GetFrameworkSqlangFiles (BeFileName& path)
    {
    GetDgnPlatformAssetsDirectory(path);
    path.AppendToPath(L"sqlang");
    path.AppendToPath(TEST_FRAMEWORK_SQLANG); // This macro is defined by MakeJUnitTestProject.mke
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
void BeTestHost::_GetOutputRoot (BeFileName& path)
    {
    //  The "local state directory" is a writable directory that is private to the activity. 
    //  Android does not automatically delete files or clean up this directory.
    //  So, it's a good place to create documents that are manipulated by the tests.
    path = s_localStateDir; 
    }
    
/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
void BeTestHost::_GetTempDir (BeFileName& path)
    {
    path = s_tempDir;
    }
   
/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
void BeTestHost::SetJniEnvAndObject (JNIEnv* env, jobject obj) {m_env = env; m_obj = obj;}

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
void* BeTestHost::_InvokeP (char const* function, void* args)
    {
    if (0==strncmp (function, "foo", 3))
        {
        jmethodID   jmid        = m_env->GetMethodID (m_env->GetObjectClass(m_obj), "getName", "()Ljava/lang/String;");
        jstring     jstr        = (jstring) m_env->CallObjectMethod (m_obj, jmid);
        CharCP      jstrbytes   = m_env->GetStringUTFChars (jstr, NULL);
        Utf8String* utf8        = new Utf8String (jstrbytes);
        m_env->ReleaseStringUTFChars (jstr, jstrbytes);
        return utf8;
        }
    else if (0 == strncmp (function, "getSurface", 15))
        {
        jmethodID jmid     = m_env->GetMethodID (m_env->GetObjectClass (m_obj), "getSurface", "()Landroid/view/Surface;");
        jobject   jsurface = (jobject) m_env->CallObjectMethod (m_obj, jmid);
        return jsurface;
        }
    else if (0 == strncmp (function, "getEnv", 6))
        {
        return m_env;
        }
    else if (0 == strncmp (function, "getObj", 6))
	    {
        return m_obj;
	    }
    else if (0 == strncmp (function, "getClass", 8))
        {
        return m_env->GetObjectClass (m_obj);
        }

    NativeLogging::LoggingManager::GetLogger(L"TestRunner")->errorv ("Unknown upcall %hs", function);
    return NULL;
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
RefCountedPtr<BeTestHost> BeTestHost::Create () 
    {
    return new BeTestHost;
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
extern "C" void Java_com_bentley_test_TestActivity_initializeJni 
(
JNIEnv*         env,
jclass,
jstring         assetsDir,
jstring         docsDir,
jstring         tempDir,
jstring         localStateDir
)
    {
    BeJStringUtilities::InitWStringFromJString (env, s_assetsDir, assetsDir);
    BeJStringUtilities::InitWStringFromJString (env, s_docsDir, docsDir);
    BeJStringUtilities::InitWStringFromJString (env, s_tempDir, tempDir);
    BeJStringUtilities::InitWStringFromJString (env, s_localStateDir, localStateDir);

    // ensure known locations have trailing separators for consistency with MobileDgn
    s_assetsDir.AppendSeparator();
    s_docsDir.AppendSeparator();
    s_tempDir.AppendSeparator();
    s_localStateDir.AppendSeparator();
    
#define UTF8CSTR(WSTR) Utf8String(WSTR).c_str()
    __android_log_print (ANDROID_LOG_INFO, "TestRunner", "initializeJni (assetsDir=%s, docsDir=%s, tempDir=%s, localStateDir=%s)", 
                                            UTF8CSTR(s_assetsDir),
                                            UTF8CSTR(s_docsDir),
                                            UTF8CSTR(s_tempDir),
                                            UTF8CSTR(s_localStateDir));
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Grigas.Petraitis                09/2014
+---------------+---------------+---------------+---------------+---------------+------*/
extern "C" void Java_com_bentley_test_TestActivity_initializeSqlang
(
JNIEnv* env,
jclass
)
    {
    BeFileName frameworkSqlang;
    BeTest::GetHost().GetFrameworkSqlangFiles(frameworkSqlang);
    BeSQLite::L10N::Initialize (BeSQLite::L10N::SqlangFiles(frameworkSqlang));
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Grigas.Petraitis                09/2014
+---------------+---------------+---------------+---------------+---------------+------*/
extern "C" void Java_com_bentley_test_TestActivity_uninitializeSqlang
(
JNIEnv* env,
jclass
)
    {
    BeSQLite::L10N::Shutdown();
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
extern "C" int begtest_initialize ()
    {
    try {
        BeTest::Initialize (*BeTestHost::Create ());

        NativeLogging::LoggingConfig::SetOption (CONFIG_OPTION_DEFAULT_SEVERITY, LOG_TEXT_TRACE);
        NativeLogging::LoggingConfig::ActivateProvider (NativeLogging::CONSOLE_LOGGING_PROVIDER); // send logging messages to logcat
        }
    catch (...)
        {
        __android_log_print (ANDROID_LOG_FATAL, "TestRunner", "Exception caught during BeTest::Initialize or NativeLogging initialization.");
        return -1;
        }
    return 0;
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                    Sam.Wilson                      07/2012
+---------------+---------------+---------------+---------------+---------------+------*/
extern "C" void begtest_uninitialize ()
    {
    BeSQLite::L10N::Shutdown();
    NativeLogging::LoggingConfig::DeactivateProvider ();
    BeTest::Uninitialize();
    }
