#include <SDKDDKVer.h>
#include "CppUnitTest.h"
#include <Bentley/BeTest.h>
#include <Bentley/BeAssert.h>
#include <Bentley/BeFileName.h>
#include <Logging/bentleylogging.h>
#include <BeSQLite/L10N.h>
#include <stdlib.h>
#include "BeTestHost.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

BEGIN_UNNAMED_NAMESPACE

static void ensureTestClassSetUp(Utf8CP testClassName)
    {
    if (BeTestHost::s_currentTestClassName.Equals(testClassName))
        return;
    
    if (!BeTestHost::s_currentTestClassName.empty())
        BeTest::TearDownTestCase(BeTestHost::s_currentTestClassName.c_str());

    BeTestHost::s_currentTestClassName = testClassName;

    if (!BeTest::IsInitialized())
        {
        BeTest::Initialize(*BeTestHost::Create(nullptr));

        NativeLogging::LoggingConfig::SetOption(CONFIG_OPTION_DEFAULT_SEVERITY, LOG_TEXT_WARNING);
        NativeLogging::LoggingConfig::ActivateProvider(NativeLogging::CONSOLE_LOGGING_PROVIDER);
        NativeLogging::LoggingConfig::SetSeverity(L"Performance", NativeLogging::LOG_ERROR);

        BeFileName frameworkSqlang;
        BeTest::GetHost().GetFrameworkSqlangFiles(frameworkSqlang);

        // Some tests do not have language file. Skip L10N initialization because L10N assert will block the test.
        if (frameworkSqlang.DoesPathExist())
            BeSQLite::L10N::Initialize(frameworkSqlang);
        }

    BeTest::SetUpTestCase(testClassName);
    }

END_UNNAMED_NAMESPACE
