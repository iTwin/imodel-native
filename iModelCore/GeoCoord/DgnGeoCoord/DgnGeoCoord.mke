#--------------------------------------------------------------------------------------
#
#     $Source: DgnGeoCoord/DgnGeoCoord.mke $
#
#  $Copyright: (c) 2013 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------
appName         = $(DgnGeoCoordDllBase)
sAppName        = DgnGeoCoord

baseDir         = $(_MakeFilePath)
langSpec        = $(baseDir)english/

PolicyFile = $(SrcRoot)GeoCoord/mki/GeoCoordPolicy.mki
%include mdl.mki

dllName         = DgnGeoCoord

csmap           = $(SrcRoot)Libsrc/csmap/

dirToSearch     = $(csmap)include/
%include cincapnd.mki

#----------------------------------------------------------------------
#
#   Define __DGNEOCOORD_BUILD__ symbol, so that class declarations will
#   know to specify dllexport, rather than dllimport (the default)
#   !No other makefile should define this symbol!
#
#----------------------------------------------------------------------
nameToDefine=__DGNGEOCOORD_BUILD__
%include cdefapnd.mki

#----------------------------------------------------------------------
#  Create output directories
#----------------------------------------------------------------------
o               = $(dgnGeoCoordObj)

always:
    !~mkdir $(o)

%if defined (notnow)
#----------------------------------------------------------------------
#  Create the data definition resource file from the .mt file
#----------------------------------------------------------------------
rscCompIncs     + -i$(msjInternalSrc) 

datafiles       = $(mstation)GeoCoordinateData/

$(o)geocoordtypes.r             : $(baseDir)geocoordtypes.mt $(lInc)geocoordelement.r.h $(lInc)basegeodefs.r.h

$(datafiles)geocoordtypes.rsc   : $(o)geocoordtypes.r
%endif

#---------------------------------------------
#        Compile the source files for the DLM
#---------------------------------------------
MultiCompileDepends=$(_MakeFileSpec)
%include MultiCppCompileRule.mki

$(o)DgnGeoCoord$(oext)          :     $(baseDir)DgnGeoCoord.cpp          $(DgnGeoCoordAPISrc)dgngeocoord.h $(BaseGeoCoordAPISrc)basegeocoord.h  ${MultiCompileDepends}

$(o)ReprojectCache$(oext)       :     $(baseDir)ReprojectCache.cpp       $(DgnGeoCoordAPISrc)dgngeocoord.h $(BaseGeoCoordAPISrc)basegeocoord.h  ${MultiCompileDepends}

$(o)GeoCoordServices$(oext)     :     $(baseDir)GeoCoordServices.cpp     $(DgnGeoCoordAPISrc)dgngeocoord.h $(BaseGeoCoordAPISrc)basegeocoord.h  ${MultiCompileDepends}

$(o)AuxCoordSysProcessor$(oext) :     $(baseDir)AuxCoordSysProcessor.cpp $(DgnGeoCoordAPISrc)dgngeocoord.h $(BaseGeoCoordAPISrc)basegeocoord.h  ${MultiCompileDepends}

%include MultiCppCompileGo.mki
dlmObjs =% $(MultiCompileObjectList)


#--------------------------------------------------------------
#        Make the DLL
#--------------------------------------------------------------
#----------------------------------------------------------------------------------------
# Use dlmlink.mki to link the DLM.
#----------------------------------------------------------------------------------------
DLM_OBJECT_DEST                 = $(o)
DLM_LIBDEF_SRC                  = $(baseDir)
DLM_NAME                        = DgnGeoCoord
RIGHTSCOMPLIANT                 = true
DLM_OBJECT_FILES                = $(dlmObjs)
DLM_NOENTRY                     = 1
DLM_NO_INITIALIZE_FUNCTION      = 1
DLM_NO_DEF                      = 1
DLM_NO_DLS                      = 1
DLM_NOMSBUILTINS                = 1
DLM_SPECIAL_LINKOPT             = -Fixed:no
LINKER_LIBRARIES                =   $(DgnPlatformExportLib)                 \
                                    $(rmgrExportLib)                        \
                                    $(geomExportLib)
LINKER_LIBRARIES_DELAYLOADED    =   $(ContextSubpartsLibs)$(BaseGeocoordLib)
DLM_DEST                        = $(o)
DLM_EXPORT_DEST                 = $(o)

%include dlmlink.mki
