#----------------------------------------------------------------------------------------
#   Tests that are ignored on purpose
#----------------------------------------------------------------------------------------
ThreadSafetyTests.*     # Experimental tests for thread safety. Should not run with build.

#----------------------------------------------------------------------------------------
#   Tests that need attention
#----------------------------------------------------------------------------------------
#TFS 720060 Fails due to ECObjects supplementation bug
SchemaManagerTests.ImportMultipleSupplementalSchemas

#Affan (error message have changed when schema qualified name is not used)
ECSqlStatementTestFixture.IssueListener

ECSqlStatementTestFixture.ParametersInNestedSelectStatement

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:42,693 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,693 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,693 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:42,693 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(1369): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("parametersinnestedselect.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlInsertPrepareTests.Arrays

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,614 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,614 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,614 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,614 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1472): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (Dt_Array, B) VALUES (NULL, true)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1473): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (PStruct_Array, B) VALUES (NULL, true)")
    # Which is: ECSqlStatus::InvalidECSql

SchemaRulesTestFixture.KindOfQuantities

    # TFS#792997
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:21,678 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:MyKoq' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:21,678 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'TestSchema.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:21,678 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML from string (1st 200 characters approx.): <ECSchema schemaName="TestSchema" alias="ts" version="1.0" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.1">
    # <KindOfQuantity typeName="MyKoq" relativeError="0.1" persistenc
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaRulesTests.cpp(472): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecdbschemarules_koq.ecdb", SchemaItem(R"xml(<ECSchema schemaName="TestSchema" alias="ts" version="1.0" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.1">
    # <KindOfQuantity typeName="MyKoq" relativeError="0.1" persistenceUnit="FT" />
    # <ECStructClass typeName="TestStruct" >
    # <ECProperty propertyName="Name" typeName="string"/>
    # </ECStructClass>
    # <ECEntityClass typeName="TestClass" >
    # <ECProperty propertyName="Prop1" typeName="double" kindOfQuantity="MyKoq" />
    # <ECPrimitiveArrayProperty propertyName="Prop2" typeName="double" kindOfQuantity="MyKoq"/>
    # <ECStructProperty propertyName="Prop3" typeName="TestStruct" kindOfQuantity="MyKoq"/>
    # <ECStructArrayProperty propertyName="Prop4" typeName="TestStruct" kindOfQuantity="MyKoq"/>
    # </ECEntityClass>
    # </ECSchema>)xml"))
    # Which is: ERROR
    # KOQ can be applied to prim, struct, and array properties.

JsonReaderTests.RoundTrip_ReadThenInsert

    # TFS#792974
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:02,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:02,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:02,193 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:02,193 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\JsonReaderTests.cpp(1081): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("jsonroundtrip_readtheninsert.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

SchemaUpgradeTestFixture.UpdateKindOfQuantity

    # TFS#792948
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:38,897 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:KindOfQuantity1' persistence FormatUnitSet has a problem: Unknown name of the unit
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaUpgradeTests.cpp(7103): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("schemaupdate.ecdb", schemaItem)
    # Which is: ERROR

ECSqlPrepareTestFixture.ReservedTokens

    # TFS#792966
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,755 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,755 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,755 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,755 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR

ECSqlCustomFunctionTestFixture.RegisterUnregisterCustomSqlFunction

    # TFS#792995
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:36,974 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:36,974 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:36,974 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:36,974 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlCustomFunctionTests.cpp(152): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlfunctiontest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECCrudWriteTokenTestFixture.Test

    # TFS#792996
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:28,848 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:28,848 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:28,848 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:28,848 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECCrudWriteTokenTests.cpp(41): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("eccrudwritetoken_seed.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.InsertNullForECInstanceId

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,333 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,333 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,333 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,333 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2637): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecinstanceidbindnull.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.Reset

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,896 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,896 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,896 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,896 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3898): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlSelectPrepareTests.WhereBasics

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,521 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,521 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,521 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,521 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1348): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE B = NULL OR b = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1350): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE i>=:myParam")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1351): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE I IS 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1352): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE B IS TRUE")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1353): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE L < 3.14")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1354): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE (L < 3.14 AND I > 3) OR B = True AND D > 0.0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1355): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE 8 % 3 = 2")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1356): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE 8 % 2 = 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1367): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE True")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1368): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NOT True")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1369): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE B")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1370): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NOT B")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1372): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE Glob('*amp*',S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1373): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NOT Glob('*amp*',S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1375): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE I")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1376): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NOT I")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1377): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1378): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NOT L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1379): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE Length(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1380): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NOT Length(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1381): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE (I IS NOT NULL) AND L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1382): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE (I IS NOT NULL) AND NOT L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1389): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P2D.X >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1390): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P2D.Y >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1392): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P3D.X >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1393): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P3D.Y >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1394): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P3D.Z >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1395): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P2D.X >= P3D.X AND P2D.Y >= P3D.Y")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1397): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE (P2D.X) >= (P3D.X) AND (P2D.Y) >= (P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1398): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE (P2D.X >= P3D.X) AND (P2D.Y >= P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1399): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE (P2D.X >= P3D.X AND P2D.Y >= P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1403): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE -I = -123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1407): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1408): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1409): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1410): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1411): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL IS 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1412): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL IS NOT 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1413): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1414): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE B = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1415): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE B <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1416): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE L IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1417): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE L IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1418): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE L IS NULL OR I IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1419): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE L IS NULL AND I IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1420): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE S IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1421): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE S IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1422): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE B IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1423): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE B IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1424): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE I IS ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1425): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE I IS NOT ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1426): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ? = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1427): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1428): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ? <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1429): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE NULL <> ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1433): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P2D IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1434): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P2D IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1435): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P2D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1438): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P3D IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1439): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P3D IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1440): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE P3D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1444): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE MyPSA = MyPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1445): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE MyPSA IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1446): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE MyPSA = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1447): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE MyPSA.Id IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1448): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE MyPSA.Id = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1449): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE MyPSA.RelECClassId IS NULL")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlUpdatePrepareTests.Options

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,146 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,146 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,146 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,146 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1968): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? ECSQLOPTIONS myopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1969): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? ECSQLOPTIONS myopt myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1970): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? ECSQLOPTIONS myopt=1 myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1971): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? ECSQLOPTIONS myopt=1 myotheropt=true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1972): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? ECSQLOPTIONS myopt myotheropt=true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1973): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? ECSQLOPTIONS myopt myotheropt=true onemoreopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1974): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? WHERE ECInstanceId=? ECSQLOPTIONS myopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1975): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? WHERE ECInstanceId=? ECSQLOPTIONS myopt myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1976): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=? WHERE ECInstanceId=? ECSQLOPTIONS myopt=1 myotheropt")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.StructArrayUpdate

    # TFS#792945
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,271 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,271 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,271 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,271 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2516): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementFunctionTestFixture.InVirtualSetFunction

    # TFS#792959
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,286 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,286 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,286 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,286 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementFunctionTests.cpp(292): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementCacheTests.GetPreparedStatement

    # TFS#792950
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,161 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,161 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,161 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,161 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementCacheTest.cpp(113): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ECSqlStatementCacheTest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlInsertPrepareTests.CommonGeometry

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,677 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,677 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,677 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,677 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1496): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PASpatial (I, Geometry) VALUES (123, NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1497): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PASpatial (I, Geometry_Array) VALUES (123, NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1498): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PASpatial VALUES (False, 3.14, 123, 'hello', NULL, NULL, NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1499): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PASpatial (I, Geometry) VALUES (123, ?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1500): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PASpatial (I, Geometry) VALUES (123, ?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1501): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PASpatial (I, Geometry_Array) VALUES (123, ?)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlDeletePrepareTests.CommonGeometry

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,552 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,552 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,552 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,552 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2352): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PASpatial WHERE Geometry=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2353): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PASpatial WHERE Geometry<>?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2354): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PASpatial WHERE Geometry IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2355): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PASpatial WHERE Geometry IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2356): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PASpatial WHERE Geometry_Array IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2357): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PASpatial WHERE Geometry_Array IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2359): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.SSpatial WHERE SpatialStructProp.Geometry IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2360): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.SSpatial WHERE SpatialStructProp.Geometry IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2361): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.SSpatial WHERE SpatialStructProp.Geometry_Array IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2362): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.SSpatial WHERE SpatialStructProp.Geometry_Array IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.LimitOffset

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,927 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,927 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,927 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,927 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(898): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT 5")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(899): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT 1+1+1+2")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(900): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT 5 OFFSET 3")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(901): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT 10/2 OFFSET 3*1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(902): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(903): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT 5 - ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(904): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT 5 OFFSET ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(905): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT ? OFFSET ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(906): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT :pagesize OFFSET :pagesize * :pageno")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(907): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, I FROM ecsql.PSA LIMIT :pagesize OFFSET :pagesize * (:pageno - 1)")
    # Which is: ECSqlStatus::InvalidECSql

SchemaManagerTests.GetDerivedClasses

    # TFS#792991
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:15,756 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:15,756 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:15,756 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:15,756 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaManagerTests.cpp(766): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecschemamanagertest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECInstanceInserterTests.InsertIntoRelationships

    # TFS#792988
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:31,755 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:31,755 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:31,755 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:31,755 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECInstanceInserterTests.cpp(128): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("InsertIntoelationships.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECDbMetaSchemaECSqlTestFixture.VerifyQueries

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:28,864 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:28,864 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:28,864 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:28,864 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECDbMetaSchemaECSqlTestFixture.cpp(1100): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecdbmetaschematests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlUpdatePrepareTests.AndOrPrecedence

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,911 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,911 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,911 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,911 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1763): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.TH3 SET S1=NULL WHERE S1 IS NOT NULL OR S2 IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1764): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.TH3 SET S1=NULL WHERE (S1 IS NOT NULL OR S2 IS NOT NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1765): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.TH3 SET S1=NULL WHERE S1 IS NULL AND S2 IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1766): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.TH3 SET S1=NULL WHERE S1 IS NULL AND S2 IS NOT NULL OR 1=1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1767): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.TH3 SET S1=NULL WHERE S1 IS NULL AND (S2 IS NOT NULL OR 1=1)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.NullLiteralForPoints

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:42,458 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,458 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,458 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:42,458 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(982): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("nullliterals.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlInsertPrepareTests.Options

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,817 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,817 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,817 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,817 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR

ECSqlStatementTestFixture.DateTimeCast

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:42,427 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,427 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,427 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:42,427 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(934): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("datetimecast.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.GetParameterIndex

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,614 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,614 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,614 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,614 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3322): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlCustomFunctionTestFixture.BlobSqlFunction

    # TFS#792995
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,052 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,052 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,052 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,052 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlCustomFunctionTests.cpp(295): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlfunctiontest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlSelectPrepareTests.LikeOperator

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,896 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,896 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,896 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,896 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(860): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE 'Sam%'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(861): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE 'Sam'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(862): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I LIKE 'Sam%'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(863): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE 10")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(864): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(865): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE null")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(866): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S NOT LIKE NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(867): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S NOT LIKE null")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(868): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S NOT LIKE 'Sam%'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(869): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE 'Sam_le string'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(870): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE 'Sam%' ESCAPE '\\'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(871): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE 'Sam\\%' ESCAPE '\\'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(872): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S LIKE 'Sam\\_le string' ESCAPE '\\'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(880): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE S LIKE ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(881): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE S NOT LIKE ?")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlExecutionFrameworkTests.NamedParameterTest

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,739 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,739 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,739 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,739 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkTests.cpp(716): error:       Expected: ECSqlStatus::Success
    # To be equal to: prepareStatus
    # Which is: ECSqlStatus::InvalidECSql
    # Statement prepare failed for:INSERT INTO ecsql.PSA(S,B) VALUES ('lalala', true)

ECSqlSelectPrepareTests.BetweenOperator

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,208 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,208 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(267): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I BETWEEN 1 AND 3")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(268): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I BETWEEN 122 AND 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(269): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I NOT BETWEEN 1 AND 3")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(270): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S BETWEEN 'Q' AND 'T'")
    # Which is: ECSqlStatus::InvalidECSql
    # S always amounts to Sample String
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(271): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE S BETWEEN 'Q' AND 'R'")
    # Which is: ECSqlStatus::InvalidECSql
    # S always amounts to Sample String
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(272): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I NOT BETWEEN ? AND 3")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(273): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I NOT BETWEEN 1 AND ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(274): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I NOT BETWEEN ? AND ?")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.ParameterInSelectClause

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,583 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,583 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,583 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,583 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3259): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlSelectPrepareTests.Polymorphic

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,192 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,192 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,192 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,192 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1104): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, L FROM ONLY ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1105): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql.THBase")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1106): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql.TH1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1107): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql.TH5")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1108): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.THBase")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1109): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.TH1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1110): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.TH5")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1111): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql.TCBase")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1112): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql.TC1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1113): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql.TC5")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1114): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.TCBase")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1115): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.TC1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1116): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.TC5")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1117): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select ECInstanceId FROM ecsql.Empty")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1118): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select ECInstanceId, I, S from ecsql.AbstractNoSubclasses")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1119): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select ECInstanceId from ecsql.EmptyAbstractNoSubclasses")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1120): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select ECInstanceId, I, S from only ecsql.AbstractNoSubclasses")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1121): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select ECInstanceId from only ecsql.EmptyAbstractNoSubclasses")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlCustomFunctionTestFixture.StringSqlFunction

    # TFS#792995
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,036 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,036 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,036 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,036 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlCustomFunctionTests.cpp(272): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlfunctiontest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlInsertPrepareTests.Structs

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,880 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,880 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,880 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,880 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1745): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (PStructProp, B) VALUES (NULL, true)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1746): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (PStructProp, B) VALUES (?, true)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1747): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (PStructProp.i, B) VALUES (123, true)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1748): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (PStructProp.i, PStructProp.dt, B) VALUES (123, DATE '2010-10-10', true)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1749): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.SA (SAStructProp.PStructProp) VALUES (NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1750): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.SA (SAStructProp.PStructProp) VALUES (?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1751): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.SA (SAStructProp.PStructProp.i, SAStructProp.PStructProp.dt) VALUES (123, DATE '2010-10-10')")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.GetGeometryWithInvalidBlobFormat

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:45,083 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,099 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:45,099 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4287): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.Finalize

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,911 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,911 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,911 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,911 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3928): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlStatementTestFixture.BlobIOForInvalidProperties

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:46,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:46,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:46,193 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:46,193 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(5544): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("blobioinvalidcases.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

JsonInserterTests.RoundTrip_InsertThenRead

    # TFS#792961
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:00,412 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:00,412 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:00,412 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:00,412 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\JsonInserterTests.cpp(441): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("jsonroundtrip_insertthenread.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

JsonECSqlSelectAdapterTests.JsonMemberNames

    # TFS#793017
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:01,599 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:01,599 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:01,599 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:01,599 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\JsonReaderTests.cpp(21): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("JsonMemberNamesInJsonECSqlSelectAdapter.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementFunctionTestFixture.FunctionCallWithDistinct

    # TFS#792959
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,271 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,271 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,271 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,271 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementFunctionTests.cpp(213): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlbuiltinfunctiontest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::ReadWrite))
    # Which is: ERROR

ECSqlSelectPrepareTests.SelectClause

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,364 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,364 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,364 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,364 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1225): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL, NULL bla FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1226): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL, NULL FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1227): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL, NULL, NULL FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1228): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL bli, NULL bla FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1231): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select I, I FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1234): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select I + L, I + L FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1235): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select I + L, I +L FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1238): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULLIF(I,123) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1240): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select COALESCE(I,123,L) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.Arrays

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,177 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,177 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,177 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,177 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(244): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Dt_Array, B FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(245): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE Dt_Array = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(246): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE Dt_Array <> ?")
    # Which is: ECSqlStatus::InvalidECSql
    # unbound parameters mean NULL and comparing NULL with NULL is always false
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(247): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE Dt_Array IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(248): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE Dt_Array IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(250): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, PStruct_Array FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.Options

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,021 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,021 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,021 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,021 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(976): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P ECSQLOPTIONS myopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(977): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P ECSQLOPTIONS myopt myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(978): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P ECSQLOPTIONS myopt=1 myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(979): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P ECSQLOPTIONS myopt=1 myotheropt=true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(980): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P ECSQLOPTIONS myopt myotheropt=true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(981): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P ECSQLOPTIONS myopt myotheropt=true onemoreopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(982): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECInstanceId=? ECSQLOPTIONS myopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(983): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECInstanceId=? ECSQLOPTIONS myopt myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(984): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECInstanceId=? ECSQLOPTIONS myopt=1 myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(985): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECInstanceId=? ORDER BY I ECSQLOPTIONS myopt=1 myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(986): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECInstanceId=? GROUP BY I HAVING I=1 ECSQLOPTIONS myopt=1 myotheropt")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlUpdatePrepareTests.Arrays

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,942 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,942 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,942 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,942 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1775): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET Dt_Array = NULL, B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1776): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET PStruct_Array = NULL, B = true")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlInsertPrepareTests.Relationships

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,864 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,864 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,864 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,864 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1726): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasOnlyTHBase_NN (SourceECInstanceId, TargetECInstanceId) VALUES (123, 321)")
    # Which is: ECSqlStatus::InvalidECSql
    # Target is non-polymorphic -> target class id not required
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1727): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasOnlyTHBase_NN (SourceECInstanceId, SourceECClassId, TargetECInstanceId, TargetECClassId) VALUES (123,?, 333, ?)")
    # Which is: ECSqlStatus::InvalidECSql
    # Target is non-polymorphic -> target class id not required
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1730): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasTHBase_NN (SourceECInstanceId, TargetECInstanceId) VALUES (123, 124);")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1731): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasTHBase_NN (SourceECInstanceId, SourceECClassId, TargetECInstanceId, TargetECClassId) VALUES (123, 333, 124, 335)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1732): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasTHBase_NN (SourceECInstanceId, SourceECClassId, TargetECInstanceId, TargetECClassId) VALUES (123, ?, 124, ?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1733): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasTHBase_NN (SourceECInstanceId, TargetECInstanceId, TargetECClassId) VALUES (123, 333, 124)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1735): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasPWithPrimProps (SourceECInstanceId, TargetECInstanceId) VALUES (123, 442)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1736): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasPWithPrimProps (SourceECInstanceId, SourceECClassId, TargetECInstanceId, TargetECClassId, B, D, I, S) VALUES (123, 332, 124, 335, True, 3.14, 123, 'hello')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1737): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasPWithPrimProps (SourceECInstanceId, SourceECClassId, TargetECInstanceId, TargetECClassId) VALUES (123, 332, 125, 334)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.Union

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,474 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,474 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,474 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,474 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1321): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.P UNION SELECT ECInstanceId FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1322): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.P UNION ALL SELECT ECInstanceId FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1323): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT B, Bi, I, L, S, P2D, P3D FROM ecsql.P UNION ALL SELECT B, Bi, I, L, S, P2D, P3D FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1324): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp FROM ecsql.PSA UNION SELECT SAStructProp.PStructProp FROM ecsql.SA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1325): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT B_Array, Bi_Array, D_Array, Dt_Array, I_Array, S_Array, P2D_Array, P3D_Array FROM ecsql.PSA UNION ALL SELECT B_Array, Bi_Array, D_Array, Dt_Array, I_Array, S_Array, P2D_Array, P3D_Array FROM ecsql.PA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1326): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStruct_Array FROM ecsql.PSA UNION SELECT SAStructProp.PStruct_Array FROM ecsql.SA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1327): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, COUNT(*) FROM (SELECT ECClassId, ECInstanceId FROM ecsql.PSA UNION ALL SELECT ECClassId, ECInstanceId FROM ecsql.SA) GROUP BY ECClassId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1328): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, Name, COUNT(*) FROM (SELECT ECClassId, ECInstanceId, 'PSA' Name FROM ecsql.PSA UNION ALL SELECT ECClassId, ECInstanceId, 'SA' Name FROM ecsql.SA) GROUP BY ECClassId, Name")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1329): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, NULL FROM ecsql.PSA UNION ALL SELECT NULL, I FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1330): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL, I FROM ecsql.PSA UNION ALL SELECT S, NULL FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1331): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ecsql.P UNION ALL SELECT Dt FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1332): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, 2.34 FROM ecsql.P UNION ALL SELECT I, S FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.Subquery

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,442 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,442 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,442 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,442 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1298): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.P WHERE ECInstanceId < (SELECT avg(ECInstanceId) FROM ecsql.P)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1299): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM (SELECT * FROM ecsql.P)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1305): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT AVG(S) FROM (SELECT * FROM ecsql.P)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1311): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE B = (SELECT DateOnly FROM ecsql.P)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1312): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE B IN (SELECT DateOnly FROM ecsql.P)")
    # Which is: ECSqlStatus::InvalidECSql

SchemaManagerTests.CasingTests

    # TFS#792991
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:15,725 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:15,725 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:15,725 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:15,725 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaManagerTests.cpp(727): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("schemamanagercasingtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlInsertPrepareTests.Casing

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,661 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,661 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,661 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,661 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1481): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO EcSqltEst.P(ECInstanceId) VALUES(NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1482): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ECSQLTEST.P(ECInstanceId) VALUES(NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1483): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsqltest.P(ECInstanceId) VALUES(NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1484): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ECSqlTest.p(ECInstanceId) VALUES(NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1485): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsQl.P(ECInstanceId) VALUES(NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1486): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsQl.p(ECInstanceId) VALUES(NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1487): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsQl.p(EcinstanceId) VALUES(NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1488): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsQl.p(ecinstanceId) VALUES(NULL)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.SubQuery

    # TFS#793020
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,599 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,599 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,599 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,614 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(649): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM (SELECT COUNT(*) FROM ecsql.PSA)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlExecutionFrameworkTests.RelationalOperatorsOnPointProperties

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,271 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,271 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,271 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,271 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkTests.cpp(58): error:       Expected: ECSqlStatus::Success
    # To be equal to: prepareStatus
    # Which is: ECSqlStatus::InvalidECSql
    # Statement prepare failed for:INSERT INTO ecsql.P (I, P2D, P3D) VALUES (123, ?, ?)

ECSqlStatementTestFixture.BindStructArrayWithOutOfBoundsLength

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,443 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,443 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,443 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,443 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2899): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.BindPrimitiveArray

    # TFS#792945
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,380 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,380 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,380 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,380 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2758): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlSelectPrepareTests.From

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,567 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,567 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,567 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,567 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(601): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql.PSAHasPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(602): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql:PSAHasPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(603): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.PSAHasPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(604): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql:PSAHasPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(605): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId, SourceECInstanceId, TargetECInstanceId FROM ONLY ecsql.PSAHasPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(606): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId, SourceECInstanceId, TargetECInstanceId FROM ecsql.PSAHasPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(607): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ONLY ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(608): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(609): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId, SourceECInstanceId, TargetECInstanceId FROM ONLY ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(610): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId, SourceECInstanceId, TargetECInstanceId FROM ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(623): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.Abstract")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(624): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ONLY ecsql.Abstract")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(625): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ONLY ecsql.AbstractNoSubclasses")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlDeletePrepareTests.Options

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,677 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,677 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,677 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,677 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2469): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P ECSQLOPTIONS myopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2470): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P ECSQLOPTIONS myopt myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2471): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P ECSQLOPTIONS myopt=1 myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2472): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P ECSQLOPTIONS myopt=1 myotheropt=true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2473): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P ECSQLOPTIONS myopt myotheropt=true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2474): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P ECSQLOPTIONS myopt myotheropt=true onemoreopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2475): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ECInstanceId=? ECSQLOPTIONS myopt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2476): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ECInstanceId=? ECSQLOPTIONS myopt myotheropt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2477): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ECInstanceId=? ECSQLOPTIONS myopt=1 myotheropt")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlExecutionFrameworkTests.ArrayTests

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,599 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,599 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,599 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,599 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkTests.cpp(282): error:       Expected: ECSqlStatus::Success
    # To be equal to: prepareStatus
    # Which is: ECSqlStatus::InvalidECSql
    # Statement prepare failed for:INSERT INTO ecsql.PSA (Dt_Array, B) VALUES (NULL, true)

DateTimeTestFixture.ECSqlStatementGetValueDateTime

    # TFS#792986
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:10,739 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:10,739 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:10,739 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:10,739 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\DateTimeTests.cpp(242): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecdbdatetime.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlExecutionFrameworkTests.IntoTests

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,677 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,677 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,677 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,677 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkTests.cpp(469): error:       Expected: ECSqlStatus::Success
    # To be equal to: prepareStatus
    # Which is: ECSqlStatus::InvalidECSql
    # Statement prepare failed for:INSERT INTO ecsql.THBase (S) VALUES ('hello')

ECSqlInsertPrepareTests.Misc

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,771 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,771 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,771 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,771 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1616): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (I) VALUES (1 + 1)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1617): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (I) VALUES (5 * 4)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1618): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (L) VALUES (1 + ECClassId)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1619): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (L) VALUES (ECClassId * 4)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1623): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (ECInstanceId) VALUES (NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # NULL for ECInstanceId means ECDb auto-generates the ECInstanceId.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1624): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.TH2 (ECInstanceId) VALUES (NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1625): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (ECInstanceId, I) VALUES (NULL, NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1626): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.TH2 (ECInstanceId, S2) VALUES (NULL, 'hello')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1627): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (ECInstanceId) VALUES (123)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1628): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.TH2 (ECInstanceId) VALUES (4443412341)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1629): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (ECInstanceId) VALUES (?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1632): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (ECInstanceId, I) VALUES (123, 123)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1633): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.TH2 (ECInstanceId, S1) VALUES (41241231231, 's1')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1636): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasPSA (ECInstanceId, SourceECInstanceId, TargetECInstanceId) VALUES (NULL, 123, 345)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1637): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasPSA(ECInstanceId, SourceECInstanceId, TargetECInstanceId) VALUES(129, 123, 312)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1638): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSAHasPSA(ECInstanceId, SourceECInstanceId, TargetECInstanceId) VALUES(?, 123, 312)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1644): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (ECInstanceId) VALUES (123)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1645): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.TH2 (ECInstanceId) VALUES (412313)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1656): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (Dt, L, S) VALUES (DATE '2013-04-30', 100000000000, 'hello, world')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1657): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (L, S, I) VALUES (100000000000, 'hello, \" world', -1)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1658): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (L, I) VALUES (CAST (100000 AS INT64), 12 + 99)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1659): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (L, S, DtUtc) VALUES (?, ?, ?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1663): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P VALUES (True, NULL, 3.1415, TIMESTAMP '2013-10-14T12:00:00', TIMESTAMP '2013-10-14T12:00:00Z', TIMESTAMP '2013-10-14T12:00:00', DATE '2013-10-14', 123, 1234567890, 'bla bla', NULL, NULL, NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1672): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (B) VALUES (true)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1673): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (B) VALUES (True)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1674): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (B) VALUES (false)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1676): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (Dt) VALUES (DATE '2012-01-18')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1677): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.PSA (Dt) VALUES (TIMESTAMP '2012-01-18T13:02:55')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1689): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql._UnderBar (_A_B_C, _ABC, _ABC_, A_B_C_, ABC_) VALUES ('_A_B_C', 2, '_ABC_', 4, 'ABC_')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1690): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.[_UnderBar] ([_A_B_C], [_ABC], [_ABC_], [A_B_C_], [ABC_]) VALUES ('_A_B_C', 2, '_ABC_', 4, 'ABC_')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1693): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql._UnderBar (_A_B_C, _ABC, _ABC_, A_B_C_, ABC_) VALUES ('5''55''', 2, '''_ABC_', 4, 'ABC_''')")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.AndOrPrecedence

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,146 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,146 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,146 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,146 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(232): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.TH3 WHERE S1 IS NOT NULL OR S2 IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(233): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.TH3 WHERE (S1 IS NOT NULL OR S2 IS NOT NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(234): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.TH3 WHERE S1 IS NULL AND S2 IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(235): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.TH3 WHERE S1 IS NULL AND S2 IS NOT NULL OR 1=1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(236): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.TH3 WHERE S1 IS NULL AND (S2 IS NOT NULL OR 1=1)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlDeletePrepareTests.AndOrPrecedence

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,489 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,505 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,505 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,505 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2323): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.TH3 WHERE S1 IS NOT NULL OR S2 IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2324): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.TH3 WHERE (S1 IS NOT NULL OR S2 IS NOT NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2325): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.TH3 WHERE S1 IS NULL AND S2 IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2326): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.TH3 WHERE S1 IS NULL AND S2 IS NOT NULL OR 1=1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2327): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.TH3 WHERE S1 IS NULL AND (S2 IS NOT NULL OR 1=1)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlUpdatePrepareTests.CommonGeometry

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,974 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,974 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,974 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,974 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1798): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET I = 123, Geometry = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1799): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET I = 123, Geometry_Array = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1800): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET I = 123 WHERE Geometry IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1801): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET I = 123 WHERE Geometry_Array IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1803): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET Geometry=NULL WHERE Geometry=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1804): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET Geometry=NULL WHERE Geometry<>?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1805): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET Geometry=NULL WHERE Geometry IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1806): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET Geometry=NULL WHERE Geometry IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1807): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET Geometry=NULL WHERE Geometry_Array IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1808): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PASpatial SET Geometry=NULL WHERE Geometry_Array IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1810): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.SSpatial SET SpatialStructProp.Geometry=NULL WHERE SpatialStructProp.Geometry IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1811): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.SSpatial SET SpatialStructProp.Geometry=NULL WHERE SpatialStructProp.Geometry IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1812): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.SSpatial SET SpatialStructProp.Geometry=NULL WHERE SpatialStructProp.Geometry_Array IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1813): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.SSpatial SET SpatialStructProp.Geometry=NULL WHERE SpatialStructProp.Geometry_Array IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.BlobIO

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:46,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:46,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:46,193 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:46,193 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(5544): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("blobioinvalidcases.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlCustomFunctionTestFixture.JulianDayFromStringFunction

    # TFS#792995
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,099 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,099 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlCustomFunctionTests.cpp(439): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlfunctiontest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.UpdateWithStructBinding

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,474 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,474 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,474 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,474 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3094): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("UpdateWithStructBinding.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlCustomFunctionTestFixture.CallUnregisteredSqlFunction

    # TFS#792995
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,005 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,005 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,005 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,005 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlCustomFunctionTests.cpp(170): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlfunctiontest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlSelectPrepareTests.Misc

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,958 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,958 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,958 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,958 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(925): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.PSA a")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(926): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(927): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.P WHERE ECInstanceId >= 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(928): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT a.* FROM ecsql.P a WHERE a.ECInstanceId >= 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(929): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.SA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(935): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT D FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(936): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L, S FROM ecsql.PSA d")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(937): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L, B FROM ecsql.PSA t")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(938): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L, B FROM ecsql.PSA ts")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(939): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L, B FROM ecsql.PSA Z")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(941): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT DISTINCT Dt_Array FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(942): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT DISTINCT MyPSA FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(943): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT DISTINCT MyPSA.Id FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(944): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT DISTINCT MyPSA.RelECClassId FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(946): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT _A_B_C,_ABC,_ABC_,A_B_C_,ABC_ FROM ecsql._UnderBar")
    # Which is: ECSqlStatus::InvalidECSql
    # Select clause in which the class name and the properties name contain, start with or end with under bar
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(947): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT [_A_B_C],[_ABC],[_ABC_],[A_B_C_],[ABC_] FROM ecsql.[_UnderBar]")
    # Which is: ECSqlStatus::InvalidECSql
    # Select clause in which the class name and the properties name contain, start with or end with under bar

ECSqlSelectPrepareTests.Casing

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,349 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,349 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,349 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,349 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(434): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM EcSqltEst.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(435): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ECSQLTEST.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(436): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ecsqltest.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(437): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ECSqlTest.p")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(438): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT s FROM ECSqlTest.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(439): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ecsQl.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(440): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ecsql.p")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(441): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT s FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(442): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ecinsTanceiD FROM ECSqlTest.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(443): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ecCLassid FROM ECSqlTest.P")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.StructUpdateWithDotOperator

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:45,224 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,224 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,224 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:45,224 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4526): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECDbMetaSchemaECSqlTestFixture.ECClassId

    # TFS#792967
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:28,880 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:28,880 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:28,880 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:28,880 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECDbMetaSchemaECSqlTestFixture.cpp(1109): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("metaschematests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.InsertWithStructBinding

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,458 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,458 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,458 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,458 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2941): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("InsertWithStructBinding.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.MultipleInsertsWithoutReprepare

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,864 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,864 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,864 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,864 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3823): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.ColumnInfoWithJoin

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,208 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,208 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2398): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlStatementTestFixture.InvalidBindArrayCalls

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,255 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,255 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,255 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,255 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2489): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.BindPrimArrayWithOutOfBoundsLength

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,411 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,411 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,411 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,411 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2857): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.BindSourceAndTargetECInstanceId

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,349 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,349 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,349 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,349 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2673): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.ColumnInfoForStructArrays

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,833 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,833 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,833 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,833 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3737): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlSelectPrepareTests.DateTime

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,427 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,427 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,427 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,427 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(482): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt = TIMESTAMP '2012-01-18 13:02:55.123'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(483): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt = TIMESTAMP '2013-02-18T06:00:00.000'")
    # Which is: ECSqlStatus::InvalidECSql
    # ECSQL supports the date and time component delimiter from both SQL-99 (space) and ISO 8601 ('T').
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(484): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt = DATE '2012-01-18'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(485): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt > DATE '2012-01-18' AND Dt <= DATE '2014-01-01'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(486): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt > DATE '2012-01-18' AND Dt <= TIMESTAMP '2014-01-01 12:00:00'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(487): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt = TIMESTAMP '2012-01-18 13:02:55'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(488): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt = TIMESTAMP '2012-01-18 13:02:55.123'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(489): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt > TIMESTAMP '2012-01-18 13:02:55.123Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(490): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(491): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE Dt IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(492): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE DtUtc IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(493): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE DtUtc IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(494): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE Dt = :utc")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(495): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE Dt > :dateonly")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(496): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc = TIMESTAMP '2013-02-18 06:00:00Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(498): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE DtUtc > :dateonly")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(500): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc = Dt")
    # Which is: ECSqlStatus::InvalidECSql
    # Dt has no DateTimeInfo, so it accepts any date time kind on the other side of the expression
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(501): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUnspec = TIMESTAMP '2013-02-18 06:00:00'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(503): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE DtUnspec > :dateonly")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(506): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DateOnly = TIMESTAMP '2013-02-18 00:00:00Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # Date-onlys (DateTime::Component::Date) can have any date time kind on other side of operation
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(507): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DateOnly = TIMESTAMP '2013-02-18 00:00:00'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(508): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DateOnly = Dt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(509): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DateOnly = DtUtc")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(510): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DateOnly <= DtUtc")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(511): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DateOnly < DtUtc")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(512): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE Dt IN (TIMESTAMP '2013-02-18 06:00:00', DATE '2013-02-01')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(513): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE Dt IN (TIMESTAMP '2013-02-18 06:00:00Z', DATE '2013-02-01')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(514): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE Dt IN (TIMESTAMP '2013-02-18 06:00:01', DATE '2013-02-01')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(515): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE Dt IN (TIMESTAMP '2013-02-18 06:00:01', :utc)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(516): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc IN (TIMESTAMP '2013-02-18 06:00:00Z', DATE '2013-02-01')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(518): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUnspec IN (TIMESTAMP '2013-02-18 06:00:00', TIMESTAMP '2014-02-18 06:00:00')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(519): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUnspec IN (TIMESTAMP '2013-02-18 06:00:00', DATE '2014-02-18')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(521): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc BETWEEN TIMESTAMP '2013-02-01 12:00:00Z' AND TIMESTAMP '2014-01-01 00:00:00Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(522): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc BETWEEN TIMESTAMP '2013-02-01 12:00:00Z' AND DATE '2014-01-01'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(523): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc BETWEEN DATE '2013-02-01' AND DATE '2014-01-01'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(525): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc NOT BETWEEN TIMESTAMP '2013-02-01 12:00:00Z' AND TIMESTAMP '2014-01-01 00:00:00Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(526): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc NOT BETWEEN DATE '2013-02-01' AND DATE '2014-01-01'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(527): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUtc NOT BETWEEN TIMESTAMP '2013-02-01 12:00:00Z' AND DATE '2014-01-01'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(530): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE DtUtc BETWEEN TIMESTAMP '2013-02-01 00:00:00Z' AND :utc")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(531): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUnspec BETWEEN TIMESTAMP '2013-02-01 12:00:00' AND TIMESTAMP '2014-01-01 00:00:00'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(532): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUnspec BETWEEN TIMESTAMP '2013-02-01T12:00:00' AND DATE '2014-01-01'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(533): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE DtUnspec BETWEEN DATE '2013-02-01' AND DATE '2014-01-01'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(539): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE I = ? OR Dt = ? OR S = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(542): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE Dt = CURRENT_DATE")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(543): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, CURRENT_DATE FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(544): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE Dt = CURRENT_TIMESTAMP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(545): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.P WHERE DtUtc = CURRENT_TIMESTAMP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(547): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, CURRENT_TIMESTAMP FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlCustomFunctionTestFixture.NumericSqlFunction

    # TFS#792995
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,021 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,021 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,021 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,021 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlCustomFunctionTests.cpp(190): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("NumericSqlFunction.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

JsonReaderTests.PartialPoints

    # TFS#792974
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:02,177 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:02,177 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:02,177 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:02,177 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\JsonReaderTests.cpp(942): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("jsonreaderpartialpoints.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.ClassWithStructHavingStructArrayUpdateWithDotOperator

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:45,239 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,239 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,239 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:45,239 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4573): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlDeletePrepareTests.Functions

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,614 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,614 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,614 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,614 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2418): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ECClassId <> 145")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2419): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ECClassId = 145")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2420): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE LOWER(S) = UPPER(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2421): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE LOWER(UPPER(S)) = LOWER (S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2422): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE LOWER(I)=I")
    # Which is: ECSqlStatus::InvalidECSql
    # lower/upper only make sense with strings, but no failure if used for other data types (like in SQLite)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2423): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE UPPER(D)>0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2424): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE LOWER(S)=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2425): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE UPPER(?) = 'hello'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2426): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE InVirtualSet(?, ECInstanceId)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2428): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ECInstanceId MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2429): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ECInstanceId NOT MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2430): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE I MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2431): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE (I + L) MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # even though SQLite expects the LHS to be a column, we allow a value exp in the ECSQL grammar. Fails at step time only

ECSqlDeletePrepareTests.Polymorphic

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,708 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,708 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,708 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,708 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2484): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2489): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.AbstractTablePerHierarchy")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2491): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.THBase")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2492): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.THBase")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2494): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.TCBase")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlInsertPrepareTests.DateTime

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,692 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,692 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,692 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,692 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1510): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (TIMESTAMP '2012-01-18 13:02:55')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1511): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (TIMESTAMP '2012-01-18 13:02:55.123')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1512): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (TIMESTAMP '2012-01-18 13:02:55.123456')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1513): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (TIMESTAMP '2013-02-18T06:00:00.000')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1514): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (TIMESTAMP '2012-01-18 13:02:55Z')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1515): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (DATE '2012-01-18')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1516): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1519): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DtUtc) VALUES (TIMESTAMP '2013-02-18 06:00:00Z')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1521): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DtUtc) VALUES (DATE '2012-01-18')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1524): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DtUnspec) VALUES (TIMESTAMP '2013-02-18 06:00:00')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1526): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DtUnspec) VALUES (DATE '2012-01-18')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1529): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DateOnly) VALUES (DATE '2013-02-18')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1531): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DateOnly) VALUES (TIMESTAMP '2013-02-18 06:00:00Z')")
    # Which is: ECSqlStatus::InvalidECSql
    # DateOnly can take time stamps, too
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1532): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DateOnly) VALUES (TIMESTAMP '2013-02-18 06:00:00')")
    # Which is: ECSqlStatus::InvalidECSql
    # DateOnly can take time stamps, too
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1535): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (CURRENT_DATE)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1536): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DtUtc) VALUES (CURRENT_DATE)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1537): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (Dt) VALUES (CURRENT_TIMESTAMP)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1538): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (DtUtc) VALUES (CURRENT_TIMESTAMP)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1543): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (I, L) VALUES (123, DATE '2013-04-30')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1546): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.P (I, Dt, DtUtc, DtUnspec, DateOnly) VALUES (123, ?, ?, ?, ?)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlExecutionFrameworkTests.CommonGeometryTests

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,614 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,614 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,614 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,614 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkTests.cpp(296): error:       Expected: ECSqlStatus::Success
    # To be equal to: prepareStatus
    # Which is: ECSqlStatus::InvalidECSql
    # Statement prepare failed for:INSERT INTO ecsql.PASpatial (I, Geometry) VALUES (123, NULL)

ECSqlStatementTestFixture.Step

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,849 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,849 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,849 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,849 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3787): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlSelectPrepareTests.CommonGeometry

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,380 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,380 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,380 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,380 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(451): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Geometry, S FROM ecsql.PASpatial")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(452): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Geometry_Array, S FROM ecsql.PASpatial")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(454): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.PASpatial")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(455): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT p.* FROM ecsql.PASpatial p")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(456): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(*) FROM ecsql.PASpatial p")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(457): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT * FROM ecsql.SSpatial")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(458): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT SpatialStructProp FROM ecsql.SSpatial")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(459): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT SpatialStructProp.Geometry FROM ecsql.SSpatial")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(460): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT SpatialStructProp.Geometry_Array FROM ecsql.SSpatial")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(462): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.PASpatial WHERE Geometry=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(463): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.PASpatial WHERE Geometry<>?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(464): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.PASpatial WHERE Geometry IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(465): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.PASpatial WHERE Geometry IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(466): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.PASpatial WHERE Geometry_Array IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(467): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.PASpatial WHERE Geometry_Array IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(469): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.SSpatial WHERE SpatialStructProp.Geometry IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(470): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.SSpatial WHERE SpatialStructProp.Geometry IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(471): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.SSpatial WHERE SpatialStructProp.Geometry_Array IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(472): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ONLY ecsql.SSpatial WHERE SpatialStructProp.Geometry_Array IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlDeletePrepareTests.Casing

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,521 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,521 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,521 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,521 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2335): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY EcSqltEst.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2336): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ECSQLTEST.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2337): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsqltest.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2338): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ECSqlTest.p")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2339): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ECSqlTest.P WHERE i<0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2340): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsqltest.p WHERE i<0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2341): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY Ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2342): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecSql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2343): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.p")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2344): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.P WHERE i<0")
    # Which is: ECSqlStatus::InvalidECSql

SchemaUpgradeTestFixture.AddKoQAndUpdatePropertiesWithKoQ

    # TFS#793014
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:38,600 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:MyKindOfQuantity' persistence FormatUnitSet has a problem: Unknown name of the unit
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaUpgradeTests.cpp(59): error:       Expected: SUCCESS
    # To be equal to: TestHelper(ecdb).ImportSchema(schemaItem)
    # Which is: ERROR
    # [Unrestricted schema import] AddKoQAndUpdatePropertiesWithKoQ

ECSqlUpdatePrepareTests.DateTime

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,021 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,021 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,021 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,021 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1821): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = TIMESTAMP '2012-01-18 13:02:55'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1822): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = TIMESTAMP '2012-01-18 13:02:55.123'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1823): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = TIMESTAMP '2012-01-18 13:02:55.123456'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1824): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = TIMESTAMP '2013-02-18T06:00:00.000'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1825): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = TIMESTAMP '2012-01-18 13:02:55Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1826): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = DATE '2012-01-18'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1827): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1828): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET I = 123 WHERE Dt = TIMESTAMP '2012-01-18 13:02:55Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1831): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DtUtc = TIMESTAMP '2013-02-18 06:00:00Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1832): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET I = 123 WHERE DtUtc = TIMESTAMP '2012-01-18 13:02:55Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1835): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DtUtc = DATE '2012-01-18'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1838): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DtUnspec = TIMESTAMP '2013-02-18 06:00:00'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1839): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET I = 123 WHERE DtUnspec = TIMESTAMP '2012-01-18 13:02:55'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1842): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DtUnspec = DATE '2012-01-18'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1845): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DateOnly = DATE '2013-02-18'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1848): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DateOnly = TIMESTAMP '2013-02-18 06:00:00Z'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1849): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET I = 123 WHERE DateOnly = TIMESTAMP '2012-01-18 13:02:55'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1850): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DateOnly = TIMESTAMP '2013-02-18 06:00:00'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1853): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = CURRENT_DATE")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1854): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DtUtc = CURRENT_DATE")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1855): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET I = 123 WHERE DtUtc = CURRENT_DATE")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1856): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET Dt = CURRENT_TIMESTAMP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1857): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET DtUtc = CURRENT_TIMESTAMP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1858): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET I = 123 WHERE DtUtc = CURRENT_TIMESTAMP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1865): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.P SET I=123, Dt=?, DtUtc=?, DtUnspec=?, DateOnly=?")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.NullLiteralForStructs

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:42,474 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,474 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,474 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:42,474 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(1057): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("nullliterals.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlExecutionFrameworkTests.ParameterAdvancedTests

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,583 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,583 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,583 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,583 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkTests.cpp(151): error:       Expected: ECSqlStatus::Success
    # To be equal to: prepareStatus
    # Which is: ECSqlStatus::InvalidECSql
    # Statement prepare failed for:INSERT INTO ecsql.P (I, S) VALUES (123, ?)

ECSqlStatementTestFixture.Coalesce

    # TFS#792978
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:42,536 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,536 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,536 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:42,552 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(1288): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ECSqlStatementTests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.ColumnInfoAndSystemProperties

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,193 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,193 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2329): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlInsertPrepareTests.Into

    # TFS#792969
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,724 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,724 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,724 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,724 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1557): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.THBase (S) VALUES ('hello')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1559): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.TH5 (S, S1, S3, S5) VALUES ('hello', 'hello1', 'hello3', 'hello5')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1560): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.TH3 VALUES ('hello', NULL, NULL, NULL, 'hello1', 'hello2', 'hello3')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1582): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.Sub1 (I, S, Sub1I) VALUES (123, 'hello', 100123)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1585): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.Empty (ECInstanceId) VALUES (NULL)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1597): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.Sub1 (I) VALUES (0xabcdef)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1598): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("INSERT INTO ecsql.Sub1 (I) VALUES (0xabcdef + 0x34d - 343)")
    # Which is: ECSqlStatus::InvalidECSql

SchemaUpgradeTestFixture.DeleteKindOfQuantityFromECSchema

    # TFS#792948
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:38,913 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:MyKindOfQuantity' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:38,913 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'TestSchema.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:38,913 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML from string (1st 200 characters approx.): <?xml version='1.0' encoding='utf-8'?><ECSchema schemaName='TestSchema' alias='ts' version='1.0.0' xmlns='http://www.bentley.com/schemas/Bentley.ECXML.3.1'>    <KindOfQuantity typeName='MyKindOfQuanti
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaUpgradeTests.cpp(7160): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("schemaupdate.ecdb", schemaItem)
    # Which is: ERROR

ECSqlUpdatePrepareTests.Functions

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,067 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,067 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,067 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,067 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1873): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE LOWER(S) = UPPER(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1874): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE LOWER(UPPER(S)) = LOWER (S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1875): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE LOWER(I)=I")
    # Which is: ECSqlStatus::InvalidECSql
    # lower/upper only make sense with strings, but no failure if used for other data types (like in SQLite)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1876): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE UPPER(D)>0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1877): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE LOWER(S)=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1878): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE UPPER(?) = 'hello'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1879): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE InVirtualSet(?, ECInstanceId)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1881): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE ECInstanceId MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1882): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE ECInstanceId NOT MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1883): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE I MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1884): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE (I + L) MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # even though SQLite expects the LHS to be a column, we allow a value exp in the ECSQL grammar. Fails at step time only

ECSqlSelectPrepareTests.Relationships

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,271 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,271 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,271 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,271 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1173): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasP WHERE ECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1174): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasP WHERE ECInstanceId <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1175): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasP WHERE SourceECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1176): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasP WHERE TargetECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1177): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasP WHERE SourceECInstanceId = 123 AND TargetECInstanceId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1178): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasP WHERE SourceECInstanceId = 123 AND TargetECInstanceId <> 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1179): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasP WHERE SourceECClassId = 123 AND TargetECClassId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1180): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasP WHERE SourceECClassId = 123 + 1 AND TargetECClassId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1182): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPSA WHERE ECInstanceId =123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1183): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPSA WHERE ECInstanceId <>123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1184): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPSA WHERE SourceECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1185): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPSA WHERE TargetECInstanceId =123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1186): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPSA WHERE SourceECInstanceId =123 AND TargetECInstanceId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1187): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPSA WHERE SourceECInstanceId =123 AND TargetECInstanceId <> 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1188): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPSA WHERE SourceECClassId =123 AND TargetECClassId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1189): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPSA WHERE SourceECClassId = 123 + 1 AND TargetECClassId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1191): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1192): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE B = false")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1193): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE B = false AND D = 3.14")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1194): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE SourceECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1195): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE TargetECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1196): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE SourceECClassId <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1197): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE SourceECClassId =123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1198): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE TargetECClassId <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1199): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE TargetECClassId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1200): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE ECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1201): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSAHasPWithPrimProps WHERE ECInstanceId > 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1204): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, SourceECInstanceId, SourceECClassId, TargetECInstanceId, TargetECClassId FROM ecsql.PSAHasP_N1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1207): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, SourceECClassId, TargetECClassId FROM ecsql.PSAHasPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1209): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, SourceECClassId, TargetECClassId FROM ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1211): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, SourceECClassId, TargetECClassId FROM ecsql.PSAHasP WHERE SourceECClassId = TargetECClassId AND ECClassId = 180")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1212): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, rel.SourceECClassId, rel.TargetECClassId FROM ecsql.PSAHasP rel WHERE rel.SourceECClassId = rel.TargetECClassId AND rel.ECClassId = 180")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1213): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, SourceECClassId, TargetECClassId FROM ecsql.PSAHasP ORDER BY ECClassId, SourceECClassId, TargetECClassId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1214): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId, SourceECClassId, TargetECClassId FROM ecsql.PSAHasP rel ORDER BY rel.ECClassId, rel.SourceECClassId, rel.TargetECClassId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1215): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT rel.ECClassId, rel.SourceECClassId, rel.TargetECClassId FROM ecsql.PSAHasP rel")
    # Which is: ECSqlStatus::InvalidECSql

SchemaManagerTests.GetDerivedECClassesWithoutIncrementalLoading

    # TFS#792991
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:15,771 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:15,771 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:15,771 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:15,771 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaManagerTests.cpp(786): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecschemamanagertest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECInstanceUpdaterTests.UpdateRelationships

    # TFS#793018
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:33,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:33,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:33,099 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:33,099 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECInstanceUpdaterTests.cpp(112): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("UpdateRelationships.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlUpdatePrepareTests.Relationships

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,192 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,192 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,192 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,192 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2025): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2026): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE B = false")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2027): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE B = false AND D = 3.14")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2028): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE SourceECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2029): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B = ? WHERE TargetECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2030): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE SourceECClassId <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2031): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE SourceECClassId =123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2032): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE TargetECClassId <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2033): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE TargetECClassId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2034): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE ECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2035): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSAHasPWithPrimProps SET B=? WHERE ECInstanceId > 123")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.ColumnInfoForStructs

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,818 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,818 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,818 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,818 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3700): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlStatementTestFixture.GetValueWithPartialPoints

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,927 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,927 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,927 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,927 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4015): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("jsonreaderpartialpoints.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementCacheTests.VerifyCacheSizeMustNotExceedLimit

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,130 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,130 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,130 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,130 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementCacheTest.cpp(86): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ECSqlStatementCacheTest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlSelectPrepareTests.GroupBy

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,692 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,692 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,692 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,692 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(716): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, count(*) FROM ecsql.PSA GROUP BY I;")
    # Which is: ECSqlStatus::InvalidECSql
    # with trailing semicolon
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(717): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT B, count(*) FROM ecsql.PSA GROUP BY B;")
    # Which is: ECSqlStatus::InvalidECSql
    # with trailing semicolon
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(718): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Bi, count(*) FROM ecsql.PSA GROUP BY Bi")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(719): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Hex(Bi), count(*) FROM ecsql.PSA GROUP BY Bi;")
    # Which is: ECSqlStatus::InvalidECSql
    # with trailing semicolon
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(720): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, count(*) FROM ecsql.PSA GROUP BY S;")
    # Which is: ECSqlStatus::InvalidECSql
    # with trailing semicolon
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(721): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT DtUtc, count(*) FROM ecsql.PSA GROUP BY DtUtc;")
    # Which is: ECSqlStatus::InvalidECSql
    # with trailing semicolon
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(722): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Geometry, count(*) FROM ecsql.PASpatial GROUP BY Geometry;")
    # Which is: ECSqlStatus::InvalidECSql
    # with trailing semicolon
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(723): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(*) FROM ecsql.PSA GROUP BY S")
    # Which is: ECSqlStatus::InvalidECSql
    # group by column not in select clause is supported (although against standard)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(724): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, count(*) FROM ecsql.PSA GROUP BY Length(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # functions in group by is supported (although against standard)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(725): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, count(*) FROM ecsql.PSA GROUP BY Length(S);")
    # Which is: ECSqlStatus::InvalidECSql
    # with trailing semicolon
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(726): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(*) FROM ecsql.PSA GROUP BY Length(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(727): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Bi, count(*) FROM ecsql.PSA GROUP BY Hex(Bi)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(728): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, L, count(*) FROM ecsql.PSA GROUP BY I + L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(729): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(*) FROM ecsql.THBase GROUP BY ECClassId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(733): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P2D, count(*) FROM ecsql.PSA GROUP BY P2D")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(734): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P3D, count(*) FROM ecsql.PSA GROUP BY P3D")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(735): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp, count(*) FROM ecsql.PSA GROUP BY PStructProp")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(736): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Bi_Array, count(*) FROM ecsql.PSA GROUP BY Bi_Array")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(737): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStruct_Array, count(*) FROM ecsql.PSA GROUP BY PStruct_Array")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(738): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Geometry, count(*) FROM ecsql.PASpatial GROUP BY I HAVING Geometry IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(739): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, count(*) FROM ecsql.PSA GROUP BY S HAVING PStructProp IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(740): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, count(*) FROM ecsql.PSA GROUP BY S HAVING Length(S) > 1")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(741): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S, count(*) FROM ecsql.PSA GROUP BY S HAVING Length(S) > 1;")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(742): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Hex(Bi), count(*) FROM ecsql.P GROUP BY Bi HAVING Hex(Bi) like '0C0B%'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(743): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Hex(Bi), count(*) FROM ecsql.P GROUP BY Bi HAVING Hex(Bi) like '1C0B%'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(746): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT MyPSA.Id, count(*) FROM ecsql.P GROUP BY MyPSA.Id")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(747): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT MyPSA.RelECClassId, count(*) FROM ecsql.P GROUP BY MyPSA.RelECClassId")
    # Which is: ECSqlStatus::InvalidECSql

SchemaManagerTests.TestGetClassResolver

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:17,584 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:17,584 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:17,584 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:17,584 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaManagerTests.cpp(2060): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecschemamanagertest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlUpdatePrepareTests.Polymorphic

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,177 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,177 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,177 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,177 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1984): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSA SET I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1989): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.AbstractTablePerHierarchy SET I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1991): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.THBase SET S = 'hello'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1992): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.THBase SET S = 'hello'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1994): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.TCBase SET S = 'hello'")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.NoECClassIdFilterOption

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,630 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,630 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,630 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,630 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3414): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementFunctionTestFixture.CoalesceAndNullIf

    # TFS#792959
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,255 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,255 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,255 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,255 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementFunctionTests.cpp(147): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("builtinfunctiontests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::ReadWrite))
    # Which is: ERROR

ECSqlSelectPrepareTests.Functions

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,630 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,630 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,630 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,630 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(656): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(*) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(658): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(NULL) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(660): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(ECInstanceId) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(661): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(I) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(662): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT count(distinct I) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(665): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT AVG (I) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(666): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT LENGTH (S) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(667): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ecsql.PSA WHERE LENGTH (S) = 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(668): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.PSA WHERE I = ROUND (122.8)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(669): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT group_concat(S) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(670): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT group_concat(S,'|') FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(671): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT group_concat(DISTINCT S) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(674): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECClassId FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(675): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT p.ECClassId FROM ecsql.PSA p")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(676): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT p.ECClassId, c.ECClassId FROM ecsql.PSA p JOIN ecsql.P c USING ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(677): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.PSA p WHERE ECClassId < 1000")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(678): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.PSA p WHERE p.ECClassId < 1000")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(679): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.PSA p ORDER BY ECClassId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(680): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.PSA p ORDER BY p.ECClassId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(682): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECClassId <> 145")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(683): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECClassId = 145")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(684): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE LOWER(S) = UPPER(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(685): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE LOWER(UPPER(S)) = LOWER (S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(686): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE LOWER(I)=I")
    # Which is: ECSqlStatus::InvalidECSql
    # lower/upper only make sense with strings, but no failure if used for other data types (like in SQLite)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(687): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE UPPER(D)>0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(688): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE LOWER(S)=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(689): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE UPPER(?) = 'hello'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(690): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE InVirtualSet(?, ECInstanceId)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(692): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECInstanceId MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(693): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE ECInstanceId NOT MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(694): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE I MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time only
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(695): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.P WHERE (I + L) MATCH random()")
    # Which is: ECSqlStatus::InvalidECSql
    # even though SQLite expects the LHS to be a column, we allow a value exp in the ECSQL grammar. Fails at step time only

ECInstanceUpdaterTests.UpdateWithCurrentTimeStampTrigger

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:33,114 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:33,114 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:33,114 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:33,114 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECInstanceUpdaterTests.cpp(131): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("updatewithcurrenttimestamptrigger.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlExecutionFrameworkTests.MiscTests

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,692 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,692 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,692 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,692 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(427): error:       Expected: ECSqlStatus::Success
    # To be equal to: PrepareStatement(query)
    # Which is: ECSqlStatus::InvalidECSql
    # Prepare failed for statement INSERT INTO ecsql.P (I) VALUES (1 + 1)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkTests.cpp(575): error:       Expected: ECSqlStatus::Success
    # To be equal to: prepareStatus
    # Which is: ECSqlStatus::InvalidECSql
    # Statement prepare failed for:INSERT INTO ecsql.P (ECInstanceId) VALUES (?)

ECSqlSelectPrepareTests.Primitives

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,224 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,224 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,224 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,224 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1129): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, L FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1130): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, L FROM ecsql.PSA a")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1131): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT a.I, a.L FROM ecsql.PSA a")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1132): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT B, ECInstanceId, S FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1133): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT Bi FROM ecsql.PSA a")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1134): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 3.14 FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1135): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 3.14 FROM ecsql.PSA WHERE L = 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1136): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 1000 AS I FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1137): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 3.14 AS BlaBla FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1138): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT b FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # Primitive Property with different case
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1139): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT B, d FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # Primitive Property with different case
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1141): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE I = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1142): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE I = :p")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1143): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE L = :p1 OR I = :p2")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1144): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE L = ? OR I = :p1 OR B = :p2 OR S = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1145): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE L = ? OR I = :p1 OR I > :p1 OR S = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1146): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.P WHERE I <> ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1147): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.P WHERE D <> ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1150): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S, B FROM ecsql.PSA WHERE B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1151): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S, B FROM ecsql.PSA WHERE B = True")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1152): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S, B FROM ecsql.PSA WHERE B = false")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1153): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S, B FROM ecsql.PSA WHERE B = False")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1157): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.P WHERE B = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1158): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.P WHERE B <> ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1161): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S, B FROM ecsql.PSA WHERE S = 'Sample string'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1162): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S, B FROM ecsql.PSA WHERE S = 'Sample \"string'")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlDeletePrepareTests.Structs

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,755 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,755 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,755 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,755 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2539): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSA WHERE PStructProp IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2540): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSA WHERE PStructProp IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2541): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSA WHERE PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2542): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSA WHERE PStructProp<>?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2543): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSA WHERE PStructProp.i = 123 AND B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2544): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSA WHERE PStructProp.i = 123 AND PStructProp.dt <> DATE '2010-10-10' AND B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2546): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.SA WHERE SAStructProp.PStructProp IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2547): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.SA WHERE SAStructProp.PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2548): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.SA WHERE SAStructProp.PStructProp.i = 123 AND SAStructProp.PStructProp.dt <> DATE '2010-10-10'")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.Insert_BindDateTimeArray

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,396 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,396 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,396 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,396 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2817): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECInstanceInserterTests.InsertWithCurrentTimeStampTrigger

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:32,724 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:32,724 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:32,724 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:32,724 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECInstanceInserterTests.cpp(514): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("insertwithcurrenttimestamptrigger.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

SchemaManagerTests.IncrementalLoading

    # TFS#792991
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:15,709 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:15,709 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:15,709 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:15,709 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaManagerTests.cpp(660): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecdbschemamanagertests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementCacheTests.GetAlreadyUsedPreparedStatement

    # TFS#792950
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,177 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,177 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,177 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,177 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementCacheTest.cpp(160): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ECSqlStatementCacheTest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlSelectPrepareTests.Structs

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,396 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,396 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,396 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,396 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1250): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp.i, PStructProp.dtUtc, PStructProp.b FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1252): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp.I, PStructProp.dtUtc, PStructProp.b FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1253): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT B, PStructProp.B FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1254): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1255): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT B, PStructProp FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1256): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT B, PStructProp, P3D FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1257): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT SAStructProp FROM ecsql.SA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1258): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT SAStructProp.PStructProp FROM ecsql.SA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1259): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT SAStructProp.PStructProp, SAStructProp.PStructProp.p3d FROM ecsql.SA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1260): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1261): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA tt WHERE tt.PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1262): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE PStructProp IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1263): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE PStructProp IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1264): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE PStructProp.i IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1265): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE PStructProp.i IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1268): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.SA WHERE SAStructProp.PStructProp IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1269): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM ecsql.SA WHERE SAStructProp.PStructProp IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1272): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE PStructProp.i IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1273): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE PStructProp.i IN (10, 123, 200)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1274): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE PStructProp.i BETWEEN 10 AND 200")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1276): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSA WHERE PStructProp IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1277): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSA WHERE PStructProp IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1278): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSA WHERE PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1279): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSA WHERE PStructProp<>?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1280): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSA WHERE PStructProp.i = 123 AND B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1281): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.PSA WHERE PStructProp.i = 123 AND PStructProp.dt <> DATE '2010-10-10' AND B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1283): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.SA WHERE SAStructProp.PStructProp IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1284): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.SA WHERE SAStructProp.PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1285): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT NULL FROM ecsql.SA WHERE SAStructProp.PStructProp.i = 123 AND SAStructProp.PStructProp.dt <> DATE '2010-10-10'")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.Join

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,786 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,786 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,786 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,786 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(780): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select parent.ECInstanceId, child.ECInstanceId FROM ecsql.PSA parent JOIN ecsql.PSA child USING ecsql.PSAHasPSA BACKWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(781): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select parent.ECInstanceId, child.ECInstanceId FROM ecsql:PSA parent JOIN ecsql:PSA child USING ecsql:PSAHasPSA BACKWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(782): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select parent.ECInstanceId, child.ECInstanceId FROM ecsql.PSA parent JOIN ecsql.PSA child USING ecsql.PSAHasPSA FORWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(783): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select PSA.ECInstanceId, P.ECInstanceId FROM ecsql.PSA JOIN ecsql.P USING ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(784): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select PSA.*, P.* FROM ecsql.PSA JOIN ecsql.P USING ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(786): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.I FROM ONLY ecsql.PSA end1 JOIN ONLY ecsql.PSA end2 USING ecsql.PSAHasPSA FORWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(787): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.I FROM ONLY ecsql.PSA end1 JOIN ONLY ecsql.PSA end2 USING ecsql.PSAHasPSA BACKWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(789): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.I FROM ecsql.PSA end1 JOIN ecsql.PSA end2 USING ecsql.PSAHasPSA BACKWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(791): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.I FROM ONLY ecsql.PSA end1 JOIN ecsql.PSA end2 USING ecsql.PSAHasPSA BACKWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(792): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.I FROM ONLY ecsql.PSA end1 JOIN ONLY ecsql.P end2 USING ecsql.PSAHasP")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(793): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end1.L FROM ONLY ecsql.PSA end1 JOIN ONLY ecsql.PSA end2 USING ecsql.PSAHasPSA FORWARD WHERE end2.I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(794): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end1.L FROM ONLY ecsql.PSA end1 JOIN ONLY ecsql.PSA end2 USING ecsql.PSAHasPSA BACKWARD WHERE end2.I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(795): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.L FROM ONLY ecsql.PSA end1 JOIN ONLY ecsql.P end2 USING ecsql.PSAHasP WHERE end2.I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(796): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.L FROM ONLY ecsql.PSA end1 JOIN ONLY ecsql.P end2 USING ecsql.PSAHasP FORWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(806): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.L FROM ONLY ecsql.PSA end1 " "INNER JOIN ONLY ecsql.PSAHasPSA rel ON end1.ECInstanceId = rel.SourceECInstanceId " "INNER JOIN ONLY ecsql.PSA end2 ON end2.ECInstanceId = rel.TargetECInstanceId " "WHERE end2.I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(811): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end1.L FROM ONLY ecsql.PSA end1 " "INNER JOIN ONLY ecsql.PSAHasP rel ON end1.ECInstanceId = rel.SourceECInstanceId " "INNER JOIN ONLY ecsql.P end2 ON end2.ECInstanceId = rel.TargetECInstanceId " "WHERE end2.I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(816): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end2.L FROM ONLY ecsql.PSA end1 " "JOIN ONLY ecsql.PSAHasPSA rel ON end1.ECInstanceId = rel.SourceECInstanceId " "JOIN ONLY ecsql.PSA end2 ON end2.ECInstanceId = rel.TargetECInstanceId " "WHERE end2.I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(821): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT end1.I, end1.L FROM ONLY ecsql.PSA end1 " "JOIN ONLY ecsql.PSAHasP rel ON end1.ECInstanceId = rel.SourceECInstanceId " "JOIN ONLY ecsql.P end2 ON end2.ECInstanceId = rel.TargetECInstanceId " "WHERE end2.I = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(823): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select PSA.ECInstanceId, P.ECInstanceId FROM ecsql.PSA JOIN ecsql.P USING ecsql.PSAHasP FORWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(825): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PSA INNER JOIN ecsql.PSAHasP ON PSA.ECInstanceId = PSAHasP.SourceECInstanceId INNER JOIN ecsql.P ON P.ECInstanceId = PSAHasP.TargetECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(827): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PSAHasPSA_1N")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(828): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PSAHasPSA_11")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(829): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PSAHasPSA_NN")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(830): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PHasSA_11P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(831): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PHasP_1NPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(832): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select REL.* FROM ONLY ecsql.PSAHasPSA_1N REL ORDER BY REL.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(833): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select REL.* FROM ONLY ecsql.PSAHasPSA_11 REL ORDER BY REL.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(834): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select REL.* FROM ONLY ecsql.PSAHasPSA_NN REL ORDER BY REL.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(835): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select REL.* FROM ONLY ecsql.PHasSA_11P REL ORDER BY REL.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(836): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select REL.* FROM ONLY ecsql.PHasP_1NPSA REL ORDER BY REL.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(837): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PHasP_1NPSA, ecsql.PSAHasPSA_1N, ecsql.PSAHasPSA_11, ecsql.PSAHasPSA_NN, ecsql.PHasSA_11P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(838): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select COUNT (*) FROM ONLY ecsql.PHasP_1NPSA, ONLY ecsql.PSAHasPSA_1N, ONLY ecsql.PSAHasPSA_11, ONLY ecsql.PSAHasPSA_NN, ONLY ecsql.PHasSA_11P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(840): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PSA JOIN ecsql.PSA child USING ecsql.PSAHasPSA_1N FORWARD")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(842): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select PSAHasPSA_1N.*, PARENT.*, CHILD.* FROM ONLY ecsql.PSA PARENT JOIN ecsql.PSA CHILD USING ecsql.PSAHasPSA_1N FORWARD ORDER BY PSAHasPSA_1N.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(843): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select  PSAHasPSA_11.*, PARENT.*, CHILD.*  FROM ONLY ecsql.PSA PARENT JOIN ecsql.PSA CHILD USING ecsql.PSAHasPSA_11 BACKWARD ORDER BY PSAHasPSA_11.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(844): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select PSAHasPSA_NN.*, PARENT.*, CHILD.* FROM ONLY ecsql.PSA PARENT JOIN  ecsql.PSA CHILD USING ecsql.PSAHasPSA_NN FORWARD ORDER BY PSAHasPSA_NN.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(845): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select PHasSA_11P.*, P.*, SA.* FROM ONLY ecsql.P JOIN ecsql.SA USING ecsql.PHasSA_11P ORDER BY PHasSA_11P.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(846): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select PHasP_1NPSA.*, PARENT.*, CHILD.* FROM ecsql.P PARENT JOIN ecsql.P CHILD USING ecsql.PHasP_1NPSA BACKWARD ORDER BY PHasP_1NPSA.ECInstanceId DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(852): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select * FROM ecsql.PSA LEFT JOIN ecsql.PSAHasP ON PSA.ECInstanceId = PSAHasP.SourceECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql

ECInstanceInserterTests.InsertWithUserProvidedECInstanceId

    # TFS#792988
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:32,599 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:32,599 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:32,599 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:32,599 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECInstanceInserterTests.cpp(364): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("insertwithuserprovidedecinstanceid.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementCacheTests.BindValuesToSameCachedStatementsMultipleTime

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,114 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,114 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,114 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,114 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementCacheTest.cpp(25): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ECSqlStatementCacheTest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlSelectPrepareTests.ECInstanceId

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,521 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,521 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,521 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,521 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(558): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE ECInstanceId >= 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(559): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA a WHERE a.ECInstanceId >= 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(560): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE ECInstanceId >= 0 AND I < 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(561): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE ECInstanceId >= 0 OR I > 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(562): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE ECInstanceId ='123'")
    # Which is: ECSqlStatus::InvalidECSql
    # ECSQL supports implicit conversion from string to number for ECInstanceId.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(563): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE ECInstanceId <= '10000'")
    # Which is: ECSqlStatus::InvalidECSql
    # ECSQL supports implicit conversion from string to number for ECInstanceId.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(564): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE ECInstanceId IN ('123','334')")
    # Which is: ECSqlStatus::InvalidECSql
    # ECSQL supports implicit conversion from string to number for ECInstanceId.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(565): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE ECInstanceId BETWEEN '123' AND '223'")
    # Which is: ECSqlStatus::InvalidECSql
    # ECSQL supports implicit conversion from string to number for ECInstanceId.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(566): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE ECInstanceId IN (123, (select ECInstanceId from ecsql.PSA where ECInstanceId = 223))")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(568): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE ECInstanceId = :id")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(569): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt FROM ecsql.PSA WHERE ECInstanceId = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(571): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L FROM ecsql.PSA ECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # Might become invalid because ECInstanceId might become a reserved word.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(573): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L, B FROM ecsql.PSA [ECInstanceId]")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(575): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L AS ECInstanceId FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # Might become invalid because ECInstanceId might become a reserved word.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(577): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L AS [ECInstanceId] FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(579): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L FROM ecsql.PSA SourceECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # Might become invalid because SourceECInstanceId might become a reserved word.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(581): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L, B FROM ecsql.PSA [SourceECInstanceId]")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(583): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L AS SourceECInstanceId FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # Might become invalid because SourceECInstanceId might become a reserved word.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(585): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L AS [SourceECInstanceId] FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(587): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L FROM ecsql.PSA TargetECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # Might become invalid because TargetECInstanceId might become a reserved word.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(589): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L, B FROM ecsql.PSA [TargetECInstanceId]")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(591): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L AS TargetECInstanceId FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # Might become invalid because TargetECInstanceId might become a reserved word.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(593): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT L AS [TargetECInstanceId] FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementFunctionTestFixture.BuiltinFunctions

    # TFS#792959
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,239 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,239 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,239 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,239 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementFunctionTests.cpp(34): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlbuiltinfunctiontest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlDeletePrepareTests.Misc

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,646 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,646 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,646 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,646 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2446): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.P t WHERE t.D > 0.0")
    # Which is: ECSqlStatus::InvalidECSql
    # In SQLite they are not allowed, but ECSQL allows them. So test that ECDb properly ommits them during preparation
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2447): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.P t WHERE t.S = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2449): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.P t WHERE t.L = 0xabcdef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2453): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql._UnderBar u WHERE u.ABC_ = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2454): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.[_UnderBar] u WHERE u.[ABC_] = ?")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlExecutionFrameworkTests.StructTests

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,708 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,708 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,708 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,708 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(427): error:       Expected: ECSqlStatus::Success
    # To be equal to: PrepareStatement(query)
    # Which is: ECSqlStatus::InvalidECSql
    # Prepare failed for statement INSERT INTO ecsql.PSA (PStructProp, B) VALUES (NULL, true)

ECSqlStatementTestFixture.InsertStructArray

    # TFS#792945
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,036 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,036 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,036 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,036 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2216): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ECSqlStatementTests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlUpdatePrepareTests.Casing

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,958 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,958 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,958 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,958 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1784): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ECSqlTest.P SET I=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1785): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE EcSqltEst.P SET I=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1786): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ECSQLTEST.P SET I=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1787): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ECSqlTest.p SET I=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1788): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.p SET I=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1789): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsQl.P SET I=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1790): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET i=?")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.NullLiteralForPrimArrays

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:42,505 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,505 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,505 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:42,505 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(1137): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("nullliterals.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

FileFormatCompatibilityTests.ImportSchemas

    # TFS#792951
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:47,318 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'Costing:RATIO' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:47,318 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'Costing.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:47,318 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\fileformatbenchmark\schemas\domains\Costing.01.00.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\FileFormatCompatibilityTests.cpp(952): error:       Expected: SUCCESS
    # To be equal to: SetupTestFile("imodel2.ecdb")
    # Which is: ERROR

FileFormatCompatibilityTests.CompareProfileTables_NewFile

    # TFS#792951
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:47,943 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'Costing:RATIO' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:47,943 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'Costing.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:47,943 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\fileformatbenchmark\schemas\domains\Costing.01.00.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\FileFormatCompatibilityTests.cpp(1153): error:       Expected: SUCCESS
    # To be equal to: SetupTestFile("imodel2fileformatcompatibility_newfile_test.ecdb")
    # Which is: ERROR

ECSqlStatementCacheTests.PrepareFailure

    # TFS#792950
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,193 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,193 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,193 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementCacheTest.cpp(195): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ECSqlStatementCacheTest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlSelectPrepareTests.Alias

    # TFS#793020
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,099 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,099 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(176): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId, PStructProp A11 FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(177): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.ECInstanceId FROM ecsql.PSA S")
    # Which is: ECSqlStatus::InvalidECSql
    # tests when class alias is same as a property name.This should work unless the property is a struct property
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(178): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.ECInstanceId FROM ecsql:PSA S")
    # Which is: ECSqlStatus::InvalidECSql
    # tests when class alias is same as a property name.This should work unless the property is a struct property
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(179): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.S FROM ecsql.PSA S")
    # Which is: ECSqlStatus::InvalidECSql
    # tests when class alias is same as a property name.This should work unless the property is a struct property
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(180): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.S FROM ecsql:PSA S")
    # Which is: ECSqlStatus::InvalidECSql
    # tests when class alias is same as a property name.This should work unless the property is a struct property
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(181): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ecsql.PSA S")
    # Which is: ECSqlStatus::InvalidECSql
    # tests when class alias is same as a property name.This should work unless the property is a struct property
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(182): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(183): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.I FROM ecsql.PSA S")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(184): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA S")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(185): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, 0x332dff ffff FROM ecsql.PSA S WHERE I=0x2abdef+0x233+22")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(187): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S FROM (SELECT S FROM ecsql.PSA) S")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(188): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.S FROM (SELECT S FROM ecsql.PSA) S")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(189): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM (SELECT S, I FROM ecsql.PSA) S")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(190): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.I FROM (SELECT S, I FROM ecsql.PSA) S")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(191): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.S FROM ecsql.PSA, (SELECT ECInstanceId, I, S FROM ecsql.PSA) S WHERE PSA.ECInstanceId=S.ECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(192): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT S.Bla FROM ecsql.PSA, (SELECT ECInstanceId, I, 3.14 AS Bla FROM ecsql.PSA) S WHERE PSA.ECInstanceId=S.ECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(194): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp FROM ecsql.PSA PStructProp")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(195): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp.ECInstanceId FROM ecsql.PSA PStructProp")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(196): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp.s FROM ecsql.PSA PStructProp")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(197): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp.I FROM ecsql.PSA, (SELECT ECInstanceId, I, PStructProp FROM ecsql.PSA) PStructProp WHERE PSA.ECInstanceId=PStructProp.ECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(198): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT PStructProp.PStructProp FROM ecsql.PSA, (SELECT ECInstanceId, I, PStructProp FROM ecsql.PSA) PStructProp WHERE PSA.ECInstanceId=PStructProp.ECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(201): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P, p.ECInstanceId FROM ecsql.PSA p, ecsql.P c")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(204): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM meta.ECClassDef this WHERE ECInstanceId IN (SELECT Class.Id FROM meta.ECPropertyDef WHERE Class.Id = this.ECInstanceId)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(205): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId FROM meta.ECClassDef this WHERE ECInstanceId = (SELECT Class.Id FROM meta.ECPropertyDef WHERE Class.Id = this.ECInstanceId)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(206): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECInstanceId, (SELECT Class.Id FROM meta.ECPropertyDef WHERE Class.Id = this.ECInstanceId) FROM meta.ECClassDef this")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(208): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 1 FROM meta.ECSchemaDef WHERE meta.ECSchemaDef.Name=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(209): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 1 FROM meta.ECSchemaDef WHERE ECSchemaDef.Name=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(210): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 1 FROM meta.ECSchemaDef WHERE Name=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(211): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 1 FROM meta.ECSchemaDef s WHERE Name=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(213): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT 1 FROM ECDbMeta.ECSchemaDef WHERE ECDbMeta.ECSchemaDef.Name=?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(214): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT meta.ECSchemaDef.Name FROM meta.ECSchemaDef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(215): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT meta.ECSchemaDef.Name FROM ECDbMeta.ECSchemaDef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(216): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECDbMeta.ECSchemaDef.Name FROM ECDbMeta.ECSchemaDef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(217): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECDbMeta.ECSchemaDef.Name FROM meta.ECSchemaDef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(218): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT meta.ECSchemaDef.ECClassId FROM meta.ECSchemaDef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(219): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT meta.ECSchemaDef.ECClassId FROM ECDbMeta.ECSchemaDef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(220): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECDbMeta.ECSchemaDef.ECClassId FROM ECDbMeta.ECSchemaDef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(221): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ECDbMeta.ECSchemaDef.ECClassId FROM meta.ECSchemaDef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(223): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT p.ECInstanceId,p.ECClassId FROM ecsql.P p, meta.ClassHasAllBaseClasses WHERE I=? AND meta.ClassHasAllBaseClasses.SourceECInstanceId=p.ECClassId AND meta.ClassHasAllBaseClasses.TargetECInstanceId = 500")
    # Which is: ECSqlStatus::InvalidECSql

SchemaUpgradeTestFixture.ModifyECArrayProperty_KOQToKOQ

    # TFS#792948
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:38,913 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:KindOfQuantity1' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:38,913 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:KindOfQuantity2' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:38,913 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'TestSchema.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:38,913 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML from string (1st 200 characters approx.): <?xml version='1.0' encoding='utf-8'?><ECSchema schemaName='TestSchema' alias='ts' version='1.0.0' xmlns='http://www.bentley.com/schemas/Bentley.ECXML.3.1'>    <KindOfQuantity typeName='KindOfQuantity
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaUpgradeTests.cpp(7198): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("schemaupdate.ecdb", schemaItem)
    # Which is: ERROR

ECSqlDeletePrepareTests.From

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,583 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,583 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,583 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,583 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2371): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.TH5")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2377): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasMyMixin")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2390): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.PSAHasPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # Link table relationships can be deleted.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2399): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ONLY ecsql.Sub1")
    # Which is: ECSqlStatus::InvalidECSql

SchemaUpgradeTestFixture.RemoveKindOfQuantityFromECArrayProperty

    # TFS#792948
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:38,928 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:MyKindOfQuantity' persistence FormatUnitSet has a problem: Unknown name of the unit
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaUpgradeTests.cpp(7260): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("schemaupdate.ecdb", schemaItem)
    # Which is: ERROR

ECSqlSelectPrepareTests.Cast

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,239 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,239 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,239 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,239 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(282): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (S AS BINARY) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(283): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Bi AS BINARY) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(284): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (S AS BINARY) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(286): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS BINARY) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(287): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS BINARY[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(290): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (B AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(291): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Bi AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(292): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (1 AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(293): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (I AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(294): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (True AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(295): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (False AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(296): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (S AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(297): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST ('1' AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(302): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (B AS BOOL) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(303): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS BOOLEAN) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(304): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS BOOLEAN[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(307): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Bi AS TIMESTAMP) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(308): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Dt AS TIMESTAMP) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(309): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Dt AS DATETIME) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(310): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Dt AS DATE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(311): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (DtUtc AS TIMESTAMP) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(312): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (DtUtc AS DATETIME) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(313): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (DtUtc AS DATE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(314): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (TIMESTAMP '2013-02-09T12:00:00' AS TIMESTAMP) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(315): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (TIMESTAMP '2013-02-09T12:00:00' AS DATE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(316): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (DATE '2013-02-09' AS DATE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(317): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (D AS TIMESTAMP) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(318): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (123425 AS DATETIME) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(319): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (123425.2343 AS TIMESTAMP) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(320): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (True AS DATE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(321): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (123425.123 AS DATE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(322): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (S AS DATE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(326): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS TIMESTAMP) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(327): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS TIMESTAMP[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(329): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS DATE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(330): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS DATE[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(333): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Bi AS DOUBLE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(334): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (L AS DOUBLE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(335): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Dt AS DOUBLE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(339): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS DOUBLE) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(340): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS DOUBLE[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(343): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Bi AS INT) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(344): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (S AS INT) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(345): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (False AS INT) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(346): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (S AS INT32) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(350): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS INT) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(351): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS INT[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(354): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Bi AS LONG) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(355): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (L AS LONG) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(356): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (L AS INT64) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(357): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (True AS LONG) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(361): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS LONG) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(362): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS LONG[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(365): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (B AS STRING) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(366): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Bi AS STRING) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(367): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (True AS STRING) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(368): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (False AS STRING) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(369): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (Dt AS STRING) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(370): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (L AS STRING) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(371): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (S AS STRING) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(375): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (L AS TEXT) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(376): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS STRING) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(377): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS STRING[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(386): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS POINT2D) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(387): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS POINT2D[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(396): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS POINT3D) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(397): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS POINT3D[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(406): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS ecsql.PStruct) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(407): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS [ecsql].[PStruct]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(408): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS ecsql.PStruct[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(409): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS [ecsql].[PStruct][]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(417): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (I AS IGeometry) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(418): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (I AS Geometry) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # fails at step time
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(420): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS IGeometry) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(421): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS Geometry) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(422): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT CAST (NULL AS IGeometry[]) FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementCacheTests.CacheExcess

    # TFS#792950
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:41,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:41,208 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:41,208 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementCacheTest.cpp(219): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ECSqlStatementCacheTest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.ClassWithStructHavingStructArrayInsertWithDotOperator

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:45,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,208 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:45,208 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4471): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlSelectPrepareTests.Points

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,130 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,130 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,130 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,130 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1050): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P2D FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1051): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P3D FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1052): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P3D, P2D FROM ecsql.PSA a")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1053): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P3D, P2D FROM ecsql.PSA WHERE P2D = P2D")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1054): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P3D, P2D FROM ecsql.PSA WHERE P2D <> P2D")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1055): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P3D, P2D FROM ecsql.PSA WHERE P2D IN (P2D, P2D)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1056): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P3D, P2D FROM ecsql.PSA WHERE P2D NOT IN (P2D, P2D)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1061): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE P2D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1062): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA a WHERE a.P2D <> ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1063): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P2D != ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1064): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE P3D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1066): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE P2D = P2D")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1067): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE P2D IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1068): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE P2D IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1069): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE P3D IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1070): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE P3D IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1079): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P2D IN (P2D, P2D)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1080): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P3D IN (P3D, P3D)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1081): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P2D NOT IN (P2D, P2D)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1082): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P3D NOT IN (P3D, P3D)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1083): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P2D IN (?, ?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1084): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P2D IN (:p1, :p2)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1085): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P2D = :p1 OR (P2D = :p2 AND P2D != :p1)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1086): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P2D = :p1 OR P2D = :p2 OR P2D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1087): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P2D = :p1 OR (P2D != :p1 AND B = ?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1088): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P3D IN (?, ?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1089): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE P3D = :p1 OR P3D = :p2 OR P3D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1094): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P2D.X, P2D.Y FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1095): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT P3D.X, P3D.Y, P3D.Z FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.BindECInstanceId

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,318 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,318 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,318 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,318 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2578): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.NullLiteralForStructArrays

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:42,521 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,521 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:42,521 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:42,521 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(1212): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("nullliterals.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

SchemaManagerTests.GetKindOfQuantity

    # TFS#792991
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:17,115 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'Schema1:MyKindOfQuantity' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:17,115 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'Schema1.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:17,115 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML from string (1st 200 characters approx.): <?xml version="1.0" encoding="utf-8" ?>
    # <ECSchema schemaName="Schema1" alias="s1" version="1.0" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.1">
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaManagerTests.cpp(1628): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("getkindofquantity.ecdb", testSchemas[0])
    # Which is: ERROR

ECSqlStatementTestFixture.ColumnInfoAndNavigationAndPointProp

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,239 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,239 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,239 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,239 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2448): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlSelectPrepareTests.Parameters

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,099 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,099 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1034): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE I = :i AND S = :s AND L = :i * 1000000 + 456789")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1035): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE I = ? AND S = :s AND L = :l")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1036): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE I = -?")
    # Which is: ECSqlStatus::InvalidECSql
    # use unary operator (-) with parameter
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1037): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE ? = -?")
    # Which is: ECSqlStatus::InvalidECSql
    # use parameters on both sides of an expression (should result in default parameter type)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1038): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE ? = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # use parameters on both sides of an expression (should result in default parameter type)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1039): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE :p1 > -:p1")
    # Which is: ECSqlStatus::InvalidECSql
    # use parameters on both sides of an expression (should result in default parameter type)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1040): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.PSA WHERE :p1 = -:p1")
    # Which is: ECSqlStatus::InvalidECSql
    # use parameters on both sides of an expression (should result in default parameter type)
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1041): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ?, S FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1042): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT ? AS NewProp, S FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlStatementTestFixture.ColumnInfoForPrimitiveArrays

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,786 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,786 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,786 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,786 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(3665): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"), ECDb::OpenParams(Db::OpenMode::Readonly))
    # Which is: ERROR

ECSqlSelectPrepareTests.InOperator

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,755 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,755 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,755 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,755 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(755): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I IN (1, 2, 3)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(756): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I NOT IN (1, 2, 3)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(757): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I IN (L, I)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(758): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I NOT IN (L, I)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(759): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE S IN ('hello', 'Sample string')")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(760): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I IN (1, ?, 3)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(761): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.PSA WHERE I IN (?)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(763): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE S NOT IN ('hello', 'world' )")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(764): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE I IN (1, 2, ROUND (122.9879))")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(769): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE MyPSA.Id IN (-11)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(770): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, Dt, S FROM ecsql.P WHERE MyPSA.RelECClassId IN (-11)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlUpdatePrepareTests.TargetClass

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,255 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,255 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,255 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,255 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2074): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.TH5 SET S='hello', S1='hello1', S3='hello3', S5='hello5'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2103): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.Sub1 SET I=123, S='hello', Sub1I=100123")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlDeletePrepareTests.Relationships

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,724 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,724 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,724 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,724 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2512): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPSA WHERE ECInstanceId =123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2513): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPSA WHERE ECInstanceId <>123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2514): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPSA WHERE SourceECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2515): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPSA WHERE TargetECInstanceId =123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2516): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPSA WHERE SourceECInstanceId =123 AND TargetECInstanceId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2517): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPSA WHERE SourceECInstanceId =123 AND TargetECInstanceId <> 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2518): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPSA WHERE SourceECClassId =123 AND TargetECClassId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2519): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPSA WHERE SourceECClassId = 123 + 1 AND TargetECClassId = 124")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2521): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2522): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE B = false")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2523): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE B = false AND D = 3.14")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2524): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE SourceECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2525): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE TargetECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2526): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE SourceECClassId <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2527): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE SourceECClassId =123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2528): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE TargetECClassId <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2529): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE TargetECClassId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2530): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE ECInstanceId = 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2531): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.PSAHasPWithPrimProps WHERE ECInstanceId > 123")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlSelectPrepareTests.OrderBy

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:39,036 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,036 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:39,036 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:39,036 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(994): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(995): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY L ASC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(996): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY L DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(997): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY L, S")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(998): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY L ASC, S DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(999): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY Dt")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1000): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY Dt ASC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1001): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY Dt DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1002): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA ORDER BY DtUtc DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1003): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE ECInstanceId >= 0 ORDER BY ECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1004): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA a WHERE a.ECInstanceId >= 0 ORDER BY a.ECInstanceId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1005): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE I < L ORDER BY S")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1006): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE I < L ORDER BY LOWER (S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1007): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE I < L ORDER BY UPPER (S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1008): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE I < L ORDER BY P3D.X DESC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1009): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE I < L ORDER BY P3D.Z ASC")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1011): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE I < L ORDER BY 1")
    # Which is: ECSqlStatus::InvalidECSql
    # constant value exp as order by->no-op
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1012): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I FROM ecsql.PSA WHERE I < L ORDER BY I < 123")
    # Which is: ECSqlStatus::InvalidECSql
    # boolean exp as order by
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1021): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.P ORDER BY MyPSA.Id")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1022): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("SELECT I, S FROM ecsql.P ORDER BY MyPSA.RelECClassId")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1023): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select I FROM ecsql.PSA ORDER BY NULLIF(I,123)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1024): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select I FROM ecsql.PSA ORDER BY COALESCE(I,L)")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlUpdatePrepareTests.WhereBasics

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,411 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,411 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,411 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,411 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2204): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE B = NULL OR b = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2205): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE i>=:myParam")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2206): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE I IS 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2207): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE B IS TRUE")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2208): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE L < 3.14")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2209): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE (L < 3.14 AND I > 3) OR B = True AND D > 0.0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2210): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE 8 % 3 = 2")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2211): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE 8 % 2 = 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2222): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE True")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2223): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NOT True")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2224): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE B")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2225): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NOT B")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2227): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE Glob('*amp*',S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2228): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NOT Glob('*amp*',S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2230): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE I")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2231): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NOT I")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2232): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2233): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NOT L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2234): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE Length(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2235): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NOT Length(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2236): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE (I IS NOT NULL) AND L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2237): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE (I IS NOT NULL) AND NOT L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2244): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P2D.X >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2245): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P2D.Y >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2247): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P3D.X >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2248): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P3D.Y >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2249): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P3D.Z >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2250): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P2D.X >= P3D.X AND P2D.Y >= P3D.Y")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2252): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE (P2D.X) >= (P3D.X) AND (P2D.Y) >= (P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2253): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE (P2D.X >= P3D.X) AND (P2D.Y >= P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2254): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE (P2D.X >= P3D.X AND P2D.Y >= P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2258): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE -I = -123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2262): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2263): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2264): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2265): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2266): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL IS 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2267): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL IS NOT 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2268): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2269): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE B = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2270): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE B <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2271): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE L IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2272): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE L IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2273): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE L IS NULL OR I IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2274): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE L IS NULL AND I IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2275): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE S IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2276): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE S IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2277): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE B IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2278): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE B IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2279): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE I IS ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2280): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE I IS NOT ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2281): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE ? = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2282): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2283): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE ? <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2284): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE NULL <> ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2288): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P2D IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2289): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P2D IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2290): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P2D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2293): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P3D IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2294): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P3D IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2295): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE P3D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2299): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE MyPSA = MyPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2300): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE MyPSA IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2301): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE MyPSA = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2302): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE MyPSA.Id IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2303): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE MyPSA.Id = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2304): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE MyPSA.RelECClassId IS NULL")
    # Which is: ECSqlStatus::InvalidECSql

ECSqlCustomFunctionTestFixture.AggregateFunction

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,083 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,083 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,083 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,083 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlCustomFunctionTests.cpp(355): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlfunctiontest.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.StructArrayDelete

    # TFS#792945
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:44,302 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,302 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:44,302 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:44,302 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(2560): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlUpdatePrepareTests.Structs

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,224 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,224 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,224 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,224 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2043): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET PStructProp = NULL, B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2044): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET PStructProp = ?, B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2045): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET PStructProp.i = 123, B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2046): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET PStructProp.i = 123, PStructProp.dt = DATE '2010-10-10', B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2047): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.SA SET SAStructProp.PStructProp = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2048): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.SA SET SAStructProp.PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2049): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.SA SET SAStructProp.PStructProp.i = 123, SAStructProp.PStructProp.dt = DATE '2010-10-10'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2051): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSA SET I=? WHERE PStructProp IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2052): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSA SET I=? WHERE PStructProp IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2053): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSA SET I=? WHERE PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2054): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSA SET I=? WHERE PStructProp<>?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2055): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSA SET I=? WHERE PStructProp.i = 123 AND B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2056): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.PSA SET I=? WHERE PStructProp.i = 123 AND PStructProp.dt <> DATE '2010-10-10' AND B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2058): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.SA SET SAStructProp.PStructProp.i=? WHERE SAStructProp.PStructProp IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2059): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.SA SET SAStructProp.PStructProp.i=? WHERE SAStructProp.PStructProp = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2060): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.SA SET SAStructProp.PStructProp.i=? WHERE SAStructProp.PStructProp.i = 123 AND SAStructProp.PStructProp.dt <> DATE '2010-10-10'")
    # Which is: ECSqlStatus::InvalidECSql

SchemaUpgradeTestFixture.RemoveKindOfQuantityFromECProperty

    # TFS#792948
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:38,944 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:MyKindOfQuantity' persistence FormatUnitSet has a problem: Unknown name of the unit
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaUpgradeTests.cpp(7311): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("schemaupdate.ecdb", schemaItem)
    # Which is: ERROR

ECSqlSelectPrepareTests.NullLiteral

    # TFS#792994
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:38,989 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,989 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:38,989 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:38,989 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(955): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(956): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL, I FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(957): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL, NULL FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(958): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL as I FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # Alias in select clause is always interpreted literally even if it happens to be a property name.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(959): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL as P3D FROM ecsql.P")
    # Which is: ECSqlStatus::InvalidECSql
    # Alias in select clause is always interpreted literally even if it happens to be a property name.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(960): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL as StructProp FROM ecsql.PSA")
    # Which is: ECSqlStatus::InvalidECSql
    # Alias in select clause is always interpreted literally even if it happens to be a property name.
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(961): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("select NULL as PStruct_Array FROM ecsql.SA")
    # Which is: ECSqlStatus::InvalidECSql
    # Alias in select clause is always interpreted literally even if it happens to be a property name.

ECSqlDeletePrepareTests.WhereBasics

    # TFS#793019
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,786 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,786 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,786 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,786 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2562): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE B = NULL OR b = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2563): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE i>=:myParam")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2564): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE I IS 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2565): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE B IS TRUE")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2566): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE L < 3.14")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2567): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE (L < 3.14 AND I > 3) OR B = True AND D > 0.0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2568): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE 8 % 3 = 2")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2569): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE 8 % 2 = 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2580): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE True")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2581): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NOT True")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2582): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE B")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2583): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NOT B")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2585): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE Glob('*amp*',S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2586): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NOT Glob('*amp*',S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2588): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE I")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2589): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NOT I")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2590): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2591): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NOT L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2592): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE Length(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2593): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NOT Length(S)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2594): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE (I IS NOT NULL) AND L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2595): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE (I IS NOT NULL) AND NOT L")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2602): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P2D.X >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2603): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P2D.Y >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2605): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P3D.X >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2606): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P3D.Y >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2607): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P3D.Z >= -11.111")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2608): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P2D.X >= P3D.X AND P2D.Y >= P3D.Y")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2610): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE (P2D.X) >= (P3D.X) AND (P2D.Y) >= (P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2611): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE (P2D.X >= P3D.X) AND (P2D.Y >= P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2612): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE (P2D.X >= P3D.X AND P2D.Y >= P3D.Y)")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2616): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE -I = -123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2620): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2621): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2622): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2623): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2624): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL IS 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2625): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL IS NOT 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2626): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL <> 123")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2627): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE B = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2628): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE B <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2629): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE L IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2630): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE L IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2631): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE L IS NULL OR I IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2632): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE L IS NULL AND I IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2633): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE S IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2634): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE S IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2635): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE B IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2636): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE B IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2637): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE I IS ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2638): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE I IS NOT ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2639): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ? = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2640): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2641): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE ? <> NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2642): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE NULL <> ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2646): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P2D IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2647): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P2D IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2648): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P2D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2651): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P3D IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2652): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P3D IS NOT NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2653): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE P3D = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2657): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE MyPSA = MyPSA")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2658): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE MyPSA IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2659): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE MyPSA = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2660): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE MyPSA.Id IS NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2661): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE MyPSA.Id = NULL")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(2662): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("DELETE FROM ecsql.P WHERE MyPSA.RelECClassId IS NULL")
    # Which is: ECSqlStatus::InvalidECSql

DateTimeTestFixture.DifferingDateTimeInfos

    # TFS#792986
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:10,723 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:10,723 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:10,723 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:10,723 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\DateTimeTests.cpp(193): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecdbdatetime.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.InsertWithMixParametersIntAndInt

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:45,161 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,161 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,161 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:45,161 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4400): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.StructArrayInsertWithParametersLongAndArray

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:45,130 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,130 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,130 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:45,130 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4354): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

JsonInserterTests.InsertPartialPointJson

    # TFS#792961
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:00,396 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:00,396 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:00,396 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:19:00,396 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\JsonInserterTests.cpp(401): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("InsertPartialPointJson.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

FileFormatCompatibilityTests.CompareDdl_NewFile

    # TFS#792951
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:47,552 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'Costing:RATIO' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:47,552 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'Costing.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:47,552 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\fileformatbenchmark\schemas\domains\Costing.01.00.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\FileFormatCompatibilityTests.cpp(960): error:       Expected: SUCCESS
    # To be equal to: SetupTestFile("imodel2fileformatcompatibility_newfile_test.ecdb")
    # Which is: ERROR

ECSqlStatementTestFixture.Geometry

    # TFS#792958
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017

ECSqlUpdatePrepareTests.Misc

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,099 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,099 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,099 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1899): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET L = 0xabcdef")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1900): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET L = 0xabcdef + 0x3434fff+343")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1905): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET I = 124, L = 100000000000, D = -1.2345678, S = 'hello, world'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1906): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET Dt = ?, L = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1909): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA t SET t.I = 124, t.L = 100000000000, t.D = -1.2345678, t.S = 'hello, world' WHERE t.D > 0.0")
    # Which is: ECSqlStatus::InvalidECSql
    # Class alias are not allowed in SQLite, but ECSQL allows them. So test that ECDb properly omits them during preparation
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1910): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA t SET t.Dt = ?, t.L = ?")
    # Which is: ECSqlStatus::InvalidECSql
    # Class alias are not allowed in SQLite, but ECSQL allows them. So test that ECDb properly omits them during preparation
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1920): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE ECClassId <> 145")
    # Which is: ECSqlStatus::InvalidECSql
    # ECClassId in where clause is supported
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1921): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ecsql.P SET I=10 WHERE ECClassId = 145")
    # Which is: ECSqlStatus::InvalidECSql
    # ECClassId in where clause is supported
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1924): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET B = true")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1925): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET B = false")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1927): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET Dt = DATE '2012-01-18'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1928): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET Dt = TIMESTAMP '2012-01-18T13:02:55'")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1935): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql._UnderBar u SET u._A_B_C = '1st Property', u._ABC = 22, u._ABC_ = '3rd Property', u.A_B_C_ = 44, u.ABC_= 'Last Property' WHERE u._ABC > 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1936): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.[_UnderBar] u SET u.[_A_B_C] = '1st Property', u.[_ABC] = 22, u.[_ABC_] = '3rd Property', u.[A_B_C_] = 44, u.[ABC_]= 'Last Property' WHERE u.[_ABC] > 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1939): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql._UnderBar u SET u._A_B_C = '''', u._ABC = 22, u._ABC_ = '''5''', u.A_B_C_ = 44, u.ABC_= 'LAST''' WHERE u._ABC > 0")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1946): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.ClassWithLastModProp SET FullName='bla' WHERE ECInstanceId=?")
    # Which is: ECSqlStatus::InvalidECSql
    # calc properties are always updatable
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1948): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.ClassWithLastModProp SET I=123, LastMod=? WHERE ECInstanceId=? ECSQLOPTIONS ReadonlyPropertiesAreUpdatable")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1949): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.PSA SET PStructProp.CreationDate=? WHERE ECInstanceId=? ECSQLOPTIONS ReadonlyPropertiesAreUpdatable")
    # Which is: ECSqlStatus::InvalidECSql
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1951): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.ClassWithLastModProp SET I=123, LastMod=? WHERE ECInstanceId=? ECSQLOPTIONS rEaDonlYPropertiEsAreupdaTable")
    # Which is: ECSqlStatus::InvalidECSql
    # options are expected to be case insensitive
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(1953): error:       Expected: ECSqlStatus::Success
    # To be equal to: Prepare("UPDATE ONLY ecsql.ClassWithLastModProp SET I=123 WHERE ECInstanceId=? ECSQLOPTIONS ReadonlyPropertiesAreUpdatable")
    # Which is: ECSqlStatus::InvalidECSql
    # option has no affect if no readonly prop is in the SET clause

SchemaUpgradeTestFixture.KindOfQuantityAddUpdateDelete

    # TFS#793014
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:19:38,959 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:K1' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:38,959 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:K2' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:38,959 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:K3' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:19:38,959 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'TestSchema:K4' persistence FormatUnitSet has a problem: Unknown name of the unit
    # c:\build\src\mds06t\ECDb\Tests\Published\SchemaUpgradeTests.cpp(7364): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("schemaupdate.ecdb", schemaItem)
    # Which is: ERROR

ECSqlExecutionFrameworkTests.DateTimeTests

    # TFS#793011
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:37,646 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,646 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:37,646 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:37,646 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkHelper.cpp(265): error:       Expected: SchemaReadStatus::Success
    # Which is: 4-byte object <00-00 00-00>
    # To be equal to: ReadXml(ecdb, schemaDir)
    # Which is: 4-byte object <02-00 00-00>
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlExecutionFrameworkTests.cpp(325): error:       Expected: ECSqlStatus::Success
    # To be equal to: prepareStatus
    # Which is: ECSqlStatus::InvalidECSql
    # Statement prepare failed for:INSERT INTO ecsql.P (Dt) VALUES (TIMESTAMP '2012-01-18 13:02:55')

ECSqlStatementTestFixture.BindNegECInstanceId

    # TFS#792978
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:45,349 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,349 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,349 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:45,349 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4731): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("BindNegECInstanceId.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlStatementTestFixture.ClassWithStructHavingStructArrayInsert

    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:45,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,208 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:45,208 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:45,208 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlStatementTests.cpp(4471): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlstatementtests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR

ECSqlUpdatePrepareTests.AbstractClass

    # TFS#792962
    # Stream:bim0200dev, build configuration :NDEBUG, architecture: (x64), Date: 12/09/2017
    # 2017-12-08 15:18:40,286 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Length' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,286 ERROR [0x00001dd4] ECObjectsNative - Validation Error - KindOfQuantity 'ECSqlTest:Volume' persistence FormatUnitSet has a problem: Unknown name of the unit
    # 2017-12-08 15:18:40,286 ERROR [0x00001dd4] ECObjectsNative - Schema validation failed for schema 'ECSqlTest.01.00.00'.  It is supposed to be EC Version 3.1 but it does not meet the rules for that EC version.  See log for details.
    # 2017-12-08 15:18:40,286 ERROR [0x00001dd4] ECObjectsNative - Failed to read XML file: c:\build\outA\mds06t_2017-12-08_14-33-16\out\Winx64\Product\ECDb-Gtest\Assets\Documents\ECDb\Schemas\ECSqlTest.01.00.ecschema.xml
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(79): error: Value of: false
    # Actual: false
    # Expected: true
    # Importing schema ECSqlTest.01.00.ecschema.xml failed
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(26): error:       Expected: SUCCESS
    # To be equal to: SetupECDb("ecsqlpreparetests.ecdb", SchemaItem::CreateForFile("ECSqlTest.01.00.ecschema.xml"))
    # Which is: ERROR
    # c:\build\src\mds06t\ECDb\Tests\BackDoor\ECDbTestFixture.cpp(240): error: Value of: true
    # Actual: true
    # Expected: false
    # ECDb is expected to be open when calling ECDbTestFixture::PopulateECDb
    # c:\build\src\mds06t\ECDb\Tests\Published\ECSqlPrepareTests.cpp(27): error:       Expected: SUCCESS
    # To be equal to: PopulateECDb(10)
    # Which is: ERROR
