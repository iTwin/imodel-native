# This tag can be used to specify a number of aliases that acts 
# as commands in the documentation. An alias has the form "name=value". 
# For example adding "sideeffect=\par Side Effects:\n" will allow you to 
# put the command \sideeffect (or @sideeffect) in the documentation, which 
# will result in a user-defined paragraph with heading "Side Effects:". 
# You can put \n's in the value part of an alias to insert newlines.
#
# Every alias defined here must have an equivalent empty alias in 
# bentley-doxygen-html-aliases.cfg.  This makes it possible for 
# the header files to contain comments add to the XML files
# without affecting the documentation

# Specifies that no wrapper should be generated
ALIASES               += DotNetClassExclude="\par DotNetClassExclude"
ALIASES               += DotNetClassRename{1}="\par DotNetClassRename (\1)\n"

# Specifies a prefix to strip from the names of the enum members. The default behavior is to
# strip the largest common substring.
ALIASES               += DotNetEnumMemberPrefix{1}="\par DotNetEnumMemberPrefix (\1)\n"
# Specifies the prefix and a string to replace the prefix.
ALIASES               += DotNetEnumMemberPrefix{2}="\par DotNetEnumMemberPrefix (\1) (\2)\n"

ALIASES               += DotNetEnumRename{1}="\par DotNetEnumRename (\1)\n"

# Dump a declaration but don't dump an implementation
ALIASES               += DotNetMethodCustomImplementation="\par DotNetMethodCustomImplementation"

# Specifies that no wrapper should be generated
ALIASES               += DotNetMethodExclude="\par DotNetMethodExclude"

# Handle pointer type as array.  The second parameter specifies the count
ALIASES               += DotNetMethodParameterIsInputArray{2}="\par DotNetMethodParameterIsInputArray (\1) (\2)\n"
ALIASES               += DotNetMethodParameterIsReturnArray{2}="\par DotNetMethodParameterIsReturnArray (\1) (\2)\n"

# Translate MSWCharP or MSCharP argument into string return value.
# //! @DotNetMethodParameterIsReturnString{name,bufferSize}
ALIASES               += DotNetMethodParameterIsReturnString{2}="\par DotNetMethodParameterIsReturnString (\1) (\2)\n"

# Handle vector as array
ALIASES               += DotNetMethodParameterVectorIsInputArray{1}="\par DotNetMethodParameterVectorIsInputArray (\1)\n"

ALIASES               += DotNetMethodParameterExclude{2}="\par DotNetMethodParameterExclude (\1) (\2)\n"

ENABLED_SECTIONS       +=   DONTINCLUDEINDOC
