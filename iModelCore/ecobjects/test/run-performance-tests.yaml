name: ecobjects-native-performance-$(Date:yyyyMMdd)

trigger: none

pr: none

schedules:
- cron: "0 0 * * 0"
  displayName: Sunday midnight build
  branches:
    include:
    - main
  always: true

resources:
  repositories:
    - repository: imodel-native-internal
      type: github
      endpoint: imodel-native
      name: iTwin/imodel-native-internal

stages:

  - stage: build
    displayName: Build

    variables:
      BB_V: '-v 4'
      BB_ARCH: x64
      PY_EXE: py -3
      BB_OUT_ROOT: $(Build.BinariesDirectory)
      BB_SRC_ROOT: $(Agent.BuildDirectory)/bbsrc
      BB: $(BB_SRC_ROOT)/BentleyBuild/BentleyBuild.py
      STRATEGY: 'iModelCore;SkipPull_imodel-native-internal'
      BB_ARGS: '-p ECObjects-PerformanceGtest -f iModelCore/ECObjects/ECObjects -r imodel-native -s $(STRATEGY) -a $(BB_ARCH) --srcroot=$(BB_SRC_ROOT) --outputroot=$(BB_OUT_ROOT)'

    jobs:
      - job:
        displayName: Pull and build for Windows

        pool:
          name: imodelNative-Win11-VS2022
          demands:
          - Cmd

        steps:
        - checkout: imodel-native-internal

        - template: build/templates/prebuild.yml@imodel-native-internal
          parameters:
            otherRepo: imodel-native-internal
            nativePR: 'main'

        - script: $(PY_EXE) $(BB) $(BB_ARGS) pull
          displayName: Pull
          env:
            AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

        - script: $(PY_EXE) $(BB) $(BB_ARGS) build
          displayName: Build
          env:
            AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

        - publish: $(BB_OUT_ROOT)/Winx64/Product/ECObjects-PerformanceGtest
          artifact: 'PerfTestsECObjects'

  - stage: run
    displayName: Run
    dependsOn: build
    condition: succeeded()

    jobs:
      - job:
        displayName: Run Performance Test on Windows
        timeoutInMinutes: 180

        pool:
          name: iModelTech Performance Tests
          demands:
          - Agent.OS -equals Windows_NT
          - Cmd

        variables:
          - group: Performance Testing Database User

        steps:
          - download: current
            displayName: Download test runner
            artifact: PerfTestsECObjects

          - script: '$(Pipeline.Workspace)\PerfTestsECObjects\ECObjectsPerformanceTests.exe --timeout=-1 --gtest_filter=PerformanceTests*'
            displayName: Run
            workingDirectory: $(Pipeline.Workspace)\PerfTestsECObjects
            timeoutInMinutes: 180

          - publish: $(Pipeline.Workspace)\PerfTestsECObjects\run\Output\PerfTestResults
            artifact: 'ECObjectsPerformanceReports'
            continueOnError: true

          - task: bentleysystemsinternal.iModel-Utilities-tasks.PerfData.PerfData@1
            displayName: 'Upload report data to DB: Time'
            inputs:
              AppId: ECObjects Native Library
              CsvPath: $(Pipeline.Workspace)\PerfTestsECObjects\run\Output\PerfTestResults\PerfResults.csv
              BuildId: $(Build.BuildId)
              DbName: imodeljsperfdata.database.windows.net
              DbUser: $(DB_USER)
              DbPassword: $(DB_PW)
            timeoutInMinutes: 1
            continueOnError: true

      - job:
        displayName: Run Memory Performance Test on Windows
        timeoutInMinutes: 180

        pool:
          name: iModelTech Performance Tests
          demands:
          - Agent.OS -equals Windows_NT
          - Cmd

        variables:
          - group: Performance Testing Database User

        steps:
          - download: current
            displayName: Download test runner
            artifact: PerfTestsECObjects

          - script: '$(Pipeline.Workspace)\PerfTestsECObjects\ECObjectsPerformanceTests.exe --timeout=-1 --gtest_filter=ECSchemaMemoryTests*'
            displayName: Run
            workingDirectory: $(Pipeline.Workspace)\PerfTestsECObjects
            timeoutInMinutes: 180

          - publish: $(Pipeline.Workspace)\PerfTestsECObjects\run\Output\PerfTestResults
            artifact: 'ECObjectsMemoryPerformanceReports'
            continueOnError: true

          - task: bentleysystemsinternal.iModel-Utilities-tasks.PerfData.PerfData@1
            displayName: 'Upload report data to DB: Memory'
            inputs:
              AppId: ECObjects Native Library
              CsvPath: $(Pipeline.Workspace)\PerfTestsECObjects\run\Output\PerfTestResults\PerfResults.csv
              BuildId: $(Build.BuildId)
              DbName: imodeljsperfdata.database.windows.net
              DbUser: $(DB_USER)
              DbPassword: $(DB_PW)
            timeoutInMinutes: 1
            continueOnError: true

      - job:
        displayName: Run Peak Memory Performance Test on Windows
        timeoutInMinutes: 180

        pool:
          name: iModelTech Performance Tests
          demands:
          - Agent.OS -equals Windows_NT
          - Cmd

        variables:
          - group: Performance Testing Database User

        steps:
          - download: current
            displayName: Download test runner
            artifact: PerfTestsECObjects

          - script: '$(Pipeline.Workspace)\PerfTestsECObjects\ECObjectsPerformanceTests.exe --timeout=-1 --gtest_filter=PeakMemoryTests*'
            displayName: Run
            workingDirectory: $(Pipeline.Workspace)\PerfTestsECObjects
            timeoutInMinutes: 180

          - publish: $(Pipeline.Workspace)\PerfTestsECObjects\run\Output\PerfTestResults
            artifact: 'ECObjectsPeakMemoryReports'
            continueOnError: true

          - task: bentleysystemsinternal.iModel-Utilities-tasks.PerfData.PerfData@1
            displayName: 'Upload report data to DB: PeakMemory'
            inputs:
              AppId: ECObjects Native Library
              CsvPath: $(Pipeline.Workspace)\PerfTestsECObjects\run\Output\PerfTestResults\PerfResults.csv
              BuildId: $(Build.BuildId)
              DbName: imodeljsperfdata.database.windows.net
              DbUser: $(DB_USER)
              DbPassword: $(DB_PW)
            timeoutInMinutes: 1
            continueOnError: true