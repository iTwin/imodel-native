#--------------------------------------------------------------------------------------
#
#     $Source: src/ecobjects.mke $
#
#  $Copyright: (c) 2012 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------
PolicyFile      = $(SrcRoot)/ecobjects/mki/AssertECObjectsPolicy.mki
baseDir         = $(_MakeFilePath)
SolutionPolicyMki=$(baseDir)ecobjects.mki

appName = ECObjects

%include    mdl.mki

#----------------------------------------------------------------------
#       Create output directories
#----------------------------------------------------------------------
always:
    !~@mkdir $(o)

#--------------------------------------------------------------------------------
#  Bring our precompiled header up-to-date.  After including PreCompileHeader.mki
#  $(UsePrecompiledHeaderOptions) will contain the /Yu and /Fp options that we
#  need to consume the .pch.
#----------------------------------------------------------------------
PchCompiland = $(baseDir)ECObjectsPch.cpp
PchOutputDir = $(o)
%include $(SharedMki)PreCompileHeader.mki

CCPchOpts  = $(UsePrecompiledHeaderOptions)
CPchOpts   = $(UsePrecompiledHeaderOptions)

#----------------------------------------------------------------------
# Prepare to multi-compile using a uniform set of dependency blocks.
# Note that you CANNOT change compiler options for just some of the
# below compilands. The entire set of compilands must be content with
# uniform treatment for multi-compilation to work.
#----------------------------------------------------------------------
MultiCompileDepends=$(_MakeFileSpec) 
%include MultiCppCompileRule.mki

#----------------------------------------------------------------------
#   Objects that go into the ECObjects library
#----------------------------------------------------------------------
ECObjectsHeaders =  $(ecobjectsPublicAPISrc)ECObjects.h \
                    $(ecobjectsPublicAPISrc)ECSchema.h \
                    $(ecobjectsPublicAPISrc)ECValue.h \
                    $(ecobjectsPublicAPISrc)ECInstance.h \
                    $(ecobjectsPublicAPISrc)ECEnabler.h \
                    $(ecobjectsPublicAPISrc)DesignByContract.h \
                    $(ecobjectsPublicAPISrc)MemoryInstanceSupport.h \
                    $(ecobjectsPublicAPISrc)ECEvent.h \
                    $(baseDir)ecxml.h \
                    $(baseDir)Logger.h \
                    $(baseDir)FileUtilities.h \
                    $(baseDir)StopWatch.h
                    

ECPresentationHeaders = $(ecpresentationPublicAPISrc)auicommand.h \
                        $(ecpresentationPublicAPISrc)auiitem.h \
                        $(ecpresentationPublicAPISrc)auijournal.h \
                        $(ecpresentationPublicAPISrc)auipresentationmgr.h \
                        $(ecpresentationPublicAPISrc)auiprovider.h \
                        $(ECObjectsHeaders) \
                        $(ecpresentationPublicAPISrc)auipresentationapi.h \
                        $(ecpresentationPublicAPISrc)auievent.h

$(o)ecxml$(oext)                           : $(baseDir)ecxml.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ECSchema$(oext)                        : $(baseDir)ECSchema.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ECType$(oext)                          : $(baseDir)ECType.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ECClass$(oext)                         : $(baseDir)ECClass.cpp $(ECObjectsHeaders) ${MultiCompileDepends}

$(o)ECProperty$(oext)                      : $(baseDir)ECProperty.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ECInstance$(oext)                      : $(baseDir)ECInstance.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ECCustomAttribute$(oext)               : $(baseDir)ECCustomAttribute.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ECcontext$(oext)                       : $(baseDir)ECcontext.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ECValue$(oext)                         : $(baseDir)ECValue.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ECEnabler$(oext)                       : $(baseDir)ECEnabler.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ExpressionNode$(oext)                  : $(baseDir)ExpressionNode.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ExpressionContext$(oext)               : $(baseDir)ExpressionContext.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ExpressionHandler$(oext)               : $(baseDir)ExpressionHandler.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)MemoryInstanceSupport$(oext)           : $(baseDir)MemoryInstanceSupport.cpp $(ECObjectsHeaders) ${MultiCompileDepends}

$(o)StandaloneECInstance$(oext)            : $(baseDir)StandaloneECInstance.cpp $(ECObjectsHeaders) ${MultiCompileDepends}  $(ecobjectsPublicAPISrc)StandaloneECInstance.h

$(o)StandaloneECRelationshipInstance$(oext) : $(baseDir)StandaloneECRelationshipInstance.cpp $(ECObjectsHeaders) ${MultiCompileDepends}  $(ecobjectsPublicAPISrc)StandaloneECRelationshipInstance.h  $(ecobjectsPublicAPISrc)StandaloneECInstance.h

$(o)DesignByContract$(oext)                : $(baseDir)DesignByContract.cpp $(ecobjectsPublicAPISrc)DesignByContract.h ${MultiCompileDepends} 

$(o)Logger$(oext)                          : $(baseDir)Logger.cpp $(ECObjectsHeaders) ${MultiCompileDepends}

$(o)BeXmlCGReader$(oext)                   : $(baseDir)BeXmlCGReader.cpp $(ecobjectsPublicAPISrc)BeXmlCommonGeometry.h ${MultiCompileDepends} 

$(o)BeXmlCGWriter$(oext)                   : $(baseDir)BeXmlCGWriter.cpp $(ecobjectsPublicAPISrc)BeXmlCommonGeometry.h ${MultiCompileDepends} 

$(o)ecprovider$(oext)                      : $(baseDir)ecprovider.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(o)ecinstanceiterable$(oext)              : $(baseDir)ecinstanceiterable.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

$(0)PresentationMetadataHelper$(oext)      : $(baseDir)PresentationMetadataHelper.cpp $(ECObjectsHeaders) ${MultiCompileDepends}

$(o)auipresentationmgr$(oext)              : $(baseDir)presentation/auipresentationmgr.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

$(o)auicommand$(oext)                      : $(baseDir)presentation/auicommand.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

$(o)auiitem$(oext)                         : $(baseDir)presentation/auiitem.cpp $(ECPresentationHeaders) ${MultiCompileDepends}

$(o)auiprovider$(oext)                     : $(baseDir)presentation/auiprovider.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

$(o)ecviewdefinition$(oext)                : $(baseDir)presentation/ecviewdefinition.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

$(o)eccontentdefinition$(oext)             : $(baseDir)presentation/eccontentdefinition.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

$(o)auijournal$(oext)                      : $(baseDir)presentation/auijournal.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

$(o)ECImageProvider$(oext)                 : $(baseDir)presentation/ECImageProvider.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

$(o)ECLocalizationProvider$(oext)          : $(baseDir)presentation/ECLocalizationProvider.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

$(o)auievent$(oext)                        : $(baseDir)presentation/auievent.cpp $(ECPresentationHeaders) ${MultiCompileDepends} 

%include MultiCppCompileGo.mki
cppObjects=%$(MultiCompileObjectList)
CCPchOpts =
CPchOpts =

#----------------------------------------------------------------------
#   Non-portable code - cannot use PCH
#----------------------------------------------------------------------
$(o)FileUtilities$(oext)   : $(baseDir)nonport/FileUtilities.cpp $(ECObjectsHeaders) ${MultiCompileDepends} 

cppObjects +$(o)FileUtilities$(oext)

#----------------------------------------------------------------------
#   dependencies of the subsystem.
#----------------------------------------------------------------------
DLM_NO_DLS                  = 1
DLM_NO_DEF                  = 1
DLM_NAME                    = $(appName)
DLM_DEST                    = $(o)
DLM_OBJECT_DEST             = $(o)
DLM_OBJECT_FILES            = $(cppObjects)
DLM_OBJECT_PCH              = $(o)ECObjectsPch$(oext)
DLM_EXPORT_OBJS             = $(cppObjects)
DLM_EXPORT_DEST             = $(o)
DLM_NOINITFUNC              = 1
DLM_NOMSBUILTINS            = 1
DLM_NOENTRY                 = 1
%if $(TARGET_PLATFORM)=="Windows"  # *** WIP_NONPORT
LINKER__LIBRARIES           = $(BuildContext)SubParts/Libs/bentleylogging-2.0$(libext) xmllite$(libext)
%endif
LINKER__LIBRARIES           + $(BuildContext)SubParts/Libs/$(libprefix)BeXml$(libext)
LINKER__LIBRARIES           + $(BuildContext)SubParts/Libs/$(libprefix)BeLibxml2$(libext)
LINKER__LIBRARIES           + $(BuildContext)SubParts/Libs/$(libprefix)BentleyGeom$(libext)
DLM_CONTEXT_LOCATION        = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION    = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1

#----------------------------------------------------------------------
#   NEEDSWORK : Temporary settings
#----------------------------------------------------------------------
%include $(sharedMki)linkLibrary.mki

