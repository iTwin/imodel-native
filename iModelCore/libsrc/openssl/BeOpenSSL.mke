#---------------------------------------------------------------------------------------------
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#  See LICENSE.md in the repository root for full copyright notice.
#---------------------------------------------------------------------------------------------

# Based on namke makefile generated by `perl Configure shared no-asm no-engine no-dso VC-WIN64A`
# We do NOT include uplink.c (or associated assembly) files; they don't seem
# needed by our use cases, and thus not worth figuring out how to
# generate and build assembly code on every platform.

# Ignore warnings in third-party code (must precede mdl.mki).
IS_THIRD_PARTY_LIBRARY = 1
BUILD_NO_STACK_CHECK = 1   # Don't want to modify third party code, but hopefully these get fixed in a future version.

# Export/make visible all functions in libcurl

%ifdef __unix
    # Node 18 use OpenSSL 3.x while node addon uses OpenSSL 1.1.1x. Node ver < 18 use OpenSSL 1.1.1x.
    # If symbol visibility is set to default then some of OpenSSL function overrides 1.1.1 which cause 
    # segmentation fault when running under Node 18. 

    GCC_DEFAULT_VISIBILITY = hidden
%else
    GCC_DEFAULT_VISIBILITY = default
%endif

#----------------------------------------------------------
# Set up all the standard stuff.
#----------------------------------------------------------
%include mdl.mki

appName = BeOpenSSL
vendorSrc = $(_MakeFilePath)vendor/
o = $(OutputRootDir)build/BeOpenSSL/

always:
    !~@mkdir $(o)

#----------------------------------------------------------------------------------------
#   Include search paths
#----------------------------------------------------------------------------------------

dirToSearch = $(vendorSrc)
%include cincapnd.mki

dirToSearch = $(vendorSrc)include/
%include cincapnd.mki

dirToSearch = $(vendorSrc)include/crypto/
%include cincapnd.mki

dirToSearch = $(vendorSrc)crypto/modes/
%include cincapnd.mki

dirToSearch = $(vendorSrc)crypto/
%include cincapnd.mki

dirToSearch = $(vendorSrc)crypto/ec/curve448/
%include cincapnd.mki

dirToSearch = $(vendorSrc)crypto/ec/curve448/arch_32/
%include cincapnd.mki

#----------------------------------------------------------------------------------------
#   Platform-agnostic settings
#----------------------------------------------------------------------------------------

nameToDefine = OPENSSLDIR=\"\"
%include cdefapnd.mki

#----------------------------------------------------------------------------------------
#   Platform-specific settings
#----------------------------------------------------------------------------------------

%if $(TARGET_PLATFORM) == "Windows"

    nameToDefine = OPENSSL_SYS_WIN32
    %include cdefapnd.mki

    nameToDefine = OPENSSL_CPUID_OBJ
    %include cdefapnd.mki

%elif $(TARGET_PLATFORM) == "Linux"

    nameToDefine = OPENSSL_CPUID_OBJ
    %include cdefapnd.mki

%elif $(TARGET_PLATFORM) == "WinRT"

    nameToDefine = OPENSSL_SYS_WIN32
    %include cdefapnd.mki

    # async_win.obj : error LNK2019: unresolved external symbol ConvertThreadToFiber referenced in function async_fibre_init_dispatcher
    # async.obj : error LNK2019: unresolved external symbol CreateFiber referenced in function ASYNC_init_thread
    # UWP has a relatively different threading model, and doesn't support fibers, so try just disabling this area.
    nameToDefine = OPENSSL_NO_ASYNC
    %include cdefapnd.mki

    # cryptlib.obj : error LNK2019: unresolved external symbol GetModuleHandle referenced in function OPENSSL_isservice
    # cryptlib.obj : error LNK2019: unresolved external symbol GetProcessWindowStation referenced in function OPENSSL_isservice
    # cryptlib.obj : error LNK2019: unresolved external symbol GetUserObjectInformationW referenced in function OPENSSL_isservice
    # cryptlib.obj : error LNK2019: unresolved external symbol RegisterEventSource referenced in function OPENSSL_showfatal
    # cryptlib.obj : error LNK2019: unresolved external symbol ReportEvent referenced in function OPENSSL_showfatal
    # cryptlib.obj : error LNK2019: unresolved external symbol DeregisterEventSource referenced in function OPENSSL_showfatal
    # cryptlib.obj : error LNK2019: unresolved external symbol MessageBox referenced in function OPENSSL_showfatal
    # UWP is not technically "onecore", but it's also missing similar WIN32 methods, so let's try this.
    nameToDefine = OPENSSL_SYS_WIN_CORE
    %include cdefapnd.mki

%elif $(TARGET_PLATFORM) == "Android"

    %if $(TARGET_PROCESSOR_ARCHITECTURE) != "AndroidARM64"
        nameToDefine = OPENSSL_CPUID_OBJ
        %include cdefapnd.mki
    %endif

    # Our version of clang for Android does not define this automatically for C code.
    nameToDefine = char16_t=uint16_t
    %include cdefapnd.mki

    # Our version of clang for Android does not define this automatically for C code.
    nameToDefine = char32_t=uint32_t
    %include cdefapnd.mki

%elif $(TARGET_PLATFORM) == "iOS"

    # Version 1.1.0 uses iOS APIs such as _getContext, _setContext, and _makeContext, which are now considered internal by Apple, and cannot be used in App store submissions.
    # According to https://github.com/openssl/openssl/issues/2545, this is triggered by using async support in openssl, which is only actually useful with dedicated crypto hardware (which iOS devices don't have).
    nameToDefine = OPENSSL_NO_ASYNC=1
    %include cdefapnd.mki

%endif

#----------------------------------------------------------------------------------------
MultiCompileDepends = $(_MakeFileSpec)
%include MultiCppCompileRule.mki

$(o)BentleyVersionString$(oext) : $(_MakeFilePath)BentleyVersionString.c ${MultiCompileDepends}

#----------------------------------------------------------------------------------------
# Crypto

$(o)dllmain$(oext) : $(vendorSrc)crypto/dllmain.c ${MultiCompileDepends}

$(o)aes_cbc$(oext) : $(vendorSrc)crypto/aes/aes_cbc.c ${MultiCompileDepends}

$(o)aes_cfb$(oext) : $(vendorSrc)crypto/aes/aes_cfb.c ${MultiCompileDepends}

$(o)aes_core$(oext) : $(vendorSrc)crypto/aes/aes_core.c ${MultiCompileDepends}

$(o)aes_ecb$(oext) : $(vendorSrc)crypto/aes/aes_ecb.c ${MultiCompileDepends}

$(o)aes_ige$(oext) : $(vendorSrc)crypto/aes/aes_ige.c ${MultiCompileDepends}

$(o)aes_misc$(oext) : $(vendorSrc)crypto/aes/aes_misc.c ${MultiCompileDepends}

$(o)aes_ofb$(oext) : $(vendorSrc)crypto/aes/aes_ofb.c ${MultiCompileDepends}

$(o)aes_wrap$(oext) : $(vendorSrc)crypto/aes/aes_wrap.c ${MultiCompileDepends}

$(o)aria$(oext) : $(vendorSrc)crypto/aria/aria.c ${MultiCompileDepends}

$(o)a_bitstr$(oext) : $(vendorSrc)crypto/asn1/a_bitstr.c ${MultiCompileDepends}

$(o)a_d2i_fp$(oext) : $(vendorSrc)crypto/asn1/a_d2i_fp.c ${MultiCompileDepends}

$(o)a_digest$(oext) : $(vendorSrc)crypto/asn1/a_digest.c ${MultiCompileDepends}

$(o)a_dup$(oext) : $(vendorSrc)crypto/asn1/a_dup.c ${MultiCompileDepends}

$(o)a_gentm$(oext) : $(vendorSrc)crypto/asn1/a_gentm.c ${MultiCompileDepends}

$(o)a_i2d_fp$(oext) : $(vendorSrc)crypto/asn1/a_i2d_fp.c ${MultiCompileDepends}

$(o)a_int$(oext) : $(vendorSrc)crypto/asn1/a_int.c ${MultiCompileDepends}

$(o)a_mbstr$(oext) : $(vendorSrc)crypto/asn1/a_mbstr.c ${MultiCompileDepends}

$(o)a_object$(oext) : $(vendorSrc)crypto/asn1/a_object.c ${MultiCompileDepends}

$(o)a_octet$(oext) : $(vendorSrc)crypto/asn1/a_octet.c ${MultiCompileDepends}

$(o)a_print$(oext) : $(vendorSrc)crypto/asn1/a_print.c ${MultiCompileDepends}

$(o)a_sign$(oext) : $(vendorSrc)crypto/asn1/a_sign.c ${MultiCompileDepends}

$(o)a_strex$(oext) : $(vendorSrc)crypto/asn1/a_strex.c ${MultiCompileDepends}

$(o)a_strnid$(oext) : $(vendorSrc)crypto/asn1/a_strnid.c ${MultiCompileDepends}

$(o)a_time$(oext) : $(vendorSrc)crypto/asn1/a_time.c ${MultiCompileDepends}

$(o)a_type$(oext) : $(vendorSrc)crypto/asn1/a_type.c ${MultiCompileDepends}

$(o)a_utctm$(oext) : $(vendorSrc)crypto/asn1/a_utctm.c ${MultiCompileDepends}

$(o)a_utf8$(oext) : $(vendorSrc)crypto/asn1/a_utf8.c ${MultiCompileDepends}

$(o)a_verify$(oext) : $(vendorSrc)crypto/asn1/a_verify.c ${MultiCompileDepends}

$(o)ameth_lib$(oext) : $(vendorSrc)crypto/asn1/ameth_lib.c ${MultiCompileDepends}

$(o)asn1_err$(oext) : $(vendorSrc)crypto/asn1/asn1_err.c ${MultiCompileDepends}

$(o)asn1_gen$(oext) : $(vendorSrc)crypto/asn1/asn1_gen.c ${MultiCompileDepends}

$(o)asn1_item_list$(oext) : $(vendorSrc)crypto/asn1/asn1_item_list.c ${MultiCompileDepends}

$(o)asn1_lib$(oext) : $(vendorSrc)crypto/asn1/asn1_lib.c ${MultiCompileDepends}

$(o)asn1_parse$(oext) : $(vendorSrc)crypto/asn1/asn1_parse.c ${MultiCompileDepends}

$(o)asn_mime$(oext) : $(vendorSrc)crypto/asn1/asn_mime.c ${MultiCompileDepends}

$(o)asn_moid$(oext) : $(vendorSrc)crypto/asn1/asn_moid.c ${MultiCompileDepends}

$(o)asn_mstbl$(oext) : $(vendorSrc)crypto/asn1/asn_mstbl.c ${MultiCompileDepends}

$(o)asn_pack$(oext) : $(vendorSrc)crypto/asn1/asn_pack.c ${MultiCompileDepends}

$(o)bio_asn1$(oext) : $(vendorSrc)crypto/asn1/bio_asn1.c ${MultiCompileDepends}

$(o)bio_ndef$(oext) : $(vendorSrc)crypto/asn1/bio_ndef.c ${MultiCompileDepends}

$(o)d2i_pr$(oext) : $(vendorSrc)crypto/asn1/d2i_pr.c ${MultiCompileDepends}

$(o)d2i_pu$(oext) : $(vendorSrc)crypto/asn1/d2i_pu.c ${MultiCompileDepends}

$(o)evp_asn1$(oext) : $(vendorSrc)crypto/asn1/evp_asn1.c ${MultiCompileDepends}

$(o)f_int$(oext) : $(vendorSrc)crypto/asn1/f_int.c ${MultiCompileDepends}

$(o)f_string$(oext) : $(vendorSrc)crypto/asn1/f_string.c ${MultiCompileDepends}

$(o)i2d_evp$(oext) : $(vendorSrc)crypto/asn1/i2d_evp.c ${MultiCompileDepends}

$(o)n_pkey$(oext) : $(vendorSrc)crypto/asn1/n_pkey.c ${MultiCompileDepends}

$(o)nsseq$(oext) : $(vendorSrc)crypto/asn1/nsseq.c ${MultiCompileDepends}

$(o)p5_pbe$(oext) : $(vendorSrc)crypto/asn1/p5_pbe.c ${MultiCompileDepends}

$(o)p5_pbev2$(oext) : $(vendorSrc)crypto/asn1/p5_pbev2.c ${MultiCompileDepends}

$(o)p5_scrypt$(oext) : $(vendorSrc)crypto/asn1/p5_scrypt.c ${MultiCompileDepends}

$(o)p8_pkey$(oext) : $(vendorSrc)crypto/asn1/p8_pkey.c ${MultiCompileDepends}

$(o)t_bitst$(oext) : $(vendorSrc)crypto/asn1/t_bitst.c ${MultiCompileDepends}

$(o)t_pkey$(oext) : $(vendorSrc)crypto/asn1/t_pkey.c ${MultiCompileDepends}

$(o)t_spki$(oext) : $(vendorSrc)crypto/asn1/t_spki.c ${MultiCompileDepends}

$(o)tasn_dec$(oext) : $(vendorSrc)crypto/asn1/tasn_dec.c ${MultiCompileDepends}

$(o)tasn_enc$(oext) : $(vendorSrc)crypto/asn1/tasn_enc.c ${MultiCompileDepends}

$(o)tasn_fre$(oext) : $(vendorSrc)crypto/asn1/tasn_fre.c ${MultiCompileDepends}

$(o)tasn_new$(oext) : $(vendorSrc)crypto/asn1/tasn_new.c ${MultiCompileDepends}

$(o)tasn_prn$(oext) : $(vendorSrc)crypto/asn1/tasn_prn.c ${MultiCompileDepends}

$(o)tasn_scn$(oext) : $(vendorSrc)crypto/asn1/tasn_scn.c ${MultiCompileDepends}

$(o)tasn_typ$(oext) : $(vendorSrc)crypto/asn1/tasn_typ.c ${MultiCompileDepends}

$(o)tasn_utl$(oext) : $(vendorSrc)crypto/asn1/tasn_utl.c ${MultiCompileDepends}

$(o)x_algor$(oext) : $(vendorSrc)crypto/asn1/x_algor.c ${MultiCompileDepends}

$(o)x_bignum$(oext) : $(vendorSrc)crypto/asn1/x_bignum.c ${MultiCompileDepends}

$(o)x_info$(oext) : $(vendorSrc)crypto/asn1/x_info.c ${MultiCompileDepends}

$(o)x_int64$(oext) : $(vendorSrc)crypto/asn1/x_int64.c ${MultiCompileDepends}

$(o)x_long$(oext) : $(vendorSrc)crypto/asn1/x_long.c ${MultiCompileDepends}

$(o)x_pkey$(oext) : $(vendorSrc)crypto/asn1/x_pkey.c ${MultiCompileDepends}

$(o)x_sig$(oext) : $(vendorSrc)crypto/asn1/x_sig.c ${MultiCompileDepends}

$(o)x_spki$(oext) : $(vendorSrc)crypto/asn1/x_spki.c ${MultiCompileDepends}

$(o)x_val$(oext) : $(vendorSrc)crypto/asn1/x_val.c ${MultiCompileDepends}

$(o)async_null$(oext) : $(vendorSrc)crypto/async/arch/async_null.c ${MultiCompileDepends}

$(o)async_posix$(oext) : $(vendorSrc)crypto/async/arch/async_posix.c ${MultiCompileDepends}

$(o)async_win$(oext) : $(vendorSrc)crypto/async/arch/async_win.c ${MultiCompileDepends}

$(o)async$(oext) : $(vendorSrc)crypto/async/async.c ${MultiCompileDepends}

$(o)async_err$(oext) : $(vendorSrc)crypto/async/async_err.c ${MultiCompileDepends}

$(o)async_wait$(oext) : $(vendorSrc)crypto/async/async_wait.c ${MultiCompileDepends}

$(o)bf_cfb64$(oext) : $(vendorSrc)crypto/bf/bf_cfb64.c ${MultiCompileDepends}

$(o)bf_ecb$(oext) : $(vendorSrc)crypto/bf/bf_ecb.c ${MultiCompileDepends}

$(o)bf_enc$(oext) : $(vendorSrc)crypto/bf/bf_enc.c ${MultiCompileDepends}

$(o)bf_ofb64$(oext) : $(vendorSrc)crypto/bf/bf_ofb64.c ${MultiCompileDepends}

$(o)bf_skey$(oext) : $(vendorSrc)crypto/bf/bf_skey.c ${MultiCompileDepends}

$(o)bio_addr$(oext) : $(vendorSrc)crypto/bio/bio_addr.c ${MultiCompileDepends}

$(o)bio_dump$(oext) : $(vendorSrc)crypto/bio/bio_dump.c ${MultiCompileDepends}

$(o)bio_print$(oext) : $(vendorSrc)crypto/bio/bio_print.c ${MultiCompileDepends}

$(o)bio_sock$(oext) : $(vendorSrc)crypto/bio/bio_sock.c ${MultiCompileDepends}

$(o)bio_sock2$(oext) : $(vendorSrc)crypto/bio/bio_sock2.c ${MultiCompileDepends}

$(o)bf_buff$(oext) : $(vendorSrc)crypto/bio/bf_buff.c ${MultiCompileDepends}

$(o)bf_lbuf$(oext) : $(vendorSrc)crypto/bio/bf_lbuf.c ${MultiCompileDepends}

$(o)bf_nbio$(oext) : $(vendorSrc)crypto/bio/bf_nbio.c ${MultiCompileDepends}

$(o)bf_null$(oext) : $(vendorSrc)crypto/bio/bf_null.c ${MultiCompileDepends}

$(o)bio_cb$(oext) : $(vendorSrc)crypto/bio/bio_cb.c ${MultiCompileDepends}

$(o)bio_err$(oext) : $(vendorSrc)crypto/bio/bio_err.c ${MultiCompileDepends}

$(o)bio_lib$(oext) : $(vendorSrc)crypto/bio/bio_lib.c ${MultiCompileDepends}

$(o)bio_meth$(oext) : $(vendorSrc)crypto/bio/bio_meth.c ${MultiCompileDepends}

$(o)bss_acpt$(oext) : $(vendorSrc)crypto/bio/bss_acpt.c ${MultiCompileDepends}

$(o)bss_bio$(oext) : $(vendorSrc)crypto/bio/bss_bio.c ${MultiCompileDepends}

$(o)bss_conn$(oext) : $(vendorSrc)crypto/bio/bss_conn.c ${MultiCompileDepends}

$(o)bss_dgram$(oext) : $(vendorSrc)crypto/bio/bss_dgram.c ${MultiCompileDepends}

$(o)bss_fd$(oext) : $(vendorSrc)crypto/bio/bss_fd.c ${MultiCompileDepends}

$(o)bss_file$(oext) : $(vendorSrc)crypto/bio/bss_file.c ${MultiCompileDepends}

$(o)bss_log$(oext) : $(vendorSrc)crypto/bio/bss_log.c ${MultiCompileDepends}

$(o)bss_mem$(oext) : $(vendorSrc)crypto/bio/bss_mem.c ${MultiCompileDepends}

$(o)bss_null$(oext) : $(vendorSrc)crypto/bio/bss_null.c ${MultiCompileDepends}

$(o)bss_sock$(oext) : $(vendorSrc)crypto/bio/bss_sock.c ${MultiCompileDepends}

$(o)bn_add$(oext) : $(vendorSrc)crypto/bn/bn_add.c ${MultiCompileDepends}

$(o)bn_asm$(oext) : $(vendorSrc)crypto/bn/bn_asm.c ${MultiCompileDepends}

$(o)bn_blind$(oext) : $(vendorSrc)crypto/bn/bn_blind.c ${MultiCompileDepends}

$(o)bn_const$(oext) : $(vendorSrc)crypto/bn/bn_const.c ${MultiCompileDepends}

$(o)bn_ctx$(oext) : $(vendorSrc)crypto/bn/bn_ctx.c ${MultiCompileDepends}

$(o)bn_depr$(oext) : $(vendorSrc)crypto/bn/bn_depr.c ${MultiCompileDepends}

$(o)bn_dh$(oext) : $(vendorSrc)crypto/bn/bn_dh.c ${MultiCompileDepends}

$(o)bn_div$(oext) : $(vendorSrc)crypto/bn/bn_div.c ${MultiCompileDepends}

$(o)bn_err$(oext) : $(vendorSrc)crypto/bn/bn_err.c ${MultiCompileDepends}

$(o)bn_exp$(oext) : $(vendorSrc)crypto/bn/bn_exp.c ${MultiCompileDepends}

$(o)bn_exp2$(oext) : $(vendorSrc)crypto/bn/bn_exp2.c ${MultiCompileDepends}

$(o)bn_gcd$(oext) : $(vendorSrc)crypto/bn/bn_gcd.c ${MultiCompileDepends}

$(o)bn_gf2m$(oext) : $(vendorSrc)crypto/bn/bn_gf2m.c ${MultiCompileDepends}

$(o)bn_intern$(oext) : $(vendorSrc)crypto/bn/bn_intern.c ${MultiCompileDepends}

$(o)bn_kron$(oext) : $(vendorSrc)crypto/bn/bn_kron.c ${MultiCompileDepends}

$(o)bn_lib$(oext) : $(vendorSrc)crypto/bn/bn_lib.c ${MultiCompileDepends}

$(o)bn_mod$(oext) : $(vendorSrc)crypto/bn/bn_mod.c ${MultiCompileDepends}

$(o)bn_mont$(oext) : $(vendorSrc)crypto/bn/bn_mont.c ${MultiCompileDepends}

$(o)bn_mpi$(oext) : $(vendorSrc)crypto/bn/bn_mpi.c ${MultiCompileDepends}

$(o)bn_mul$(oext) : $(vendorSrc)crypto/bn/bn_mul.c ${MultiCompileDepends}

$(o)bn_nist$(oext) : $(vendorSrc)crypto/bn/bn_nist.c ${MultiCompileDepends}

$(o)bn_prime$(oext) : $(vendorSrc)crypto/bn/bn_prime.c ${MultiCompileDepends}

$(o)bn_print$(oext) : $(vendorSrc)crypto/bn/bn_print.c ${MultiCompileDepends}

$(o)bn_rand$(oext) : $(vendorSrc)crypto/bn/bn_rand.c ${MultiCompileDepends}

$(o)bn_recp$(oext) : $(vendorSrc)crypto/bn/bn_recp.c ${MultiCompileDepends}

$(o)bn_shift$(oext) : $(vendorSrc)crypto/bn/bn_shift.c ${MultiCompileDepends}

$(o)bn_sqr$(oext) : $(vendorSrc)crypto/bn/bn_sqr.c ${MultiCompileDepends}

$(o)bn_sqrt$(oext) : $(vendorSrc)crypto/bn/bn_sqrt.c ${MultiCompileDepends}

$(o)bn_srp$(oext) : $(vendorSrc)crypto/bn/bn_srp.c ${MultiCompileDepends}

$(o)bn_word$(oext) : $(vendorSrc)crypto/bn/bn_word.c ${MultiCompileDepends}

$(o)bn_x931p$(oext) : $(vendorSrc)crypto/bn/bn_x931p.c ${MultiCompileDepends}

$(o)buf_err$(oext) : $(vendorSrc)crypto/buffer/buf_err.c ${MultiCompileDepends}

$(o)buffer$(oext) : $(vendorSrc)crypto/buffer/buffer.c ${MultiCompileDepends}

$(o)camellia$(oext) : $(vendorSrc)crypto/camellia/camellia.c ${MultiCompileDepends}

$(o)cmll_cbc$(oext) : $(vendorSrc)crypto/camellia/cmll_cbc.c ${MultiCompileDepends}

$(o)cmll_cfb$(oext) : $(vendorSrc)crypto/camellia/cmll_cfb.c ${MultiCompileDepends}

$(o)cmll_ctr$(oext) : $(vendorSrc)crypto/camellia/cmll_ctr.c ${MultiCompileDepends}

$(o)cmll_ecb$(oext) : $(vendorSrc)crypto/camellia/cmll_ecb.c ${MultiCompileDepends}

$(o)cmll_misc$(oext) : $(vendorSrc)crypto/camellia/cmll_misc.c ${MultiCompileDepends}

$(o)cmll_ofb$(oext) : $(vendorSrc)crypto/camellia/cmll_ofb.c ${MultiCompileDepends}

$(o)c_cfb64$(oext) : $(vendorSrc)crypto/cast/c_cfb64.c ${MultiCompileDepends}

$(o)c_ecb$(oext) : $(vendorSrc)crypto/cast/c_ecb.c ${MultiCompileDepends}

$(o)c_enc$(oext) : $(vendorSrc)crypto/cast/c_enc.c ${MultiCompileDepends}

$(o)c_ofb64$(oext) : $(vendorSrc)crypto/cast/c_ofb64.c ${MultiCompileDepends}

$(o)c_skey$(oext) : $(vendorSrc)crypto/cast/c_skey.c ${MultiCompileDepends}

$(o)chacha_enc$(oext) : $(vendorSrc)crypto/chacha/chacha_enc.c ${MultiCompileDepends}

$(o)cmac$(oext) : $(vendorSrc)crypto/cmac/cmac.c ${MultiCompileDepends}

$(o)cms_asn1$(oext) : $(vendorSrc)crypto/cms/cms_asn1.c ${MultiCompileDepends}

$(o)cms_att$(oext) : $(vendorSrc)crypto/cms/cms_att.c ${MultiCompileDepends}

$(o)cms_cd$(oext) : $(vendorSrc)crypto/cms/cms_cd.c ${MultiCompileDepends}

$(o)cms_dd$(oext) : $(vendorSrc)crypto/cms/cms_dd.c ${MultiCompileDepends}

$(o)cms_enc$(oext) : $(vendorSrc)crypto/cms/cms_enc.c ${MultiCompileDepends}

$(o)cms_env$(oext) : $(vendorSrc)crypto/cms/cms_env.c ${MultiCompileDepends}

$(o)cms_err$(oext) : $(vendorSrc)crypto/cms/cms_err.c ${MultiCompileDepends}

$(o)cms_ess$(oext) : $(vendorSrc)crypto/cms/cms_ess.c ${MultiCompileDepends}

$(o)cms_io$(oext) : $(vendorSrc)crypto/cms/cms_io.c ${MultiCompileDepends}

$(o)cms_kari$(oext) : $(vendorSrc)crypto/cms/cms_kari.c ${MultiCompileDepends}

$(o)cms_lib$(oext) : $(vendorSrc)crypto/cms/cms_lib.c ${MultiCompileDepends}

$(o)cms_pwri$(oext) : $(vendorSrc)crypto/cms/cms_pwri.c ${MultiCompileDepends}

$(o)cms_sd$(oext) : $(vendorSrc)crypto/cms/cms_sd.c ${MultiCompileDepends}

$(o)cms_smime$(oext) : $(vendorSrc)crypto/cms/cms_smime.c ${MultiCompileDepends}

$(o)c_zlib$(oext) : $(vendorSrc)crypto/comp/c_zlib.c ${MultiCompileDepends}

$(o)comp_err$(oext) : $(vendorSrc)crypto/comp/comp_err.c ${MultiCompileDepends}

$(o)comp_lib$(oext) : $(vendorSrc)crypto/comp/comp_lib.c ${MultiCompileDepends}

$(o)conf_api$(oext) : $(vendorSrc)crypto/conf/conf_api.c ${MultiCompileDepends}

$(o)conf_def$(oext) : $(vendorSrc)crypto/conf/conf_def.c ${MultiCompileDepends}

$(o)conf_err$(oext) : $(vendorSrc)crypto/conf/conf_err.c ${MultiCompileDepends}

$(o)conf_lib$(oext) : $(vendorSrc)crypto/conf/conf_lib.c ${MultiCompileDepends}

$(o)conf_mall$(oext) : $(vendorSrc)crypto/conf/conf_mall.c ${MultiCompileDepends}

$(o)conf_mod$(oext) : $(vendorSrc)crypto/conf/conf_mod.c ${MultiCompileDepends}

$(o)conf_sap$(oext) : $(vendorSrc)crypto/conf/conf_sap.c ${MultiCompileDepends}

$(o)conf_ssl$(oext) : $(vendorSrc)crypto/conf/conf_ssl.c ${MultiCompileDepends}

$(o)cpt_err$(oext) : $(vendorSrc)crypto/cpt_err.c ${MultiCompileDepends}

$(o)cryptlib$(oext) : $(vendorSrc)crypto/cryptlib.c ${MultiCompileDepends}

$(o)ct_b64$(oext) : $(vendorSrc)crypto/ct/ct_b64.c ${MultiCompileDepends}

$(o)ct_err$(oext) : $(vendorSrc)crypto/ct/ct_err.c ${MultiCompileDepends}

$(o)ct_log$(oext) : $(vendorSrc)crypto/ct/ct_log.c ${MultiCompileDepends}

$(o)ct_oct$(oext) : $(vendorSrc)crypto/ct/ct_oct.c ${MultiCompileDepends}

$(o)ct_policy$(oext) : $(vendorSrc)crypto/ct/ct_policy.c ${MultiCompileDepends}

$(o)ct_prn$(oext) : $(vendorSrc)crypto/ct/ct_prn.c ${MultiCompileDepends}

$(o)ct_sct$(oext) : $(vendorSrc)crypto/ct/ct_sct.c ${MultiCompileDepends}

$(o)ct_sct_ctx$(oext) : $(vendorSrc)crypto/ct/ct_sct_ctx.c ${MultiCompileDepends}

$(o)ct_vfy$(oext) : $(vendorSrc)crypto/ct/ct_vfy.c ${MultiCompileDepends}

$(o)ct_x509v3$(oext) : $(vendorSrc)crypto/ct/ct_x509v3.c ${MultiCompileDepends}

$(o)ctype$(oext) : $(vendorSrc)crypto/ctype.c ${MultiCompileDepends}

$(o)cversion$(oext) : $(vendorSrc)crypto/cversion.c ${MultiCompileDepends}

$(o)cbc_cksm$(oext) : $(vendorSrc)crypto/des/cbc_cksm.c ${MultiCompileDepends}

$(o)cbc_enc$(oext) : $(vendorSrc)crypto/des/cbc_enc.c ${MultiCompileDepends}

$(o)cfb64ede$(oext) : $(vendorSrc)crypto/des/cfb64ede.c ${MultiCompileDepends}

$(o)cfb64enc$(oext) : $(vendorSrc)crypto/des/cfb64enc.c ${MultiCompileDepends}

$(o)cfb_enc$(oext) : $(vendorSrc)crypto/des/cfb_enc.c ${MultiCompileDepends}

$(o)des_enc$(oext) : $(vendorSrc)crypto/des/des_enc.c ${MultiCompileDepends}

$(o)ecb3_enc$(oext) : $(vendorSrc)crypto/des/ecb3_enc.c ${MultiCompileDepends}

$(o)ecb_enc$(oext) : $(vendorSrc)crypto/des/ecb_enc.c ${MultiCompileDepends}

$(o)fcrypt$(oext) : $(vendorSrc)crypto/des/fcrypt.c ${MultiCompileDepends}

$(o)fcrypt_b$(oext) : $(vendorSrc)crypto/des/fcrypt_b.c ${MultiCompileDepends}

$(o)ofb64ede$(oext) : $(vendorSrc)crypto/des/ofb64ede.c ${MultiCompileDepends}

$(o)ofb64enc$(oext) : $(vendorSrc)crypto/des/ofb64enc.c ${MultiCompileDepends}

$(o)ofb_enc$(oext) : $(vendorSrc)crypto/des/ofb_enc.c ${MultiCompileDepends}

$(o)pcbc_enc$(oext) : $(vendorSrc)crypto/des/pcbc_enc.c ${MultiCompileDepends}

$(o)qud_cksm$(oext) : $(vendorSrc)crypto/des/qud_cksm.c ${MultiCompileDepends}

$(o)rand_key$(oext) : $(vendorSrc)crypto/des/rand_key.c ${MultiCompileDepends}

$(o)set_key$(oext) : $(vendorSrc)crypto/des/set_key.c ${MultiCompileDepends}

$(o)str2key$(oext) : $(vendorSrc)crypto/des/str2key.c ${MultiCompileDepends}

$(o)xcbc_enc$(oext) : $(vendorSrc)crypto/des/xcbc_enc.c ${MultiCompileDepends}

$(o)dh_ameth$(oext) : $(vendorSrc)crypto/dh/dh_ameth.c ${MultiCompileDepends}

$(o)dh_asn1$(oext) : $(vendorSrc)crypto/dh/dh_asn1.c ${MultiCompileDepends}

$(o)dh_check$(oext) : $(vendorSrc)crypto/dh/dh_check.c ${MultiCompileDepends}

$(o)dh_depr$(oext) : $(vendorSrc)crypto/dh/dh_depr.c ${MultiCompileDepends}

$(o)dh_err$(oext) : $(vendorSrc)crypto/dh/dh_err.c ${MultiCompileDepends}

$(o)dh_gen$(oext) : $(vendorSrc)crypto/dh/dh_gen.c ${MultiCompileDepends}

$(o)dh_kdf$(oext) : $(vendorSrc)crypto/dh/dh_kdf.c ${MultiCompileDepends}

$(o)dh_key$(oext) : $(vendorSrc)crypto/dh/dh_key.c ${MultiCompileDepends}

$(o)dh_lib$(oext) : $(vendorSrc)crypto/dh/dh_lib.c ${MultiCompileDepends}

$(o)dh_meth$(oext) : $(vendorSrc)crypto/dh/dh_meth.c ${MultiCompileDepends}

$(o)dh_pmeth$(oext) : $(vendorSrc)crypto/dh/dh_pmeth.c ${MultiCompileDepends}

$(o)dh_prn$(oext) : $(vendorSrc)crypto/dh/dh_prn.c ${MultiCompileDepends}

$(o)dh_rfc5114$(oext) : $(vendorSrc)crypto/dh/dh_rfc5114.c ${MultiCompileDepends}

$(o)dsa_ameth$(oext) : $(vendorSrc)crypto/dsa/dsa_ameth.c ${MultiCompileDepends}

$(o)dsa_asn1$(oext) : $(vendorSrc)crypto/dsa/dsa_asn1.c ${MultiCompileDepends}

$(o)dsa_depr$(oext) : $(vendorSrc)crypto/dsa/dsa_depr.c ${MultiCompileDepends}

$(o)dsa_err$(oext) : $(vendorSrc)crypto/dsa/dsa_err.c ${MultiCompileDepends}

$(o)dsa_gen$(oext) : $(vendorSrc)crypto/dsa/dsa_gen.c ${MultiCompileDepends}

$(o)dsa_key$(oext) : $(vendorSrc)crypto/dsa/dsa_key.c ${MultiCompileDepends}

$(o)dsa_lib$(oext) : $(vendorSrc)crypto/dsa/dsa_lib.c ${MultiCompileDepends}

$(o)dsa_meth$(oext) : $(vendorSrc)crypto/dsa/dsa_meth.c ${MultiCompileDepends}

$(o)dsa_ossl$(oext) : $(vendorSrc)crypto/dsa/dsa_ossl.c ${MultiCompileDepends}

$(o)dsa_pmeth$(oext) : $(vendorSrc)crypto/dsa/dsa_pmeth.c ${MultiCompileDepends}

$(o)dsa_prn$(oext) : $(vendorSrc)crypto/dsa/dsa_prn.c ${MultiCompileDepends}

$(o)dsa_sign$(oext) : $(vendorSrc)crypto/dsa/dsa_sign.c ${MultiCompileDepends}

$(o)dsa_vrf$(oext) : $(vendorSrc)crypto/dsa/dsa_vrf.c ${MultiCompileDepends}

$(o)dso_dl$(oext) : $(vendorSrc)crypto/dso/dso_dl.c ${MultiCompileDepends}

$(o)dso_dlfcn$(oext) : $(vendorSrc)crypto/dso/dso_dlfcn.c ${MultiCompileDepends}

$(o)dso_err$(oext) : $(vendorSrc)crypto/dso/dso_err.c ${MultiCompileDepends}

$(o)dso_lib$(oext) : $(vendorSrc)crypto/dso/dso_lib.c ${MultiCompileDepends}

$(o)dso_openssl$(oext) : $(vendorSrc)crypto/dso/dso_openssl.c ${MultiCompileDepends}

$(o)dso_vms$(oext) : $(vendorSrc)crypto/dso/dso_vms.c ${MultiCompileDepends}

$(o)dso_win32$(oext) : $(vendorSrc)crypto/dso/dso_win32.c ${MultiCompileDepends}

$(o)ebcdic$(oext) : $(vendorSrc)crypto/ebcdic.c ${MultiCompileDepends}

$(o)curve25519$(oext) : $(vendorSrc)crypto/ec/curve25519.c ${MultiCompileDepends}

$(o)f_impl32$(oext) : $(vendorSrc)crypto/ec/curve448/arch_32/f_impl32.c ${MultiCompileDepends}

$(o)curve448$(oext) : $(vendorSrc)crypto/ec/curve448/curve448.c ${MultiCompileDepends}

$(o)curve448_tables$(oext) : $(vendorSrc)crypto/ec/curve448/curve448_tables.c ${MultiCompileDepends}

$(o)eddsa$(oext) : $(vendorSrc)crypto/ec/curve448/eddsa.c ${MultiCompileDepends}

$(o)f_generic$(oext) : $(vendorSrc)crypto/ec/curve448/f_generic.c ${MultiCompileDepends}

$(o)scalar$(oext) : $(vendorSrc)crypto/ec/curve448/scalar.c ${MultiCompileDepends}

$(o)ec2_oct$(oext) : $(vendorSrc)crypto/ec/ec2_oct.c ${MultiCompileDepends}

$(o)ec2_smpl$(oext) : $(vendorSrc)crypto/ec/ec2_smpl.c ${MultiCompileDepends}

$(o)ec_ameth$(oext) : $(vendorSrc)crypto/ec/ec_ameth.c ${MultiCompileDepends}

$(o)ec_asn1$(oext) : $(vendorSrc)crypto/ec/ec_asn1.c ${MultiCompileDepends}

$(o)ec_check$(oext) : $(vendorSrc)crypto/ec/ec_check.c ${MultiCompileDepends}

$(o)ec_curve$(oext) : $(vendorSrc)crypto/ec/ec_curve.c ${MultiCompileDepends}

$(o)ec_cvt$(oext) : $(vendorSrc)crypto/ec/ec_cvt.c ${MultiCompileDepends}

$(o)ec_err$(oext) : $(vendorSrc)crypto/ec/ec_err.c ${MultiCompileDepends}

$(o)ec_key$(oext) : $(vendorSrc)crypto/ec/ec_key.c ${MultiCompileDepends}

$(o)ec_kmeth$(oext) : $(vendorSrc)crypto/ec/ec_kmeth.c ${MultiCompileDepends}

$(o)ec_lib$(oext) : $(vendorSrc)crypto/ec/ec_lib.c ${MultiCompileDepends}

$(o)ec_mult$(oext) : $(vendorSrc)crypto/ec/ec_mult.c ${MultiCompileDepends}

$(o)ec_oct$(oext) : $(vendorSrc)crypto/ec/ec_oct.c ${MultiCompileDepends}

$(o)ec_pmeth$(oext) : $(vendorSrc)crypto/ec/ec_pmeth.c ${MultiCompileDepends}

$(o)ec_print$(oext) : $(vendorSrc)crypto/ec/ec_print.c ${MultiCompileDepends}

$(o)ecdh_kdf$(oext) : $(vendorSrc)crypto/ec/ecdh_kdf.c ${MultiCompileDepends}

$(o)ecdh_ossl$(oext) : $(vendorSrc)crypto/ec/ecdh_ossl.c ${MultiCompileDepends}

$(o)ecdsa_ossl$(oext) : $(vendorSrc)crypto/ec/ecdsa_ossl.c ${MultiCompileDepends}

$(o)ecdsa_sign$(oext) : $(vendorSrc)crypto/ec/ecdsa_sign.c ${MultiCompileDepends}

$(o)ecdsa_vrf$(oext) : $(vendorSrc)crypto/ec/ecdsa_vrf.c ${MultiCompileDepends}

$(o)eck_prn$(oext) : $(vendorSrc)crypto/ec/eck_prn.c ${MultiCompileDepends}

$(o)ecp_mont$(oext) : $(vendorSrc)crypto/ec/ecp_mont.c ${MultiCompileDepends}

$(o)ecp_nist$(oext) : $(vendorSrc)crypto/ec/ecp_nist.c ${MultiCompileDepends}

$(o)ecp_nistp224$(oext) : $(vendorSrc)crypto/ec/ecp_nistp224.c ${MultiCompileDepends}

$(o)ecp_nistp256$(oext) : $(vendorSrc)crypto/ec/ecp_nistp256.c ${MultiCompileDepends}

$(o)ecp_nistp521$(oext) : $(vendorSrc)crypto/ec/ecp_nistp521.c ${MultiCompileDepends}

$(o)ecp_nistputil$(oext) : $(vendorSrc)crypto/ec/ecp_nistputil.c ${MultiCompileDepends}

$(o)ecp_oct$(oext) : $(vendorSrc)crypto/ec/ecp_oct.c ${MultiCompileDepends}

$(o)ecp_smpl$(oext) : $(vendorSrc)crypto/ec/ecp_smpl.c ${MultiCompileDepends}

$(o)ecx_meth$(oext) : $(vendorSrc)crypto/ec/ecx_meth.c ${MultiCompileDepends}

$(o)err$(oext) : $(vendorSrc)crypto/err/err.c ${MultiCompileDepends}

$(o)err_all$(oext) : $(vendorSrc)crypto/err/err_all.c ${MultiCompileDepends}

$(o)err_prn$(oext) : $(vendorSrc)crypto/err/err_prn.c ${MultiCompileDepends}

$(o)bio_b64$(oext) : $(vendorSrc)crypto/evp/bio_b64.c ${MultiCompileDepends}

$(o)bio_enc$(oext) : $(vendorSrc)crypto/evp/bio_enc.c ${MultiCompileDepends}

$(o)bio_md$(oext) : $(vendorSrc)crypto/evp/bio_md.c ${MultiCompileDepends}

$(o)bio_ok$(oext) : $(vendorSrc)crypto/evp/bio_ok.c ${MultiCompileDepends}

$(o)c_allc$(oext) : $(vendorSrc)crypto/evp/c_allc.c ${MultiCompileDepends}

$(o)c_alld$(oext) : $(vendorSrc)crypto/evp/c_alld.c ${MultiCompileDepends}

$(o)cmeth_lib$(oext) : $(vendorSrc)crypto/evp/cmeth_lib.c ${MultiCompileDepends}

$(o)digest$(oext) : $(vendorSrc)crypto/evp/digest.c ${MultiCompileDepends}

$(o)e_aes$(oext) : $(vendorSrc)crypto/evp/e_aes.c ${MultiCompileDepends}

$(o)e_aes_cbc_hmac_sha1$(oext) : $(vendorSrc)crypto/evp/e_aes_cbc_hmac_sha1.c ${MultiCompileDepends}

$(o)e_aes_cbc_hmac_sha256$(oext) : $(vendorSrc)crypto/evp/e_aes_cbc_hmac_sha256.c ${MultiCompileDepends}

$(o)e_aria$(oext) : $(vendorSrc)crypto/evp/e_aria.c ${MultiCompileDepends}

$(o)e_bf$(oext) : $(vendorSrc)crypto/evp/e_bf.c ${MultiCompileDepends}

$(o)e_camellia$(oext) : $(vendorSrc)crypto/evp/e_camellia.c ${MultiCompileDepends}

$(o)e_cast$(oext) : $(vendorSrc)crypto/evp/e_cast.c ${MultiCompileDepends}

$(o)e_chacha20_poly1305$(oext) : $(vendorSrc)crypto/evp/e_chacha20_poly1305.c ${MultiCompileDepends}

$(o)e_des$(oext) : $(vendorSrc)crypto/evp/e_des.c ${MultiCompileDepends}

$(o)e_des3$(oext) : $(vendorSrc)crypto/evp/e_des3.c ${MultiCompileDepends}

$(o)e_idea$(oext) : $(vendorSrc)crypto/evp/e_idea.c ${MultiCompileDepends}

$(o)e_null$(oext) : $(vendorSrc)crypto/evp/e_null.c ${MultiCompileDepends}

$(o)e_old$(oext) : $(vendorSrc)crypto/evp/e_old.c ${MultiCompileDepends}

$(o)e_rc2$(oext) : $(vendorSrc)crypto/evp/e_rc2.c ${MultiCompileDepends}

$(o)e_rc4$(oext) : $(vendorSrc)crypto/evp/e_rc4.c ${MultiCompileDepends}

$(o)e_rc4_hmac_md5$(oext) : $(vendorSrc)crypto/evp/e_rc4_hmac_md5.c ${MultiCompileDepends}

$(o)e_rc5$(oext) : $(vendorSrc)crypto/evp/e_rc5.c ${MultiCompileDepends}

$(o)e_seed$(oext) : $(vendorSrc)crypto/evp/e_seed.c ${MultiCompileDepends}

$(o)e_sm4$(oext) : $(vendorSrc)crypto/evp/e_sm4.c ${MultiCompileDepends}

$(o)e_xcbc_d$(oext) : $(vendorSrc)crypto/evp/e_xcbc_d.c ${MultiCompileDepends}

$(o)encode$(oext) : $(vendorSrc)crypto/evp/encode.c ${MultiCompileDepends}

$(o)evp_cnf$(oext) : $(vendorSrc)crypto/evp/evp_cnf.c ${MultiCompileDepends}

$(o)evp_enc$(oext) : $(vendorSrc)crypto/evp/evp_enc.c ${MultiCompileDepends}

$(o)evp_err$(oext) : $(vendorSrc)crypto/evp/evp_err.c ${MultiCompileDepends}

$(o)evp_key$(oext) : $(vendorSrc)crypto/evp/evp_key.c ${MultiCompileDepends}

$(o)evp_lib$(oext) : $(vendorSrc)crypto/evp/evp_lib.c ${MultiCompileDepends}

$(o)evp_pbe$(oext) : $(vendorSrc)crypto/evp/evp_pbe.c ${MultiCompileDepends}

$(o)evp_pkey$(oext) : $(vendorSrc)crypto/evp/evp_pkey.c ${MultiCompileDepends}

$(o)legacy_md2$(oext) : $(vendorSrc)crypto/evp/legacy_md2.c ${MultiCompileDepends}

$(o)legacymd4$(oext) : $(vendorSrc)crypto/evp/legacy_md4.c ${MultiCompileDepends}

$(o)legacy_md5$(oext) : $(vendorSrc)crypto/evp/legacy_md5.c ${MultiCompileDepends}

$(o)legacy_md5_sha1$(oext) : $(vendorSrc)crypto/evp/legacy_md5_sha1.c ${MultiCompileDepends}

$(o)legacy_mdc2$(oext) : $(vendorSrc)crypto/evp/legacy_mdc2.c ${MultiCompileDepends}

$(o)m_null$(oext) : $(vendorSrc)crypto/evp/m_null.c ${MultiCompileDepends}

$(o)legacy_ripemd$(oext) : $(vendorSrc)crypto/evp/legacy_ripemd.c ${MultiCompileDepends}

$(o)legacy_sha$(oext) : $(vendorSrc)crypto/evp/legacy_sha.c ${MultiCompileDepends}

$(o)m_sigver$(oext) : $(vendorSrc)crypto/evp/m_sigver.c ${MultiCompileDepends}

$(o)legacy_wp$(oext) : $(vendorSrc)crypto/evp/legacy_wp.c ${MultiCompileDepends}

$(o)names$(oext) : $(vendorSrc)crypto/evp/names.c ${MultiCompileDepends}

$(o)p5_crpt$(oext) : $(vendorSrc)crypto/evp/p5_crpt.c ${MultiCompileDepends}

$(o)p5_crpt2$(oext) : $(vendorSrc)crypto/evp/p5_crpt2.c ${MultiCompileDepends}

$(o)p_dec$(oext) : $(vendorSrc)crypto/evp/p_dec.c ${MultiCompileDepends}

$(o)p_enc$(oext) : $(vendorSrc)crypto/evp/p_enc.c ${MultiCompileDepends}

$(o)p_lib$(oext) : $(vendorSrc)crypto/evp/p_lib.c ${MultiCompileDepends}

$(o)p_open$(oext) : $(vendorSrc)crypto/evp/p_open.c ${MultiCompileDepends}

$(o)p_seal$(oext) : $(vendorSrc)crypto/evp/p_seal.c ${MultiCompileDepends}

$(o)p_sign$(oext) : $(vendorSrc)crypto/evp/p_sign.c ${MultiCompileDepends}

$(o)p_verify$(oext) : $(vendorSrc)crypto/evp/p_verify.c ${MultiCompileDepends}

$(o)pbe_scrypt$(oext) : $(vendorSrc)crypto/evp/pbe_scrypt.c ${MultiCompileDepends}

$(o)pmeth_gn$(oext) : $(vendorSrc)crypto/evp/pmeth_gn.c ${MultiCompileDepends}

$(o)pmeth_lib$(oext) : $(vendorSrc)crypto/evp/pmeth_lib.c ${MultiCompileDepends}

$(o)ex_data$(oext) : $(vendorSrc)crypto/ex_data.c ${MultiCompileDepends}

$(o)getenv$(oext) : $(vendorSrc)crypto/getenv.c ${MultiCompileDepends}

$(o)hmac$(oext) : $(vendorSrc)crypto/hmac/hmac.c ${MultiCompileDepends}

$(o)i_cbc$(oext) : $(vendorSrc)crypto/idea/i_cbc.c ${MultiCompileDepends}

$(o)i_cfb64$(oext) : $(vendorSrc)crypto/idea/i_cfb64.c ${MultiCompileDepends}

$(o)i_ecb$(oext) : $(vendorSrc)crypto/idea/i_ecb.c ${MultiCompileDepends}

$(o)i_ofb64$(oext) : $(vendorSrc)crypto/idea/i_ofb64.c ${MultiCompileDepends}

$(o)i_skey$(oext) : $(vendorSrc)crypto/idea/i_skey.c ${MultiCompileDepends}

$(o)init$(oext) : $(vendorSrc)crypto/init.c ${MultiCompileDepends}

$(o)kdf_err$(oext) : $(vendorSrc)crypto/kdf/kdf_err.c ${MultiCompileDepends}

$(o)lh_stats$(oext) : $(vendorSrc)crypto/lhash/lh_stats.c ${MultiCompileDepends}

$(o)lhash$(oext) : $(vendorSrc)crypto/lhash/lhash.c ${MultiCompileDepends}

$(o)md4_dgst$(oext) : $(vendorSrc)crypto/md4/md4_dgst.c ${MultiCompileDepends}

$(o)md4_one$(oext) : $(vendorSrc)crypto/md4/md4_one.c ${MultiCompileDepends}

$(o)md5_dgst$(oext) : $(vendorSrc)crypto/md5/md5_dgst.c ${MultiCompileDepends}

$(o)md5_one$(oext) : $(vendorSrc)crypto/md5/md5_one.c ${MultiCompileDepends}

$(o)mdc2_one$(oext) : $(vendorSrc)crypto/mdc2/mdc2_one.c ${MultiCompileDepends}

$(o)mdc2dgst$(oext) : $(vendorSrc)crypto/mdc2/mdc2dgst.c ${MultiCompileDepends}

$(o)mem$(oext) : $(vendorSrc)crypto/mem.c ${MultiCompileDepends}

%if ($(TARGET_PLATFORM) != "Linux" && $(TARGET_PLATFORM) != "Android" && $(TARGET_PLATFORM) != "Windows") || $(TARGET_PROCESSOR_ARCHITECTURE) == "AndroidARM64"

    $(o)mem_clr$(oext) : $(vendorSrc)crypto/mem_clr.c ${MultiCompileDepends}

%endif

$(o)mem_sec$(oext) : $(vendorSrc)crypto/mem_sec.c ${MultiCompileDepends}

$(o)cbc128$(oext) : $(vendorSrc)crypto/modes/cbc128.c ${MultiCompileDepends}

$(o)ccm128$(oext) : $(vendorSrc)crypto/modes/ccm128.c ${MultiCompileDepends}

$(o)cfb128$(oext) : $(vendorSrc)crypto/modes/cfb128.c ${MultiCompileDepends}

$(o)ctr128$(oext) : $(vendorSrc)crypto/modes/ctr128.c ${MultiCompileDepends}

$(o)cts128$(oext) : $(vendorSrc)crypto/modes/cts128.c ${MultiCompileDepends}

$(o)gcm128$(oext) : $(vendorSrc)crypto/modes/gcm128.c ${MultiCompileDepends}

$(o)ocb128$(oext) : $(vendorSrc)crypto/modes/ocb128.c ${MultiCompileDepends}

$(o)ofb128$(oext) : $(vendorSrc)crypto/modes/ofb128.c ${MultiCompileDepends}

$(o)wrap128$(oext) : $(vendorSrc)crypto/modes/wrap128.c ${MultiCompileDepends}

$(o)xts128$(oext) : $(vendorSrc)crypto/modes/xts128.c ${MultiCompileDepends}

$(o)o_dir$(oext) : $(vendorSrc)crypto/o_dir.c ${MultiCompileDepends}

$(o)o_fopen$(oext) : $(vendorSrc)crypto/o_fopen.c ${MultiCompileDepends}

$(o)o_init$(oext) : $(vendorSrc)crypto/o_init.c ${MultiCompileDepends}

$(o)o_str$(oext) : $(vendorSrc)crypto/o_str.c ${MultiCompileDepends}

$(o)o_time$(oext) : $(vendorSrc)crypto/o_time.c ${MultiCompileDepends}

$(o)o_names$(oext) : $(vendorSrc)crypto/objects/o_names.c ${MultiCompileDepends}

$(o)obj_dat$(oext) : $(vendorSrc)crypto/objects/obj_dat.c ${MultiCompileDepends}

$(o)obj_err$(oext) : $(vendorSrc)crypto/objects/obj_err.c ${MultiCompileDepends}

$(o)obj_lib$(oext) : $(vendorSrc)crypto/objects/obj_lib.c ${MultiCompileDepends}

$(o)obj_xref$(oext) : $(vendorSrc)crypto/objects/obj_xref.c ${MultiCompileDepends}

$(o)ocsp_asn$(oext) : $(vendorSrc)crypto/ocsp/ocsp_asn.c ${MultiCompileDepends}

$(o)ocsp_cl$(oext) : $(vendorSrc)crypto/ocsp/ocsp_cl.c ${MultiCompileDepends}

$(o)ocsp_err$(oext) : $(vendorSrc)crypto/ocsp/ocsp_err.c ${MultiCompileDepends}

$(o)ocsp_ext$(oext) : $(vendorSrc)crypto/ocsp/ocsp_ext.c ${MultiCompileDepends}

$(o)ocsp_http$(oext) : $(vendorSrc)crypto/ocsp/ocsp_http.c ${MultiCompileDepends}

$(o)ocsp_lib$(oext) : $(vendorSrc)crypto/ocsp/ocsp_lib.c ${MultiCompileDepends}

$(o)ocsp_prn$(oext) : $(vendorSrc)crypto/ocsp/ocsp_prn.c ${MultiCompileDepends}

$(o)ocsp_srv$(oext) : $(vendorSrc)crypto/ocsp/ocsp_srv.c ${MultiCompileDepends}

$(o)ocsp_vfy$(oext) : $(vendorSrc)crypto/ocsp/ocsp_vfy.c ${MultiCompileDepends}

$(o)v3_ocsp$(oext) : $(vendorSrc)crypto/ocsp/v3_ocsp.c ${MultiCompileDepends}

$(o)pem_all$(oext) : $(vendorSrc)crypto/pem/pem_all.c ${MultiCompileDepends}

$(o)pem_err$(oext) : $(vendorSrc)crypto/pem/pem_err.c ${MultiCompileDepends}

$(o)pem_info$(oext) : $(vendorSrc)crypto/pem/pem_info.c ${MultiCompileDepends}

$(o)pem_lib$(oext) : $(vendorSrc)crypto/pem/pem_lib.c ${MultiCompileDepends}

$(o)pem_oth$(oext) : $(vendorSrc)crypto/pem/pem_oth.c ${MultiCompileDepends}

$(o)pem_pk8$(oext) : $(vendorSrc)crypto/pem/pem_pk8.c ${MultiCompileDepends}

$(o)pem_pkey$(oext) : $(vendorSrc)crypto/pem/pem_pkey.c ${MultiCompileDepends}

$(o)pem_sign$(oext) : $(vendorSrc)crypto/pem/pem_sign.c ${MultiCompileDepends}

$(o)pem_x509$(oext) : $(vendorSrc)crypto/pem/pem_x509.c ${MultiCompileDepends}

$(o)pem_xaux$(oext) : $(vendorSrc)crypto/pem/pem_xaux.c ${MultiCompileDepends}

$(o)pvkfmt$(oext) : $(vendorSrc)crypto/pem/pvkfmt.c ${MultiCompileDepends}

$(o)p12_add$(oext) : $(vendorSrc)crypto/pkcs12/p12_add.c ${MultiCompileDepends}

$(o)p12_asn$(oext) : $(vendorSrc)crypto/pkcs12/p12_asn.c ${MultiCompileDepends}

$(o)p12_attr$(oext) : $(vendorSrc)crypto/pkcs12/p12_attr.c ${MultiCompileDepends}

$(o)p12_crpt$(oext) : $(vendorSrc)crypto/pkcs12/p12_crpt.c ${MultiCompileDepends}

$(o)p12_crt$(oext) : $(vendorSrc)crypto/pkcs12/p12_crt.c ${MultiCompileDepends}

$(o)p12_decr$(oext) : $(vendorSrc)crypto/pkcs12/p12_decr.c ${MultiCompileDepends}

$(o)p12_init$(oext) : $(vendorSrc)crypto/pkcs12/p12_init.c ${MultiCompileDepends}

$(o)p12_key$(oext) : $(vendorSrc)crypto/pkcs12/p12_key.c ${MultiCompileDepends}

$(o)p12_kiss$(oext) : $(vendorSrc)crypto/pkcs12/p12_kiss.c ${MultiCompileDepends}

$(o)p12_mutl$(oext) : $(vendorSrc)crypto/pkcs12/p12_mutl.c ${MultiCompileDepends}

$(o)p12_npas$(oext) : $(vendorSrc)crypto/pkcs12/p12_npas.c ${MultiCompileDepends}

$(o)p12_p8d$(oext) : $(vendorSrc)crypto/pkcs12/p12_p8d.c ${MultiCompileDepends}

$(o)p12_p8e$(oext) : $(vendorSrc)crypto/pkcs12/p12_p8e.c ${MultiCompileDepends}

$(o)p12_sbag$(oext) : $(vendorSrc)crypto/pkcs12/p12_sbag.c ${MultiCompileDepends}

$(o)p12_utl$(oext) : $(vendorSrc)crypto/pkcs12/p12_utl.c ${MultiCompileDepends}

$(o)pk12err$(oext) : $(vendorSrc)crypto/pkcs12/pk12err.c ${MultiCompileDepends}

$(o)bio_pk7$(oext) : $(vendorSrc)crypto/pkcs7/bio_pk7.c ${MultiCompileDepends}

$(o)pk7_asn1$(oext) : $(vendorSrc)crypto/pkcs7/pk7_asn1.c ${MultiCompileDepends}

$(o)pk7_attr$(oext) : $(vendorSrc)crypto/pkcs7/pk7_attr.c ${MultiCompileDepends}

$(o)pk7_doit$(oext) : $(vendorSrc)crypto/pkcs7/pk7_doit.c ${MultiCompileDepends}

$(o)pk7_lib$(oext) : $(vendorSrc)crypto/pkcs7/pk7_lib.c ${MultiCompileDepends}

$(o)pk7_mime$(oext) : $(vendorSrc)crypto/pkcs7/pk7_mime.c ${MultiCompileDepends}

$(o)pk7_smime$(oext) : $(vendorSrc)crypto/pkcs7/pk7_smime.c ${MultiCompileDepends}

$(o)pkcs7err$(oext) : $(vendorSrc)crypto/pkcs7/pkcs7err.c ${MultiCompileDepends}

$(o)poly1305$(oext) : $(vendorSrc)crypto/poly1305/poly1305.c ${MultiCompileDepends}

$(o)drbg_lib$(oext) : $(vendorSrc)crypto/rand/drbg_lib.c ${MultiCompileDepends}

$(o)rand_egd$(oext) : $(vendorSrc)crypto/rand/rand_egd.c ${MultiCompileDepends}

$(o)rand_err$(oext) : $(vendorSrc)crypto/rand/rand_err.c ${MultiCompileDepends}

$(o)rand_lib$(oext) : $(vendorSrc)crypto/rand/rand_lib.c ${MultiCompileDepends}

$(o)randfile$(oext) : $(vendorSrc)crypto/rand/randfile.c ${MultiCompileDepends}

$(o)rc2_cbc$(oext) : $(vendorSrc)crypto/rc2/rc2_cbc.c ${MultiCompileDepends}

$(o)rc2_ecb$(oext) : $(vendorSrc)crypto/rc2/rc2_ecb.c ${MultiCompileDepends}

$(o)rc2_skey$(oext) : $(vendorSrc)crypto/rc2/rc2_skey.c ${MultiCompileDepends}

$(o)rc2cfb64$(oext) : $(vendorSrc)crypto/rc2/rc2cfb64.c ${MultiCompileDepends}

$(o)rc2ofb64$(oext) : $(vendorSrc)crypto/rc2/rc2ofb64.c ${MultiCompileDepends}

$(o)rc4_enc$(oext) : $(vendorSrc)crypto/rc4/rc4_enc.c ${MultiCompileDepends}

$(o)rc4_skey$(oext) : $(vendorSrc)crypto/rc4/rc4_skey.c ${MultiCompileDepends}

$(o)rmd_dgst$(oext) : $(vendorSrc)crypto/ripemd/rmd_dgst.c ${MultiCompileDepends}

$(o)rmd_one$(oext) : $(vendorSrc)crypto/ripemd/rmd_one.c ${MultiCompileDepends}

$(o)rsa_ameth$(oext) : $(vendorSrc)crypto/rsa/rsa_ameth.c ${MultiCompileDepends}

$(o)rsa_asn1$(oext) : $(vendorSrc)crypto/rsa/rsa_asn1.c ${MultiCompileDepends}

$(o)rsa_chk$(oext) : $(vendorSrc)crypto/rsa/rsa_chk.c ${MultiCompileDepends}

$(o)rsa_crpt$(oext) : $(vendorSrc)crypto/rsa/rsa_crpt.c ${MultiCompileDepends}

$(o)rsa_depr$(oext) : $(vendorSrc)crypto/rsa/rsa_depr.c ${MultiCompileDepends}

$(o)rsa_err$(oext) : $(vendorSrc)crypto/rsa/rsa_err.c ${MultiCompileDepends}

$(o)rsa_gen$(oext) : $(vendorSrc)crypto/rsa/rsa_gen.c ${MultiCompileDepends}

$(o)rsa_lib$(oext) : $(vendorSrc)crypto/rsa/rsa_lib.c ${MultiCompileDepends}

$(o)rsa_meth$(oext) : $(vendorSrc)crypto/rsa/rsa_meth.c ${MultiCompileDepends}

$(o)rsa_mp$(oext) : $(vendorSrc)crypto/rsa/rsa_mp.c ${MultiCompileDepends}

$(o)rsa_none$(oext) : $(vendorSrc)crypto/rsa/rsa_none.c ${MultiCompileDepends}

$(o)rsa_oaep$(oext) : $(vendorSrc)crypto/rsa/rsa_oaep.c ${MultiCompileDepends}

$(o)rsa_ossl$(oext) : $(vendorSrc)crypto/rsa/rsa_ossl.c ${MultiCompileDepends}

$(o)rsa_pk1$(oext) : $(vendorSrc)crypto/rsa/rsa_pk1.c ${MultiCompileDepends}

$(o)rsa_pmeth$(oext) : $(vendorSrc)crypto/rsa/rsa_pmeth.c ${MultiCompileDepends}

$(o)rsa_prn$(oext) : $(vendorSrc)crypto/rsa/rsa_prn.c ${MultiCompileDepends}

$(o)rsa_pss$(oext) : $(vendorSrc)crypto/rsa/rsa_pss.c ${MultiCompileDepends}

$(o)rsa_saos$(oext) : $(vendorSrc)crypto/rsa/rsa_saos.c ${MultiCompileDepends}

$(o)rsa_sign$(oext) : $(vendorSrc)crypto/rsa/rsa_sign.c ${MultiCompileDepends}

$(o)rsa_x931$(oext) : $(vendorSrc)crypto/rsa/rsa_x931.c ${MultiCompileDepends}

$(o)rsa_x931g$(oext) : $(vendorSrc)crypto/rsa/rsa_x931g.c ${MultiCompileDepends}

$(o)seed$(oext) : $(vendorSrc)crypto/seed/seed.c ${MultiCompileDepends}

$(o)seed_cbc$(oext) : $(vendorSrc)crypto/seed/seed_cbc.c ${MultiCompileDepends}

$(o)seed_cfb$(oext) : $(vendorSrc)crypto/seed/seed_cfb.c ${MultiCompileDepends}

$(o)seed_ecb$(oext) : $(vendorSrc)crypto/seed/seed_ecb.c ${MultiCompileDepends}

$(o)seed_ofb$(oext) : $(vendorSrc)crypto/seed/seed_ofb.c ${MultiCompileDepends}

$(o)keccak1600$(oext) : $(vendorSrc)crypto/sha/keccak1600.c ${MultiCompileDepends}

$(o)sha1_one$(oext) : $(vendorSrc)crypto/sha/sha1_one.c ${MultiCompileDepends}

$(o)sha1dgst$(oext) : $(vendorSrc)crypto/sha/sha1dgst.c ${MultiCompileDepends}

$(o)sha256$(oext) : $(vendorSrc)crypto/sha/sha256.c ${MultiCompileDepends}

$(o)sha512$(oext) : $(vendorSrc)crypto/sha/sha512.c ${MultiCompileDepends}

$(o)siphash$(oext) : $(vendorSrc)crypto/siphash/siphash.c ${MultiCompileDepends}

$(o)sm2_crypt$(oext) : $(vendorSrc)crypto/sm2/sm2_crypt.c ${MultiCompileDepends}

$(o)sm2_err$(oext) : $(vendorSrc)crypto/sm2/sm2_err.c ${MultiCompileDepends}

$(o)sm2_sign$(oext) : $(vendorSrc)crypto/sm2/sm2_sign.c ${MultiCompileDepends}

$(o)sm3$(oext) : $(vendorSrc)crypto/sm3/sm3.c ${MultiCompileDepends}

$(o)sm4$(oext) : $(vendorSrc)crypto/sm4/sm4.c ${MultiCompileDepends}

$(o)srp_lib$(oext) : $(vendorSrc)crypto/srp/srp_lib.c ${MultiCompileDepends}

$(o)srp_vfy$(oext) : $(vendorSrc)crypto/srp/srp_vfy.c ${MultiCompileDepends}

$(o)stack$(oext) : $(vendorSrc)crypto/stack/stack.c ${MultiCompileDepends}

$(o)store_err$(oext) : $(vendorSrc)crypto/store/store_err.c ${MultiCompileDepends}

$(o)store_init$(oext) : $(vendorSrc)crypto/store/store_init.c ${MultiCompileDepends}

$(o)store_lib$(oext) : $(vendorSrc)crypto/store/store_lib.c ${MultiCompileDepends}

$(o)store_register$(oext) : $(vendorSrc)crypto/store/store_register.c ${MultiCompileDepends}

$(o)store_strings$(oext) : $(vendorSrc)crypto/store/store_strings.c ${MultiCompileDepends}

$(o)threads_none$(oext) : $(vendorSrc)crypto/threads_none.c ${MultiCompileDepends}

$(o)threads_pthread$(oext) : $(vendorSrc)crypto/threads_pthread.c ${MultiCompileDepends}

$(o)threads_win$(oext) : $(vendorSrc)crypto/threads_win.c ${MultiCompileDepends}

$(o)ts_asn1$(oext) : $(vendorSrc)crypto/ts/ts_asn1.c ${MultiCompileDepends}

$(o)ts_conf$(oext) : $(vendorSrc)crypto/ts/ts_conf.c ${MultiCompileDepends}

$(o)ts_err$(oext) : $(vendorSrc)crypto/ts/ts_err.c ${MultiCompileDepends}

$(o)ts_lib$(oext) : $(vendorSrc)crypto/ts/ts_lib.c ${MultiCompileDepends}

$(o)ts_req_print$(oext) : $(vendorSrc)crypto/ts/ts_req_print.c ${MultiCompileDepends}

$(o)ts_req_utils$(oext) : $(vendorSrc)crypto/ts/ts_req_utils.c ${MultiCompileDepends}

$(o)ts_rsp_print$(oext) : $(vendorSrc)crypto/ts/ts_rsp_print.c ${MultiCompileDepends}

$(o)ts_rsp_sign$(oext) : $(vendorSrc)crypto/ts/ts_rsp_sign.c ${MultiCompileDepends}

$(o)ts_rsp_utils$(oext) : $(vendorSrc)crypto/ts/ts_rsp_utils.c ${MultiCompileDepends}

$(o)ts_rsp_verify$(oext) : $(vendorSrc)crypto/ts/ts_rsp_verify.c ${MultiCompileDepends}

$(o)ts_verify_ctx$(oext) : $(vendorSrc)crypto/ts/ts_verify_ctx.c ${MultiCompileDepends}

$(o)txt_db$(oext) : $(vendorSrc)crypto/txt_db/txt_db.c ${MultiCompileDepends}

$(o)ui_err$(oext) : $(vendorSrc)crypto/ui/ui_err.c ${MultiCompileDepends}

$(o)ui_lib$(oext) : $(vendorSrc)crypto/ui/ui_lib.c ${MultiCompileDepends}

$(o)ui_null$(oext) : $(vendorSrc)crypto/ui/ui_null.c ${MultiCompileDepends}

$(o)ui_openssl$(oext) : $(vendorSrc)crypto/ui/ui_openssl.c ${MultiCompileDepends}

$(o)ui_util$(oext) : $(vendorSrc)crypto/ui/ui_util.c ${MultiCompileDepends}

$(o)uid$(oext) : $(vendorSrc)crypto/uid.c ${MultiCompileDepends}

$(o)wp_block$(oext) : $(vendorSrc)crypto/whrlpool/wp_block.c ${MultiCompileDepends}

$(o)wp_dgst$(oext) : $(vendorSrc)crypto/whrlpool/wp_dgst.c ${MultiCompileDepends}

$(o)by_dir$(oext) : $(vendorSrc)crypto/x509/by_dir.c ${MultiCompileDepends}

$(o)by_file$(oext) : $(vendorSrc)crypto/x509/by_file.c ${MultiCompileDepends}

$(o)t_crl$(oext) : $(vendorSrc)crypto/x509/t_crl.c ${MultiCompileDepends}

$(o)t_req$(oext) : $(vendorSrc)crypto/x509/t_req.c ${MultiCompileDepends}

$(o)t_x509$(oext) : $(vendorSrc)crypto/x509/t_x509.c ${MultiCompileDepends}

$(o)x509_att$(oext) : $(vendorSrc)crypto/x509/x509_att.c ${MultiCompileDepends}

$(o)x509_cmp$(oext) : $(vendorSrc)crypto/x509/x509_cmp.c ${MultiCompileDepends}

$(o)x509_d2$(oext) : $(vendorSrc)crypto/x509/x509_d2.c ${MultiCompileDepends}

$(o)x509_def$(oext) : $(vendorSrc)crypto/x509/x509_def.c ${MultiCompileDepends}

$(o)x509_err$(oext) : $(vendorSrc)crypto/x509/x509_err.c ${MultiCompileDepends}

$(o)x509_ext$(oext) : $(vendorSrc)crypto/x509/x509_ext.c ${MultiCompileDepends}

$(o)x509_lu$(oext) : $(vendorSrc)crypto/x509/x509_lu.c ${MultiCompileDepends}

$(o)x509_meth$(oext) : $(vendorSrc)crypto/x509/x509_meth.c ${MultiCompileDepends}

$(o)x509_obj$(oext) : $(vendorSrc)crypto/x509/x509_obj.c ${MultiCompileDepends}

$(o)x509_r2x$(oext) : $(vendorSrc)crypto/x509/x509_r2x.c ${MultiCompileDepends}

$(o)x509_req$(oext) : $(vendorSrc)crypto/x509/x509_req.c ${MultiCompileDepends}

$(o)x509_set$(oext) : $(vendorSrc)crypto/x509/x509_set.c ${MultiCompileDepends}

$(o)x509_trust$(oext) : $(vendorSrc)crypto/x509/x509_trust.c ${MultiCompileDepends}

$(o)x509_txt$(oext) : $(vendorSrc)crypto/x509/x509_txt.c ${MultiCompileDepends}

$(o)x509_v3$(oext) : $(vendorSrc)crypto/x509/x509_v3.c ${MultiCompileDepends}

$(o)x509_vfy$(oext) : $(vendorSrc)crypto/x509/x509_vfy.c ${MultiCompileDepends}

$(o)x509_vpm$(oext) : $(vendorSrc)crypto/x509/x509_vpm.c ${MultiCompileDepends}

$(o)x509cset$(oext) : $(vendorSrc)crypto/x509/x509cset.c ${MultiCompileDepends}

$(o)x509name$(oext) : $(vendorSrc)crypto/x509/x509name.c ${MultiCompileDepends}

$(o)x509rset$(oext) : $(vendorSrc)crypto/x509/x509rset.c ${MultiCompileDepends}

$(o)x509spki$(oext) : $(vendorSrc)crypto/x509/x509spki.c ${MultiCompileDepends}

$(o)x509type$(oext) : $(vendorSrc)crypto/x509/x509type.c ${MultiCompileDepends}

$(o)x_all$(oext) : $(vendorSrc)crypto/x509/x_all.c ${MultiCompileDepends}

$(o)x_attrib$(oext) : $(vendorSrc)crypto/x509/x_attrib.c ${MultiCompileDepends}

$(o)x_crl$(oext) : $(vendorSrc)crypto/x509/x_crl.c ${MultiCompileDepends}

$(o)x_exten$(oext) : $(vendorSrc)crypto/x509/x_exten.c ${MultiCompileDepends}

$(o)x_name$(oext) : $(vendorSrc)crypto/x509/x_name.c ${MultiCompileDepends}

$(o)x_pubkey$(oext) : $(vendorSrc)crypto/x509/x_pubkey.c ${MultiCompileDepends}

$(o)x_req$(oext) : $(vendorSrc)crypto/x509/x_req.c ${MultiCompileDepends}

$(o)x_x509$(oext) : $(vendorSrc)crypto/x509/x_x509.c ${MultiCompileDepends}

$(o)x_x509a$(oext) : $(vendorSrc)crypto/x509/x_x509a.c ${MultiCompileDepends}

$(o)pcy_cache$(oext) : $(vendorSrc)crypto/x509/pcy_cache.c ${MultiCompileDepends}

$(o)pcy_data$(oext) : $(vendorSrc)crypto/x509/pcy_data.c ${MultiCompileDepends}

$(o)pcy_lib$(oext) : $(vendorSrc)crypto/x509/pcy_lib.c ${MultiCompileDepends}

$(o)pcy_map$(oext) : $(vendorSrc)crypto/x509/pcy_map.c ${MultiCompileDepends}

$(o)pcy_node$(oext) : $(vendorSrc)crypto/x509/pcy_node.c ${MultiCompileDepends}

$(o)pcy_tree$(oext) : $(vendorSrc)crypto/x509/pcy_tree.c ${MultiCompileDepends}

$(o)v3_addr$(oext) : $(vendorSrc)crypto/x509/v3_addr.c ${MultiCompileDepends}

$(o)v3_admis$(oext) : $(vendorSrc)crypto/x509/v3_admis.c ${MultiCompileDepends}

$(o)v3_akid$(oext) : $(vendorSrc)crypto/x509/v3_akid.c ${MultiCompileDepends}

$(o)v3_akeya$(oext) : $(vendorSrc)crypto/x509/v3_akeya.c ${MultiCompileDepends}

$(o)v3_asid$(oext) : $(vendorSrc)crypto/x509/v3_asid.c ${MultiCompileDepends}

$(o)v3_bcons$(oext) : $(vendorSrc)crypto/x509/v3_bcons.c ${MultiCompileDepends}

$(o)v3_bitst$(oext) : $(vendorSrc)crypto/x509/v3_bitst.c ${MultiCompileDepends}

$(o)v3_conf$(oext) : $(vendorSrc)crypto/x509/v3_conf.c ${MultiCompileDepends}

$(o)v3_cpols$(oext) : $(vendorSrc)crypto/x509/v3_cpols.c ${MultiCompileDepends}

$(o)v3_crld$(oext) : $(vendorSrc)crypto/x509/v3_crld.c ${MultiCompileDepends}

$(o)v3_enum$(oext) : $(vendorSrc)crypto/x509/v3_enum.c ${MultiCompileDepends}

$(o)v3_extku$(oext) : $(vendorSrc)crypto/x509/v3_extku.c ${MultiCompileDepends}

$(o)v3_genn$(oext) : $(vendorSrc)crypto/x509/v3_genn.c ${MultiCompileDepends}

$(o)v3_ia5$(oext) : $(vendorSrc)crypto/x509/v3_ia5.c ${MultiCompileDepends}

$(o)v3_info$(oext) : $(vendorSrc)crypto/x509/v3_info.c ${MultiCompileDepends}

$(o)v3_int$(oext) : $(vendorSrc)crypto/x509/v3_int.c ${MultiCompileDepends}

$(o)v3_lib$(oext) : $(vendorSrc)crypto/x509/v3_lib.c ${MultiCompileDepends}

$(o)v3_ncons$(oext) : $(vendorSrc)crypto/x509/v3_ncons.c ${MultiCompileDepends}

$(o)v3_pci$(oext) : $(vendorSrc)crypto/x509/v3_pci.c ${MultiCompileDepends}

$(o)v3_pcia$(oext) : $(vendorSrc)crypto/x509/v3_pcia.c ${MultiCompileDepends}

$(o)v3_pcons$(oext) : $(vendorSrc)crypto/x509/v3_pcons.c ${MultiCompileDepends}

$(o)v3_pku$(oext) : $(vendorSrc)crypto/x509/v3_pku.c ${MultiCompileDepends}

$(o)v3_pmaps$(oext) : $(vendorSrc)crypto/x509/v3_pmaps.c ${MultiCompileDepends}

$(o)v3_prn$(oext) : $(vendorSrc)crypto/x509/v3_prn.c ${MultiCompileDepends}

$(o)v3_purp$(oext) : $(vendorSrc)crypto/x509/v3_purp.c ${MultiCompileDepends}

$(o)v3_skey$(oext) : $(vendorSrc)crypto/x509/v3_skid.c ${MultiCompileDepends}

$(o)v3_sxnet$(oext) : $(vendorSrc)crypto/x509/v3_sxnet.c ${MultiCompileDepends}

$(o)v3_tlsf$(oext) : $(vendorSrc)crypto/x509/v3_tlsf.c ${MultiCompileDepends}

$(o)v3_utl$(oext) : $(vendorSrc)crypto/x509/v3_utl.c ${MultiCompileDepends}

$(o)v3err$(oext) : $(vendorSrc)crypto/x509/v3err.c ${MultiCompileDepends}

#----------------------------------------------------------------------------------------
# SSL

$(o)bio_ssl$(oext) : $(vendorSrc)ssl/bio_ssl.c ${MultiCompileDepends}

$(o)d1_lib$(oext) : $(vendorSrc)ssl/d1_lib.c ${MultiCompileDepends}

$(o)d1_msg$(oext) : $(vendorSrc)ssl/d1_msg.c ${MultiCompileDepends}

$(o)d1_srtp$(oext) : $(vendorSrc)ssl/d1_srtp.c ${MultiCompileDepends}

$(o)methods$(oext) : $(vendorSrc)ssl/methods.c ${MultiCompileDepends}

$(o)pqueue$(oext) : $(vendorSrc)ssl/pqueue.c ${MultiCompileDepends}

$(o)rec_layer_d1$(oext) : $(vendorSrc)ssl/record/rec_layer_d1.c ${MultiCompileDepends}

$(o)rec_layer_s3$(oext) : $(vendorSrc)ssl/record/rec_layer_s3.c ${MultiCompileDepends}

$(o)s3_enc$(oext) : $(vendorSrc)ssl/s3_enc.c ${MultiCompileDepends}

$(o)s3_lib$(oext) : $(vendorSrc)ssl/s3_lib.c ${MultiCompileDepends}

$(o)s3_msg$(oext) : $(vendorSrc)ssl/s3_msg.c ${MultiCompileDepends}

$(o)ssl_asn1$(oext) : $(vendorSrc)ssl/ssl_asn1.c ${MultiCompileDepends}

$(o)ssl_cert$(oext) : $(vendorSrc)ssl/ssl_cert.c ${MultiCompileDepends}

$(o)ssl_ciph$(oext) : $(vendorSrc)ssl/ssl_ciph.c ${MultiCompileDepends}

$(o)ssl_conf$(oext) : $(vendorSrc)ssl/ssl_conf.c ${MultiCompileDepends}

$(o)ssl_err$(oext) : $(vendorSrc)ssl/ssl_err.c ${MultiCompileDepends}

$(o)ssl_init$(oext) : $(vendorSrc)ssl/ssl_init.c ${MultiCompileDepends}

$(o)ssl_lib$(oext) : $(vendorSrc)ssl/ssl_lib.c ${MultiCompileDepends}

$(o)ssl_mcnf$(oext) : $(vendorSrc)ssl/ssl_mcnf.c ${MultiCompileDepends}

$(o)ssl_rsa$(oext) : $(vendorSrc)ssl/ssl_rsa.c ${MultiCompileDepends}

$(o)ssl_sess$(oext) : $(vendorSrc)ssl/ssl_sess.c ${MultiCompileDepends}

$(o)ssl_stat$(oext) : $(vendorSrc)ssl/ssl_stat.c ${MultiCompileDepends}

$(o)ssl_txt$(oext) : $(vendorSrc)ssl/ssl_txt.c ${MultiCompileDepends}

$(o)ssl_utst$(oext) : $(vendorSrc)ssl/ssl_utst.c ${MultiCompileDepends}

$(o)extensions$(oext) : $(vendorSrc)ssl/statem/extensions.c ${MultiCompileDepends}

$(o)extensions_clnt$(oext) : $(vendorSrc)ssl/statem/extensions_clnt.c ${MultiCompileDepends}

$(o)extensions_cust$(oext) : $(vendorSrc)ssl/statem/extensions_cust.c ${MultiCompileDepends}

$(o)extensions_srvr$(oext) : $(vendorSrc)ssl/statem/extensions_srvr.c ${MultiCompileDepends}

$(o)statem$(oext) : $(vendorSrc)ssl/statem/statem.c ${MultiCompileDepends}

$(o)statem_clnt$(oext) : $(vendorSrc)ssl/statem/statem_clnt.c ${MultiCompileDepends}

$(o)statem_dtls$(oext) : $(vendorSrc)ssl/statem/statem_dtls.c ${MultiCompileDepends}

$(o)statem_lib$(oext) : $(vendorSrc)ssl/statem/statem_lib.c ${MultiCompileDepends}

$(o)statem_srvr$(oext) : $(vendorSrc)ssl/statem/statem_srvr.c ${MultiCompileDepends}

$(o)t1_enc$(oext) : $(vendorSrc)ssl/t1_enc.c ${MultiCompileDepends}

$(o)t1_lib$(oext) : $(vendorSrc)ssl/t1_lib.c ${MultiCompileDepends}

$(o)t1_trce$(oext) : $(vendorSrc)ssl/t1_trce.c ${MultiCompileDepends}

$(o)tls13_enc$(oext) : $(vendorSrc)ssl/tls13_enc.c ${MultiCompileDepends}

$(o)tls_srp$(oext) : $(vendorSrc)ssl/tls_srp.c ${MultiCompileDepends}

%include MultiCppCompileGo.mki
objs =% $(MultiCompileObjectList)

#LINUX/ANDROID ASSEMBLY GENERATION
#D:\bim0200\src\libsrc\openssl\vendor>perl ./crypto/x86_64cpuid.pl ./crypto/x86_64cpuid.s
#perl ./crypto/aes/asm/aesni-x86_64.pl ./crypto/aes/asm/aesni-x86_64.s
#perl ./crypto/modes/asm/aesni-gcm-x86_64.pl ./crypto/modes/asm/aesni-gcm-x86_64.s
#perl ./crypto/modes/asm/ghash-x86_64.pl ./crypto/modes/asm/ghash-x86_64.s
#WINDOWS ASSEMBLY GENERATION
#perl ./crypto/x86_64cpuid.pl masm ./crypto/x86_64cpuid.asm
#perl ./crypto/aes/asm/aesni-x86_64.pl masm ./crypto/aes/asm/aesni-x86_64.asm
#perl ./crypto/modes/asm/aesni-gcm-x86_64.pl masm ./crypto/modes/asm/aesni-gcm-x86_64.asm
#perl ./crypto/modes/asm/ghash-x86_64.pl masm ./crypto/modes/asm/ghash-x86_64.asm
# -- ASM ------------------------------------------------------------------------------------------
%if $(TARGET_PLATFORM) == "Linux"
    .s.o:
        |[== Building $@, ($=) ==]
        $(BENTLEY_LINUX_TOOLCHAIN_compile) -I$(vendorSrc) -c $< -o $@

    $(o)x86_64cpuid$(oext) : $(vendorSrc)crypto/x86_64cpuid.s ${MultiCompileDepends}

    $(o)aesni-x86_64$(oext) : $(vendorSrc)crypto/aes/asm/aesni-x86_64.s ${MultiCompileDepends}

    $(o)aesni-gcm-x86_64$(oext) : $(vendorSrc)crypto/modes/asm/aesni-gcm-x86_64.s ${MultiCompileDepends}

    $(o)ghash-x86_64$(oext) : $(vendorSrc)crypto/modes/asm/ghash-x86_64.s ${MultiCompileDepends}

    always:
      ~set objs $(objs) $(o)x86_64cpuid$(oext) $(o)aesni-x86_64$(oext) $(o)aesni-gcm-x86_64$(oext) $(o)ghash-x86_64$(oext)

#TODO: AndroidARM requires different files than Android,
#if we wish to support hw acceleration (or if there is a use case for it) on androidarm, work
#needs to be done here.
#%elif $(TARGET_PROCESSOR_ARCHITECTURE) == "AndroidARM64"
#    .S.o:
#        |[== Building $@, ($=) ==]
#        $(BENTLEY_ANDROID_TOOLCHAIN_compile) --target=aarch64-linux-android30 -I$(vendorSrc) -c $< -o $@

#    $(o)arm64cpuid$(oext) : $(vendorSrc)crypto/arm64cpuid.S ${MultiCompileDepends}

%elif $(TARGET_PLATFORM) == "Android" && $(TARGET_PROCESSOR_ARCHITECTURE) != "AndroidARM64"
    .s.o:
        |[== Building $@, ($=) ==]
        $(BENTLEY_ANDROID_TOOLCHAIN_compile) --target=x86_64-linux-android30 -I$(vendorSrc) -c $< -o $@

    $(o)x86_64cpuid$(oext) : $(vendorSrc)crypto/x86_64cpuid.s ${MultiCompileDepends}

    $(o)aesni-x86_64$(oext) : $(vendorSrc)crypto/aes/asm/aesni-x86_64.s ${MultiCompileDepends}

    $(o)aesni-gcm-x86_64$(oext) : $(vendorSrc)crypto/modes/asm/aesni-gcm-x86_64.s ${MultiCompileDepends}

    $(o)ghash-x86_64$(oext) : $(vendorSrc)crypto/modes/asm/ghash-x86_64.s ${MultiCompileDepends}

    always:
      ~set objs $(objs) $(o)x86_64cpuid$(oext) $(o)aesni-x86_64$(oext) $(o)aesni-gcm-x86_64$(oext) $(o)ghash-x86_64$(oext)

%elif $(TARGET_PLATFORM) == "Windows"
    .asm.obj:
        |[== Building $@, ($=) ==]
        $(BENTLEY_WIN32_TOOLCHAIN_MLCmd) -c -Fo$@ $<

    $(o)x86_64cpuid$(oext) : $(vendorSrc)crypto/x86_64cpuid.asm ${MultiCompileDepends}

    $(o)aesni-x86_64$(oext) : $(vendorSrc)crypto/aes/asm/aesni-x86_64.asm ${MultiCompileDepends}

    $(o)aesni-gcm-x86_64$(oext) : $(vendorSrc)crypto/modes/asm/aesni-gcm-x86_64.asm ${MultiCompileDepends}

    $(o)ghash-x86_64$(oext) : $(vendorSrc)crypto/modes/asm/ghash-x86_64.asm ${MultiCompileDepends}

    always:
      ~set objs $(objs) $(o)x86_64cpuid$(oext) $(o)aesni-x86_64$(oext) $(o)aesni-gcm-x86_64$(oext) $(o)ghash-x86_64$(oext)

%endif

#----------------------------------------------------------------------------------------


#----------------------------------------------------------------------------------------
#   Create the library
#----------------------------------------------------------------------------------------
DLM_NAME                    = BeOpenSSL
DLM_OBJECT_FILES            = $(objs)
DLM_EXPORT_OBJS             = $(DLM_OBJECT_FILES)
DLM_OBJECT_DEST             = $(o)
DLM_DEST                    = $(o)
DLM_EXPORT_DEST             = $(o)
DLM_NOENTRY                 = 1
DLM_NO_BENTLEY_LIB          = 1
DLM_CONTEXT_LOCATION        = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION    = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1

$(DLM_OBJECT_DEST)$(DLM_NAME).def : $(_MakeFilePath)BeOpenSSL.def
    $(LinkFirstDepToFirstTarget)

DLM_MODULE_DEF              = $(DLM_OBJECT_DEST)$(DLM_NAME).def

%if $(TARGET_PLATFORM) == "Windows"
    LINKER_LIBRARIES = ws2_32.lib
    LINKER_LIBRARIES + gdi32.lib
    LINKER_LIBRARIES + advapi32.lib
    LINKER_LIBRARIES + crypt32.lib
    LINKER_LIBRARIES + user32.lib
%endif

%include $(sharedMki)linkLibrary.mki
