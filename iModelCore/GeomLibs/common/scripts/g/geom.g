mdlVec_scale\I\I=bsiDPoint3d_scale
mdlVec_addPoint\I\I=bsiDPoint3d_addDPoint3dDPoint3d
mdlVec_dotProduct\I\I=bsiDPoint3d_dotProduct
mdlVec_computeNormal\I\I=bsiDPoint3d_computeNormal
mdlVec_normalize\I=bsiDPoint3d_normalizeInPlace
mdlVec_crossProduct\I=bsiDPoint3d_crossProduct
mdlVec_magnitude\I=bsiDPoint3d_magnitude
mdlVec_subtractPoint\I=bsiDPoint3d_subtractDPoint3dDPoint3d
mdlVec_distance\I=bsiDPoint3d_distance
mdlVec_projectPoint\I=bsiDPoint3d_addScaledDPoint3d
mdlVec_addPointArray\I=bsiDPoint3d_addDPoint3dArray
mdlVec_subtractPointArray\I=bsiDPoint3d_subtractDPoint3dArray
mdlMath_atan2\I=bsiTrig_atan2
\LbisectPoints\W(<u>,<u>,<u>)\W\;=bsiDPoint3d_interpolate ($1, $2, 0.5, $3)\;
\LmdlRMatrix_fromAngle\W(<u>,<u>)\W\;=bsiRotMatrix_initFromAxisAndRotationAngle ($1, 2, $2)\;
\LmdlRMatrix_rotatePointArray\W(<u>,<u>,<u>)\W\;=bsiRotMatrix_multiplyDPoint3dArray ($2, $1, $1, $3)\;
\LmdlRMatrix_unrotatePointArray\W(<u>,<u>,<u>)\W\;=bsiRotMatrix_multiplyTransposeDPoint3dArray ($2, $1, $1, $3)\;
\LmdlRMatrix_rotatePoint\W(<u>,<u>)\W\;=bsiRotMatrix_multiplyDPoint3d ($2, $1)\;
\LmdlRMatrix_unrotatePoint\W(<u>,<u>)\W\;=bsiRotMatrix_multiplyTransposeDPoint3d ($2, $1)\;
\LmdlTMatrix_getTranslation\W(<u>,<u>)\W\;=bsiTransform_getTranslation ($2, $1)\;
mdlRMatrix_multiply\I=bsiRotMatrix_multiplyRotMatrixRotMatrix
mdlRMatrix_fromRowVectors\I=bsiRotMatrix_initFromRowVectors
mdlRMatrix_fromColumnVectors\I=bsiRotMatrix_initFromColumnVectors
\LmdlRMatrix_getRowVector\W(<u>,<u>,<u>)=bsiRotMatrix_getRow ($2, $1, $3)
\LmdlRMatrix_getColumnVector\W(<u>,<u>,<u>)=bsiRotMatrix_getColumn ($2, $1, $3)
\LmdlTMatrix_isIdentity\I=bsiTransform_isIdentity
\LmdlTMatrix_transformPointArray\W(<u>,<u>,<u>)\W\;=bsiTransform_multiplyDPoint3dArray ($2, $1, $1, $3)\;
\LmdlTMatrix_transformPoint\W(<u>,<u>)\W\;=bsiTransform_multiplyDPoint3d ($2, $1, $1)\;
\ImdlTMatrix_setTranslation\I=bsiTransform_setTranslation
mdlRMatrix_multiplyByTMatrix\I=bsiRotMatrix_multiplyTransformRotMatrix
mdlMath_solveLinearSystem\I=bsiLinAlg_solveLinearGaussPartialPivot
mdlRMatrix_invert\I=bsiRotMatrix_transpose
mdlTMatrix_translate\I=bsiTransform_translateInLocalCoordinates
mdlTMatrix_rotateByRMatrix\I=bsiTransform_multiplyTransformRotMatrix
mdlTMatrix_getIdentity\I=bsiTransform_initIdentity
\ImdlTMatrix_isIdentity\I=bsiTransform_isIdentity
mdlRMatrix_getIdentity\I=bsiRotMatrix_initIdentity
mdlRMatrix_rotate\I=bsiRotMatrix_rotateByPrincipleAngles
\ImdlRMatrix_fromTMatrix\I=bsiRotMatrix_initFromTransform
\ImdlVec_pointEqual\I=bsiDPoint3d_pointEqual
\Ifc_1\I=1.0
\Ifc_2\I=2.0
\Ifc_zero\I=0.0
\Ifc_onehalf\I=0.5
?=?
!mdlCnv_roundDoubleToLong