/*--------------------------------------------------------------------------------------+
|
|     $Source: geom/src/memory/jmdl_iarray.fdf $
|    $RCSfile: copyright.txt,v $
|   $Revision: 1.1 $
|       $Date: 2006/08/02 18:07:13 $
|     $Author: DavidAssaf $
|
|  $Copyright: (c) 2014 Bentley Systems, Incorporated. All rights reserved. $
|
+--------------------------------------------------------------------------------------*/

/* DO NOT EDIT!  THIS FILE IS GENERATED. */

#pragma once
BEGIN_BENTLEY_GEOMETRY_NAMESPACE

/**
* Initialize a the rubber array.  Prior contents destroyed.
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP void     jmdlVArrayInt_init
(
EmbeddedIntArray  *pInstance
);

/**
* @see
* @return
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP EmbeddedIntArray *jmdlVArrayInt_new
(
);

/**
* @param pHeader
* @see
* @return EmbeddedIntArray
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP EmbeddedIntArray *jmdlVArrayInt_free
(
EmbeddedIntArray *pHeader
);

/**
* Clear the array and release all associated memory.
* @bsimethod                                                    BentleySystems  12/98
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP void     jmdlVArrayInt_releaseMem
(
EmbeddedIntArray *pInstance
);

/**
* @param pHeader
* @see
* @return int
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int jmdlVArrayInt_getCount
(
const EmbeddedIntArray *pHeader
);

/**
* @param pHeader
* @see
* @return int
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int jmdlVArrayInt_getFullRowCount
(
const EmbeddedIntArray *pHeader,
int   rowDimension
);

/**
* @param pHeader
* @param iRow
* @see
* @return int
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int *jmdlVArrayInt_getRowAddress
(
EmbeddedIntArray *pHeader,
int         iRow,
int         rowDimension
);

/**
* @param pHeader
* @see
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP void jmdlVArrayInt_clear
(
EmbeddedIntArray *pHeader
);

/**
* @param void
* @see
* @return EmbeddedIntArray
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP EmbeddedIntArray *jmdlVArrayInt_grab
(
void
);

/**
* Return a pointer to an empty int array.  If a user array is provided,
*    just empty and return if.  If not, grab one.
* Usage pattern is
*<pre>
*   EmbeddedIntArray  *pArray = grabOrClear (pUserArray);
*   ....
*   dropIfGrabbed (pArray, pUserArray);
*</pre>
* That is, grabOrClear and dropIfGrabbed are replacements for grab and
* drop, for the case when an array may have been provided from elsewhere.
* @return pointer to the input array or a grabbed array.
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP EmbeddedIntArray *jmdlVArrayInt_grabOrClear
(
EmbeddedIntArray  *pUserArray
);

/**
* Partner to grabOrClear.
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP void jmdlVArrayInt_dropIfGrabbed
(
EmbeddedIntArray  *pArray,
EmbeddedIntArray  *pUserArray
);

/**
* @param pHeader
* @see
* @return EmbeddedIntArray
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP EmbeddedIntArray *jmdlVArrayInt_drop
(
EmbeddedIntArray * pHeader
);

/**
* @param pHeader
* @param int        n
* @see
* @return int
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int jmdlVArrayInt_extend
(
EmbeddedIntArray *pHeader,
int         n
);

/**
* @param pHeader IN OUT  header of array receiveing points
* @param pvbArray IN      array of items to add
* @param n IN      number of items to add
* @see
* @return int
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int jmdlVArrayInt_addArray
(
EmbeddedIntArray            *pHeader,
const int                   *pvbArray,
      int                   n
);

/**
* @param pHeader IN OUT  header of array receiveing points
* @param value IN      value to apply
* @param index IN      index where the value is to be replaced
* @see
* @return SUCCESS if
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP StatusInt jmdlVArrayInt_set
(
EmbeddedIntArray            *pHeader,
int                 value,
int                 index
);

/**
* @param pHeader IN OUT  header of array receiveing points
* @param value IN      value to apply
* @param count IN      -1 to set all current entries, n to set to this size
* @see
* @return SUCCESS if
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP StatusInt jmdlVArrayInt_setConstant
(
EmbeddedIntArray            *pHeader,
int                 value,
int                 count
);

/**
* @param pvbArray
* @param nGot
* @param pHeader
* @param int                i0
* @param int                nreq
* @see
* @return int
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int jmdlVArrayInt_getArray
(
int                 *pvbArray,
int                 *nGot,
const EmbeddedIntArray    *pHeader,
int                 i0,
int                 nreq
);

/**
* @param pHeader IN OUT  array from which to get block
* @param n IN      number of entries requested
* @see
* @return int
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int *jmdlVArrayInt_getBlock   /* OUT     temporary pointer to block, NULL on error */
(
EmbeddedIntArray     *pHeader,
int             n
);

/**
* @param pHeader IN OUT  array from which to get block
* @param n IN      number of entries requested
* @see
* @return int
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int* jmdlVArrayInt_getPtr
(
EmbeddedIntArray *pHeader,
      int        index
);

/**
* @param pHeader
* @param       int        index
* @see
* @return const
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP const int* jmdlVArrayInt_getConstPtr
(
const EmbeddedIntArray *pHeader,
      int        index
);

/**
* @param pBuffer OUT     buffer containing one item
* @param pHeader IN      array header
* @see
* @return SUCCESS if
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP StatusInt jmdlVArrayInt_pop
(
int     *pBuffer,
    EmbeddedIntArray    *pHeader
);

/**
* @param pBuffer OUT     buffer containing one item
* @param pHeader IN      array header
* @see
* @return true if an item was popped
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP bool     boolean_jmdlVArrayInt_pop
(
EmbeddedIntArray  *pHeader,
        int *pInt
);

/**
* @param pHeader IN      array to access
* @param pInt OUT     integer from array
* @param index IN      item id within array
* @see
* @return ERROR if index out of bounds
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP StatusInt jmdlVArrayInt_getInt
(

const EmbeddedIntArray    *pHeader,
      int           *pInt,
      int           index
);

/**
* Add one int to the end of the array.
* @param pHeader
* @param int            value
* @see
* @return SUCCESS if
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP StatusInt jmdlVArrayInt_addInt
(
EmbeddedIntArray        *pHeader,
int             value
);

/**
* Add one int to the end of the array.
* @param value0 IN      first int to add
* @param value1 IN      second int to add
* @see
* @return SUCCESS if
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP StatusInt jmdlVArrayInt_add2Int
(
EmbeddedIntArray        *pHeader,
int             value0,
int             value1
);

/**
* Add one int to the end of the array.
* @param value0 IN      first int to add
* @param value1 IN      second int to add
* @param value2 IN      third int to add
* @see
* @return SUCCESS if
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP StatusInt jmdlVArrayInt_add3Int
(
EmbeddedIntArray        *pHeader,
int             value0,
int             value1,
int             value2
);

/**
* @param pDestArray array where shuffled data is placed
* @param pSourceArray original array
* @param pIndexArray index information
* @see
* @return SUCCESS if
* @bsimethod                                                    BentleySystems  12/97
+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP StatusInt jmdlVArrayInt_shuffleArray
(
        EmbeddedDPoint3dArray     *pDestArray,    /* array where shuffled data is placed */
const   EmbeddedDPoint3dArray     *pSourceArray,  /* original array */
const   EmbeddedIntArray            *pIndexArray    /* index information */
);

/*---------------------------------------------------------------------------------**//**
* Create a new cluster index for a union-find algorithm.
*
* @param    pInstance IN      int array being used for union find.
* @return
* @bsimethod                                                    BentleySystems  06/98
+---------------+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int      jmdlVArrayInt_newClusterIndex
(
EmbeddedIntArray  *pInstance
);

/*---------------------------------------------------------------------------------**//**
* Search upwards in the union-find structure for a parent cluster.
* Fixup indices along the way!!!   The parent index always is a root (i.e. is its own parent)
* @param    pInstance IN OUT  int array being used for union find.
* @param cluster0 IN      first cluster id
* @return the merged cluster index.
* @bsimethod                                                    BentleySystems  06/98
+---------------+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int  jmdlVArrayInt_getMergedClusterIndexExt
(
EmbeddedIntArray  *pInstance,
int         cluster,
int         depth
);

/*---------------------------------------------------------------------------------**//**
* Search upwards in the union-find structure for a parent cluster.
* Fixup indices along the way!!!   The parent index always is a root (i.e. is its own parent)
* @param    pInstance IN OUT  int array being used for union find.
* @param cluster0 IN      first cluster id
* @return the merged cluster index.
* @bsimethod                                                    BentleySystems  06/98
+---------------+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int  jmdlVArrayInt_getMergedClusterIndex
(
EmbeddedIntArray  *pInstance,
int         cluster
);

/*---------------------------------------------------------------------------------**//**
* @param    pInstance IN OUT  int array being used for union find.
* @param cluster0 IN      first cluster id
* @param cluster1 IN      second cluster id
* @return the merged cluster index (may be different from both!!)
* @bsimethod                                                    BentleySystems  06/98
+---------------+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP int      jmdlVArrayInt_mergeClusters
(
EmbeddedIntArray  *pInstance,
int         cluster0,
int         cluster1
);

/*---------------------------------------------------------------------------------**//**
* Shift the last member of the array into the indicated position and decrement the array size.
* This is a fast way to delete from the array when order changes are acceptable.
* @param    pInstance IN OUT  int array being manipulated
* @param index IN      index of item being replaced by the final item in the array.
*                   If index is -1 or final entry, it is just popped.
*                   If index is otherwise out of bounds, no change.
* @bsimethod                                                    BentleySystems  06/98
+---------------+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP void     jmdlVArrayInt_replaceByLast
(
EmbeddedIntArray  *pInstance,
int         index
);

/*---------------------------------------------------------------------------------**//**
* Replace all values that match oldValue.
* @param oldValue IN      old value to be replaced.
* @param newvalue IN      replacement value.
* @bsimethod                                                    BentleySystems  06/98
+---------------+---------------+---------------+---------------+---------------+------*/
Public GEOMDLLIMPEXP void     jmdlVArrayInt_replaceMatched
(
EmbeddedIntArray  *pInstance,
int         oldValue,
int         newValue
);

END_BENTLEY_GEOMETRY_NAMESPACE
