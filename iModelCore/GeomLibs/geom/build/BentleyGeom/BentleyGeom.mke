#---------------------------------------------------------------------------------------------
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#  See LICENSE.md in the repository root for full copyright notice.
#--------------------------------------------------------------------------------------*/
DISABLE_COMPILER_ANALYZE_CHECK_UNINITIALIZED_MEMORY=1
BUILD_WITH_C17=1

%include mdl.mki
%include $(_MakeFileDir)../../../common/inc/geomlibsdev.mki

# Precompile header options
CompileOptionsMki   = $(_MakeFilePath)BentleyGeom.mki
%include $(CompileOptionsMki)

buildSubDir     = geom_dll

Wp64            = 1
o               = $(PartBuildDir)

#-------------------------------------------------
# Make Directories
#-------------------------------------------------
always:
    !~@mkdir $(o)

dirToSearch = $(geomSrcRegions)
%include cincapnd.mki

%ifdef BENTLEY_GEOM_SMALL
nameToDefine = BENTLEYGEOM_NO_PTRMETHODS
%include cdefapnd.mki

nameToDefine = MinimalRefMethods
%include cdefapnd.mki
%endif

%ifdef GEOMLIBS_ENABLE_ITERATOR_WARNINGS
CCompOpts + -we4238 
%endif

# This was recently introduced to clang.
# Ignore unused but set variables for GeomLibs. Other compilers (gcc) already are ignoring this warning
%if defined (BSI)
    IsClang13_0_0_OrGreater = $[@readstdout "$(BBPYTHONCMD) $(SrcRoot)bsicommon/build/DetectClangVersion.py 1300.0.00.0"]
%else
    IsClang13_0_0_OrGreater = $[@readstdout "$(BBPYTHONCMD) $(_CurrentFilePath)/../../../../../build/PublicSDK/DetectClangVersion.py 1300.0.00.0"]
%endif
%if $(IsClang13_0_0_OrGreater) == "YES"
    LLVMCommonCompOpts + -Wno-unused-but-set-variable
%endif

#--------------------------------------------------------------------------------
#  Bring our precompiled header up-to-date.  After including PreCompileHeader.mki
#  $(UsePrecompiledHeaderOptions) will contain the /Yu and /Fp options that we
#  need to consume the .pch.
#----------------------------------------------------------------------
PchCompiland = $(_MakeFilePath)bsibasegeomPCH.cpp
PchOutputDir = $(o)
%include $(SharedMki)PreCompileHeader.mki

CCPchOpts = $(UsePrecompiledHeaderOptions)
%include MultiCppCompileRule.mki
CPchOpts = $(CCPchOpts)

#-----------------------------------------------------------------------
# Common dependency lists
#-----------------------------------------------------------------------
OUT_DIR = $(o)
OUT_EXT = $(oExt)
OTHER_DEPENDENCIES = \
    $(geomSrcPubGeom)msgeomstructs.hpp  \
    $(geomSrcPubGeom)msgeomstructs.h    \
    $(geomSrcPubGeom)../Vu/VuApi.h

FileTypeControl = $(FileTypeControlCPP)

# list of files to build
%ifdef BENTLEY_GEOM_SMALL
%include $(geomBuildInc)GeomTargetsSmall.mki
%else
%include $(geomBuildInc)GeomTargets.mki
%endif

$(o)BentleyGeom_init$(oExt)   : $(_MakeFilePath)BentleyGeom_init.cpp ${MultiCompileDepends}

%include MultiCppCompileGo.mki
#-----------------------------------------------------------------------
# Set up to indicate that we are rights-compliant.
#-----------------------------------------------------------------------
rightsCompliantAppsFile     = $(_MakeFilePath)rightscompliant.txt
nonRightsCompliantAppsFile  = $(_MakeFilePath)nonrightscompliant.txt
rightsNeutralFile           = $(_MakeFilePath)rightsNeutralLibraries.txt

#-----------------------------------------------------------------------
# link
#-----------------------------------------------------------------------
DLM_NAME            = iTwinGeom
DLM_OBJECT_FILES    = $(MultiCompileObjectList)
DLM_EXPORT_OBJS     = $(DLM_OBJECT_FILES)
DLM_OBJECT_DEST     = $(o)
DLM_DEST            = $(o)
DLM_EXPORT_DEST     = $(o)
DLM_OBJECT_PCH      = $(o)bsibasegeompch.obj
DLM_NO_BENTLEY_LIB  = 1

DLM_CREATE_LIB_CONTEXT_LINK = 1
DLM_NOENTRY         = 1

LINKER_LIBRARIES            + $(BuildContext)SubParts/Libs/$(stlibprefix)iTwinJsonCpp$(stlibext)
LINKER_LIBRARIES            + $(ContextSubpartsLibs)iTwinBentley$(stlibext)

%include $(sharedMki)linkLibrary.mki
