#---------------------------------------------------------------------------------------------
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#  See LICENSE.md in the repository root for full copyright notice.
#---------------------------------------------------------------------------------------------
VCRuntimeCheckOption = -RTCsu

%include mdl.mki

baseDir = $(_MakeFilePath)
SQLiteDir = $(baseDir)SQLite/
SubpartLibs = $(BuildContext)SubParts/Libs/
DEBUG_INFO_IN_OBJ=
o = $(PartBuildDir)

appName = sqlite3
CCompPDBName = $(appName)

always:
    !~@mkdir $(o)

CCompFpOpts=precise

cDefs + -DCURL_STATICLIB=1 -DSQLITE_OMIT_CODEC=1  -DSQLITE_SHELL_IS_UTF8=1 -DSQLITE_ENABLE_COLUMN_METADATA=1

cDefs + -DSQLITE_DEFAULT_FOREIGN_KEYS=1 -DSQLITE_ENABLE_SESSION=1 -DSQLITE_ENABLE_RTREE=1 -DSQLITE_ENABLE_PREUPDATE_HOOK=1 -DSQLITE_ENABLE_ZIPVFS=1

cDefs + -DSQLITE_USE_URI=1 -DSQLITE_ENABLE_NULL_TRIM=1 -DSQLITE_MAX_VARIABLE_NUMBER=20000 -DSQLITE_MAX_EXPR_DEPTH=2000 -DSQLITE_DEFAULT_CACHE_SIZE=8000

cDefs + -DSQLITE_ENABLE_FTS5=1 -DSQLITE_ENABLE_JSON1=1 -DSQLITE_ENABLE_MATH_FUNCTIONS=1 -DSQLITE_MAX_LENGTH=2147483647 -DSESSIONS_STRM_CHUNK_SIZE=65536

cDefs + -DSQLITE_DEBUG=1 -DSQLITE_ENABLE_IOTRACE=1 -DSQLITE_ENABLE_NORMALIZE=1 -DSQLITE_ENABLE_DBSTAT_VTAB=1

cDefs + -DSQLITE_INTROSPECTION_PRAGMAS -DSQLITE_ENABLE_STMTVTAB=1 -DSQLITE_ENABLE_BYTECODE_VTAB=1

%if $(TARGET_PLATFORM)=="Windows"
    cDefs + -DSQLITE_API=__declspec(dllexport)
%else
    cDefs + -DSQLITE_API=__attribute__((visibility ("default"))
%endif

# Third-party section of this library.
%include $(SrcRoot)bsicommon/sharedmki/PushThirdPartyIgnores.mki

MultiCompileDepends =$(_MakeFileSpec)
%include MultiCppCompileRule.mki

bcvheaders = $(SQLiteDir)bcvutil.h $(SQLiteDir)bcvmodule.h $(SQLiteDir)bcv_int.h

$(o)simplexml$(oext): $(SQLiteDir)simplexml.c ${MultiCompileDepends} ${bcvheaders}

$(o)bcvutil$(oext): $(SQLiteDir)bcvutil.c ${MultiCompileDepends} ${bcvheaders}

$(o)bcvmodule$(oext) : $(SQLiteDir)bcvmodule.c ${MultiCompileDepends} ${bcvheaders} ${bcvheaders}

$(o)blockcachevfs$(oext): $(SQLiteDir)blockcachevfs.c ${MultiCompileDepends} ${bcvheaders}

$(o)sqlite3$(oext): $(SQLiteDir)sqlite3.c ${MultiCompileDepends} ${bcvheaders}


%include MultiCppCompileGo.mki

DLM_OBJECT_FILES    = $(MultiCompileObjectList)
DLM_NAME            = $(appName)
DLM_DEST            = $(o)
DLM_EXPORT_DEST     = $(o)
DLM_NOINITFUNC      = 1
DLM_NOENTRY         = 1
DLM_OBJECT_DEST     = $(o))

%if $(TARGET_PLATFORM)=="Windows"
           LINKER_LIBRARIES + wsock32.lib ws2_32.lib Advapi32.lib Wldap32.lib Crypt32.lib
        BENTLEY_WIN32_LINK_CommonOptions + -Ignore:4099
%endif

LINKER_LIBRARIES + $(ContextSubPartsStaticLibs)$(stlibprefix)iTwinCurl$(stlibext)
LINKER_LIBRARIES + $(ContextSubPartsStaticLibs)$(stlibprefix)iTwinOpenSSL$(stlibext)
LINKER_LIBRARIES + $(CLibs)
LINKER_LIBRARIES + $(ContextSubPartsStaticLibs)$(stlibprefix)BeZlib$(stlibext)


# We support shared or static linking.
%include $(sharedMki)linkLibrary.mki
