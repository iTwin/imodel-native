#----------------------------------------------------------------------------------------
#   Tests that are ignored on purpose
#----------------------------------------------------------------------------------------
BeFileNameTests.BeFileNameUNCPathTest   # Testable UNC path is required to be available globally.
BeFileNameTests.UNCPrefixedTest         # Testable UNC path is required to be available globally.
BeFileNameTests.UNCReadOnlyTest         # Testable UNC path is required to be available globally.

#----------------------------------------------------------------------------------------
#   Tests that need attention
#----------------------------------------------------------------------------------------
BeTextFileTests.OpenToWrite                     # WIP
BeTextFileTests.CountLinesInFile                # WIP

DoubleFormatterTest.ReplaceDecimalSeparator     # Defect 570798. Non-default decimal Separator is not considered.

CRuntimeTests.posixregex # runs only on Android, and it crashes there in regfree, because preg contains garbage $1 = {buffer = 0x0, allocated = 0, used = 0, syntax = 242396, fastmap = 0x0, translate = 0x2 <Address 0x2 out of bounds>

UniqueTasksHolderTests.*

DirectoryObserverTests.ModificationInObservedDirectory_UIThread
    # WinX64, DgnDb0601, NDEBUG, PRG
    # <crash, no output provided>

#TFS 633328: randomly Crash on iosArm64
DirectoryObserverTests.*

UniqueTaskHolderTests.GetRunningTask_CalledTwiceWithThenTasks_ReturnsValueToBothThens
    # bim0200dev, x86, DEBUG, random
    # [ RUN      ] UniqueTaskHolderTests.GetRunningTask_CalledTwiceWithThenTasks_ReturnsValueToBothThens
    # F:\Bim0200Dev\src-staging\Bentley\Tests\Published\Tasks\UniqueTaskHolderTests.cpp(102): error:       Expected: 2
    # To be equal to: ++i
    #       Which is: 1
    # F:\Bim0200Dev\src-staging\Bentley\Tests\Published\Tasks\UniqueTaskHolderTests.cpp(95): error:       Expected: 1
    # To be equal to: ++i
    #       Which is: 2
    # [  FAILED  ] UniqueTaskHolderTests.GetRunningTask_CalledTwiceWithThenTasks_ReturnsValueToBothThens (36 ms)

BeTimeUtilitiesTests.AdjustUnixMillisForLocalTime
    # bim0200dev, x64 & x86, DEBUG, after merge
    # [ RUN      ] BeTimeUtilitiesTests.AdjustUnixMillisForLocalTime
    # F:\Bim0200Dev\src-staging\Bentley\Tests\Published\BeTimeUtilities_test.cpp(140): error:       Expected: expectedMillis
    #       Which is: 1095361199000
    # To be equal to: actualMillis
    #       Which is: 1095364799000
    # [  FAILED  ] BeTimeUtilitiesTests.AdjustUnixMillisForLocalTime (0 ms)

LimitingTaskQueueTests.Push_LimitSetToZeroAndTwoTasks_RunsTasksWhenPushed
    # bim0200dev, x64, DEBUG, random hang
    # Main Thread:
    #   ntdll.dll!NtWaitForAlertByThreadId ()      
    #   ntdll.dll!RtlSleepConditionVariableSRW()   
    #   KernelBase.dll!SleepConditionVariableSRW () 
    #   msvcp140.dll!Concurrency::details::stl_condition_variable_win7::wait(Concurrency::details::stl_critical_section_interface *) Line 210   
    #   msvcp140.dll!do_wait(_Cnd_internal_imp_t *, _Mtx_internal_imp_t *, const xtime *) Line 77    
    #   BentleyB02.dll!std::_Cnd_waitX(_Cnd_internal_imp_t *, _Mtx_internal_imp_t *) Line 95      
    #   BentleyB02.dll!std::condition_variable_any::wait<std::unique_lock<std::recursive_mutex> >(std::unique_lock<std::recursive_mutex> &) Line 59       
    #   BentleyB02.dll!BentleyB0200::BeConditionVariable::InfiniteWait(BentleyB0200::BeMutexHolder &) Line 178    
    #   BentleyB02.dll!BentleyB0200::BeConditionVariable::ProtectedWaitOnCondition(BentleyB0200::BeMutexHolder &, BentleyB0200::IConditionVariablePredicate *, unsigned int) Line 197   
    #   BentleyB02.dll!BentleyB0200::BeConditionVariable::WaitOnCondition(BentleyB0200::IConditionVariablePredicate *, unsigned int) Line 182    
    #   BentleyB02.dll!BentleyB0200::Tasks::AsyncTask::Wait() Line 345       
    #   BentleyTest.exe!LimitingTaskQueueTests_Push_LimitSetToZeroAndTwoTasks_RunsTasksWhenPushed_Test::TestBody() Line 51 
    #   BentleyTest.exe!testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test,void>(testing::Test *, void(testing::Test::*)(), const char *) Line 2434      
    #   BentleyTest.exe!testing::internal::HandleExceptionsInMethodIfSupported<testing::Test,void>(testing::Test *, void(testing::Test::*)(), const char *) Line 2485      
    #   BentleyTest.exe!testing::Test::Run() Line 2528     
