#---------------------------------------------------------------------------------------------
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#  See LICENSE.md in the repository root for full copyright notice.
#---------------------------------------------------------------------------------------------
BUILD_WITH_C20=1
%include mdl.mki
%include $(_MakeFilePath)mki/Units.mki

baseDir             = $(_MakeFilePath)
programName         = iTwinUnits
srcDir              = $(baseDir)src/
formatSrcDir        = $(baseDir)src/Formatting/
formatHeaderDir     = $(baseDir)PublicAPI/Formatting/
o                   = $(PartBuildDir)

#----------------------------------------------------------------------
# Create output directories
#----------------------------------------------------------------------
always:
    !~@mkdir $(o)

# include the compile options mki file.
CompileOptionsMki   = $(baseDir)mki/UnitsCompileOpts.mki
%include $(CompileOptionsMki)

#--------------------------------------------------------------------------------
#  Bring our precompiled header up-to-date.  After including PreCompileHeader.mki
#  $(UsePrecompiledHeaderOptions) will contain the /Yu and /Fp options that we
#  need to consume the .pch.
#----------------------------------------------------------------------
PchCompiland        = $(unitsSrc)src/UnitsPCH.cpp
PchOutputDir        = $(o)
%include $(SharedMki)PreCompileHeader.mki

CCPchOpts           = $(UsePrecompiledHeaderOptions)
CPchOpts            = $(UsePrecompiledHeaderOptions)

#----------------------------------------------------------------------
# Prepare to multi-compile using a uniform set of dependency blocks.
# Note that you CANNOT change compiler options for just some of the
# below compilands. The entire set of compilands must be content with
# uniform treatment for multi-compilation to work.
#----------------------------------------------------------------------
MultiCompileDepends = $(_MakeFileSpec)
%include MultiCppCompileRule.mki

# Units Compilands
$(o)UnitRegistry$(oext)             : $(srcDir)UnitRegistry.cpp ${MultiCompileDepends}

$(o)UnitTypes$(oext)                : $(srcDir)UnitTypes.cpp ${MultiCompileDepends}

$(o)SymbolicExpression$(oext)       : $(srcDir)SymbolicExpression.cpp ${MultiCompileDepends}

$(o)Quantity$(oext)                 : $(srcDir)Quantity.cpp ${MultiCompileDepends}

$(o)UnitNameMappings$(oext)         : $(srcDir)UnitNameMappings.cpp ${MultiCompileDepends}

# Formatting Compilands

$(o)CompositeValueSpec$(oext) : $(formatSrcDir)CompositeValueSpec.cpp $(formatHeaderDir)FormattingApi.h ${MultiCompileDepends}

$(o)FormatParsing$(oext)  : $(formatSrcDir)FormatParsing.cpp $(formatHeaderDir)FormattingApi.h ${MultiCompileDepends}

$(o)FormatUtils$(oext)    : $(formatSrcDir)FormatUtils.cpp $(formatHeaderDir)FormattingApi.h ${MultiCompileDepends}

$(o)Format$(oext)     : $(formatSrcDir)Format.cpp $(formatHeaderDir)FormattingApi.h ${MultiCompileDepends}

$(o)NumericFormatSpec$(oext)  : $(formatSrcDir)NumericFormatSpec.cpp $(formatHeaderDir)FormattingApi.h ${MultiCompileDepends}

$(o)NumericFormatUtils$(oext)  : $(formatSrcDir)NumericFormatUtils.cpp $(formatHeaderDir)FormattingApi.h ${MultiCompileDepends}

$(o)FormatMappings$(oext)   : $(formatSrcDir)FormatMappings.cpp $(formatHeaderDir)FormattingApi.h ${MultiCompileDepends}

%include MultiCppCompileGo.mki
cppObjects=%$(MultiCompileObjectList)
CCPchOpts =
CPchOpts =

#----------------------------------------------------------------------
#   dependencies of the subsystem.
#----------------------------------------------------------------------
DLM_NAME                    = iTwinUnits
DLM_DEST                    = $(o)
DLM_OBJECT_DEST             = $(o)
DLM_OBJECT_FILES            = $(cppObjects)
DLM_OBJECT_PCH              = $(o)UnitsPCH$(oext)
DLM_EXPORT_OBJS             = $(cppObjects)
DLM_EXPORT_DEST             = $(o)
DLM_NOINITFUNC              = 1
DLM_NOENTRY                 = 1
DLM_CONTEXT_LOCATION        = $(BuildContext)Delivery/
DLM_LIB_CONTEXT_LOCATION    = $(BuildContext)Delivery/
DLM_CREATE_LIB_CONTEXT_LINK = 1
DLM_NO_BENTLEY_LIB          = 1
LINKER_LIBRARIES           + $(BuildContext)SubParts/Libs/$(libprefix)iTwinJsonCpp$(stlibext)
LINKER_LIBRARIES           + $(BuildContext)SubParts/Libs/$(libprefix)iTwinBentley$(stlibext)

%include $(sharedMki)linkLibrary.mki
