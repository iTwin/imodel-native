#--------------------------------------------------------------------------------------
#
#     $Source: GTestPolicyNoUnicode.mki $
#
#  $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------
%if defined (__GTestPolicy_mki__)
    %return
%endif

__GTestPolicy_mki__  = 1

%ifdef BBPW
    BUILD_TOOLSET = VC10
%endif

%if defined(DMS_BUILD_USING_VS2008) # ugly workaround for butil_static, can be removed when PTD/DGNP move to VS2010
    $(BUILD_TOOLSET) = VC9
%endif

%include $(SrcBsiCommon)sharedmki/InternalSystemPolicy.mki
%include $(SharedMki)DefinePublicApiIncludes.mki

# src/target dirs

SrcUtil         = $(SrcRoot)util/

build           = $(OutUtil)lib/build/
o               = $(build)obj/$(programName)/
delivery        = $(build)delivery/
OutLib          = $(delivery)library/
OutBin          = $(delivery)bin/

always:
    ~mkdir $(o)
    ~mkdir $(OutBin)
    ~mkdir $(OutLib)

# Context locations

#BuildContext        = ${OutBuildContexts}/gtest/
ContextDeliveryDir  = $(BuildContext)Delivery/

SubPartsDir         = $(BuildContext)SubParts/
SubPartsLibDir      = $(SubPartsDir)libs/
SubPartsDllDir      = $(SubPartsDir)Assemblies/

GUnitTestDir        = $(SubPartsDir)google_gtest/

PublicApiDir        = $(BuildContext)PublicAPI/

#-----------------------------------------------------------------------
#   DEBUG switches
#-----------------------------------------------------------------------
%ifdef DEBUG
    nameToDefine = DEBUG
%else
    nameToDefine = NDEBUG
%endif

%include cdefapnd.mki

# ** We don't want to be calling upon any functionality that is available only post Windows XP **
# ** These will be passed through as #defines to the compiler by winntmdl.mki **
# _WIN32_WINNT=0x0501
# MSB-_WIN32_WINNT=$(_WIN32_WINNT)
# WINVER=0x0501
# MSB-WINVER=$(WINVER)
# _WIN32_IE=0x0501
# MSB-_WIN32_IE=$(_WIN32_IE)

#-----------------------------------------------------------------------
# Enable the output of line numbers to the map file
#-----------------------------------------------------------------------
nameToDefine = MODULE_NAME="\"$(executableName)\""
%include cdefapnd.mki

# If _SECURE_SCL is not defined as 0, every iterator is 8 bytes instead of 4, and every iterator
# operation involves a method call.
%if !defined (SECURE_SCL_VALUE)
    %if defined (DEBUG)
        # would like to defined this as 1 and use checked iterators in DEBUG builds but then we get:
        #
        #       LevelMaskTree.h(31) : warning C4275: non dll-interface class 'std::_Container_base_aux' used
        #       as base for dll-interface class 'std::_Container_base_aux_alloc_real<_Alloc>'
        #
        #    To fix this, the LevelMaskTree class should probably export specific methods instead of the entire class.
        #
        SECURE_SCL_VALUE    =   0
    %else
        SECURE_SCL_VALUE    =   0
    %endif
%endif


#-----------------------------------------------------------------------
# Including DefaultToolSet.mki is a noop if a toolset is already selected,
# but, if not, it provides a default.
#-----------------------------------------------------------------------
%include DefaultToolSet.mki

# linker options
DLM_NO_DLS              = 1
DLM_NO_DEF              = 1
DLM_OBJECT_DEST         = $(o)
DLM_NOENTRY             = 1

deliveryLib             = $(delivery)lib/


# Bentley Logging

%ifndef bsilogName
    bsilogName = bentleylogging-2.0
%endif

%ifndef bsilog4cxxName
    bsilog4cxxName = bentleylog4cxx-2.0
%endif
