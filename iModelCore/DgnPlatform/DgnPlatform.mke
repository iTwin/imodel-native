#----------------------------------------------------------------------
#
#     $Source: DgnPlatform.mke $
#
#  $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
#
#----------------------------------------------------------------------

#----------------------------------------------------------
# Set up all the standard stuff.
#----------------------------------------------------------
%include  mdl.mki


#-----------------------------------------------------------
# Root DgnPlatform directory
#-----------------------------------------------------------
SrcDgnPlatform                  = $(SrcRoot)DgnPlatform/

#------------------------------------------------------
# Header file locations in source tree
#------------------------------------------------------
DgnPlatformPublicAPISrc         = $(SrcDgnPlatform)PublicAPI/
DgnPlatformAPISrc               = $(DgnPlatformPublicAPISrc)DgnPlatform/
DgnPlatformSrc                  = $(DgnPlatformPublicAPISrc)DgnPlatform/
DgnPlatformToolsPublicApiSrc    = $(DgnPlatformSrc)Tools/
DgnDesktopToolsAPISrc           = $(DgnPlatformSrc)DesktopTools/
DgnCoreAPISrc                   = $(DgnPlatformSrc)DgnCore/
DgnHandlersAPISrc               = $(DgnPlatformSrc)DgnHandlers/
DgnHandlersTextBlockSrc         = $(DgnHandlersAPISrc)TextBlock/
DistributedDgnAPISrc            = $(DgnPlatformSrc)DistributedDgn/

#-----------------------------------------------------------
# Source directories
#-----------------------------------------------------------
DgnCoreDir                      = $(SrcDgnPlatform)DgnCore/
DgnFileIODir                    = $(SrcDgnPlatform)DgnFileIO/
DgnHandlersDir                  = $(SrcDgnPlatform)DgnHandlers/
DgnViewDir                      = $(SrcDgnPlatform)DgnView/
PlatformToolsDir                = $(SrcDgnPlatform)PlatformTools/
PrivateApiSrc                   = $(SrcDgnPlatform)PrivateApi/
privmki                         = $(SrcDgnPlatform)privmki/
DgnGeoCoordDir                  = $(SrcDgnPlatform)DgnGeoCoord/
ToolsDir                        = $(SrcDgnPlatform)Tools/ToolSubs/
ConfigToolsDir                  = $(SrcDgnPlatform)Tools/ToolSubs/macro/

DgnPlatformInternalDir          = $(PrivateApiSrc)DgnPlatformInternal/
lineStyleDir                    = $(DgnCoreDir)linestyle/
dimensionDir                    = $(DgnHandlersDir)Dimension/

dgnScriptDir                    = $(SrcDgnPlatform)DgnScript/
dgnJsApiDir                     = $(dgnScriptDir)DgnJsApi/
geomJsApiDir                    = $(dgnScriptDir)GeomJsApi/

AnnotationsSrc                  = $(DgnCoreDir)Annotations/
AnnotationsPrivateApi           = $(DgnPlatformInternalDir)DgnCore/Annotations/
AnnotationsApi                  = $(DgnPlatformAPISrc)DgnCore/Annotations/

BaseGeoCoordAPISrc              = $(BuildContext)PublicAPI/GeoCoord/

#-----------------------------------------------------------
# BuildContext
#-----------------------------------------------------------
BuildContext                    = $(OutBuildContexts)DgnPlatform/


# Define these to handle multi-platform.
ToolsubsLib                     = $(libprefix)Toolsubs$(libext)
BentleyGeomLib                  = $(libprefix)BentleyGeom$(libext)
ECNativeObjectsLib              = $(libprefix)ECObjects$(libext)


#----------------------------------------------------------
# Set and then include the CompileOptionsMki file.
# It is needed and also %included by PreCompileHeader.mki
#----------------------------------------------------------
CompileOptionsMki               = $(baseDir)DgnPlatform.mki
%include $(CompileOptionsMki)


DLM_OBJECT_DEST                 = $(DgnPlatformObj)
ASSEMBLY_STRONGNAME             = 1

contextDepends                  = $(DgnCoreAPISrc)ViewContext.h $(DgnCoreAPISrc)IViewOutput.h $(DgnCoreAPISrc)IViewDraw.h $(DgnCoreAPISrc)DgnViewport.h

VewControllerDepends            = $(DgnCoreAPISrc)ViewController.h $(DgnCoreAPISrc)ViewContext.h

HandlerDepends                  = $(DgnCoreAPISrc)ElementHandler.h $(contextDepends)

RealityDataHandlerDepends       = $(DgnCoreAPISrc)DgnViewport.h $(DgnCoreAPISrc)HttpHandler.h $(DgnCoreAPISrc)RealityDataCache.h

WebMercatorDepends              = $(DgnCoreAPISrc)WebMercator.h $(DgnCoreAPISrc)DgnDbTables.h

PointCloudBaseModelDepends      = $(DgnCoreAPISrc)PointCloudBaseModel.h $(DgnCoreAPISrc)DgnDbTables.h

RasterBaseModelDepends          = $(DgnCoreAPISrc)RasterBaseModel.h $(DgnCoreAPISrc)DgnDbTables.h

toolsHeaders                    = $(DgnPlatformToolsPublicApiSrc)KeyTree.h

LsLocalDepends                  = $(DgnCoreAPISrc)LsLocal.h $(DgnCoreAPISrc)LineStyle.h $(contextDepends)

#---------------------------------------------------------
#  Set up for signing
#---------------------------------------------------------
RIGHTSCOMPLIANT = true
%include $(SrcDgnPlatform)privmki/DgnPlatformSignatureDefaults.mki

#----------------------------------------------------------------------
#       Location for objects
#----------------------------------------------------------------------
CoreObjs                        =% $(OutDgnPlatformBuild)DgnCore/
HandlerObjs                     =% $(OutDgnPlatformBuild)DgnHandlers/
o                               =% $(DgnPlatformObj)

always:
    !~@mkdir $(OutDgnPlatformBuild)
     ~@mkdir $(o)
     ~@mkdir $(CoreObjs)
     ~@mkdir $(HandlerObjs)
     ~@mkdir $(HandlerObjs)GeneratedSource/

#----------------------------------------------------------------------
#       Inform user of compile options
#----------------------------------------------------------------------
always:
        |  Compiler options: $(cDefs)$(cDefsPost) $(copt)
        |  -------- --------

%if $(TARGET_PLATFORM) != "Windows" && $(TARGET_PLATFORM) != "WinRT"

    # It is important to compile this outside of the scope of the PCH on LLVM because of the trick it plays. Should also be fine on GCC.
    $(CoreObjs)LinuxGlobals$(oext) : $(DgnCoreDir)LinuxGlobals.cpp

    coreObjects + $(CoreObjs)LinuxGlobals$(oext)

%endif

# Need to change o around because that's what multicompile uses
o = $(CoreObjs)

#----------------------------------------------------------------------
# Generate the TypeScript portion of the DgnScript.
# This also generates $(dgnScriptGen)DgnJsApiBootstrap.cpp, which we compile below.
#----------------------------------------------------------------------
%include $(geomJsApiDir)GenerateTypeScript.mki

%include $(dgnJsApiDir)GenerateTypeScript.mki

%ifdef dgnScriptGen
cIncs + -I$(dgnScriptGen)
%endif


#----------------------------------------------------------------------
#   Make sure that DgnPlatformInternal.pch is up-to-date.
#----------------------------------------------------------------------
PchCompiland        = $(baseDir)DgnPlatformInternal.cpp
PchOutputDir        = $(DgnPlatformObj)
PchExtraOptions     = -Zm170

%if defined (winNT) && $(BUILD_TOOLSET) == "GCC"
    # Compiling using DgnHandlerInternal.h.gch causes internal compiler error in GCC using windows ndk toolchain
    GCC_NO_PRE_COMPILED_HEADER = 1
%endif

%include $(SharedMki)PreCompileHeader.mki

CCPchOpts           = $(UsePrecompiledHeaderOptions)
CPchOpts            = $(UsePrecompiledHeaderOptions)

MultiCompileDepends =$(_MakeFileSpec)
%include MultiCppCompileRule.mki

$(CoreObjs)DgnElement$(oext) :                      $(DgnCoreDir)DgnElement.cpp ${MultiCompileDepends} $(DgnFileIOPubH)  $(toolsHeaders)

$(CoreObjs)DgnModel$(oext) :                        $(DgnCoreDir)DgnModel.cpp ${MultiCompileDepends} $(DgnFileIOPubH) $(DgnCoreAPISrc)ScanCriteria.h

$(CoreObjs)UnitDefinition$(oext) :                  $(DgnCoreDir)UnitDefinition.cpp ${MultiCompileDepends} $(DgnFileIOPubH)

$(CoreObjs)TxnManager$(oext) :                      $(DgnCoreDir)TxnManager.cpp $(DgnCoreAPISrc)TxnManager.h ${MultiCompileDepends}

$(CoreObjs)MemoryManager$(oext) :                   $(DgnCoreDir)MemoryManager.cpp $(DgnCoreAPISrc)MemoryManager.h ${MultiCompileDepends}

$(CoreObjs)ElementDependencyGraph$(oext) :          $(DgnCoreDir)ElementDependencyGraph.cpp $(DgnCoreAPISrc)TxnManager.h ${MultiCompileDepends}

$(CoreObjs)LsName$(oext) :                          $(lineStyleDir)LsName.cpp $(LsLocalDepends) ${MultiCompileDepends}

$(CoreObjs)LsLocation$(oext) :                      $(lineStyleDir)LsLocation.cpp $(LsLocalDepends) ${MultiCompileDepends}

$(CoreObjs)LsSymbology$(oext) :                     $(lineStyleDir)LsSymbology.cpp $(LsLocalDepends)  ${MultiCompileDepends}

$(CoreObjs)LsCache$(oext) :                         $(lineStyleDir)LsCache.cpp $(LsLocalDepends) ${MultiCompileDepends}

$(CoreObjs)DgnLineStyles$(oext) :                   $(lineStyleDir)DgnLineStyles.cpp $(LsLocalDepends) $(txnManagerDepends) ${MultiCompileDepends}

$(CoreObjs)LineStyleApi$(oext) :                    $(lineStyleDir)LineStyleApi.cpp $(LsLocalDepends)  ${MultiCompileDepends}

$(CoreObjs)LsDb$(oext) :                            $(lineStyleDir)LsDb.cpp $(LsLocalDepends) $(txnManagerDepends)  ${MultiCompileDepends}

$(CoreObjs)StrokeSymbol$(oext) :                    $(lineStyleDir)StrokeSymbol.cpp $(LsLocalDepends) $(HandlerDepends) ${MultiCompileDepends}

$(CoreObjs)LsPointComponent$(oext) :                $(lineStyleDir)LsPointComponent.cpp $(LsLocalDepends) $(HandlerDepends) ${MultiCompileDepends}

$(CoreObjs)StrokePattern$(oext) :                   $(lineStyleDir)StrokePattern.cpp $(LsLocalDepends) ${MultiCompileDepends}

$(CoreObjs)RasterLineStyle$(oext) :                 $(lineStyleDir)RasterLineStyle.cpp $(LsLocalDepends) ${MultiCompileDepends}

$(CoreObjs)DgnScan$(oext) :                         $(DgnCoreDir)DgnScan.cpp $(DgnCoreAPISrc)ScanCriteria.h $(DgnFileIOPubH) $(HandlerDepends) ${MultiCompileDepends}

$(CoreObjs)DgnRangeTree$(oext) :                    $(DgnCoreDir)DgnRangeTree.cpp $(DgnCoreAPISrc)DgnRangeTree.h ${MultiCompileDepends}

$(CoreObjs)VecMathDGNTolerances$(oext) :            $(DgnCoreDir)VecMathDGNTolerances.cpp $(DgnPlatformAPISrc)VecMath.h ${MultiCompileDepends}

$(CoreObjs)DgnColors$(oext) :                       $(DgnCoreDir)DgnColors.cpp $(DgnCoreAPISrc)ColorUtil.h ${MultiCompileDepends}

$(CoreObjs)ViewController$(oext) :                  $(DgnCoreDir)ViewController.cpp $(ViewControllerDepends) ${MultiCompileDepends} $(contextDepends)

$(CoreObjs)HypermodelingViewController$(oext) :     $(DgnCoreDir)HypermodelingViewController.cpp $(ViewControllerDepends) ${MultiCompileDepends} $(contextDepends)

$(CoreObjs)SectioningPhysicalViewController$(oext) :$(DgnCoreDir)SectioningPhysicalViewController.cpp $(ViewControllerDepends) ${MultiCompileDepends} $(contextDepends)

$(CoreObjs)DgnElements$(oext) :                     $(DgnCoreDir)DgnElements.cpp $(DgnCoreAPISrc)DgnDb.h ${MultiCompileDepends}

$(CoreObjs)DgnViewport$(oext) :                     $(DgnCoreDir)DgnViewport.cpp $(contextDepends) ${MultiCompileDepends}

$(CoreObjs)HttpHandler$(oext) :                     $(DgnCoreDir)HttpHandler.cpp $(DgnCoreAPISrc)HttpHandler.h ${MultiCompileDepends}

$(CoreObjs)RealityDataCache$(oext) :                $(DgnCoreDir)RealityDataCache.cpp $(RealityDataHandlerDepends) ${MultiCompileDepends}

$(CoreObjs)WebMercator$(oext) :                     $(DgnCoreDir)WebMercator.cpp $(contextDepends) $(WebMercatorDepends) $(RealityDataHandlerDepends) ${MultiCompileDepends}

$(CoreObjs)PointCloudBaseModel$(oext) :             $(DgnCoreDir)PointCloudBaseModel.cpp $(contextDepends) $(PointCloudBaseModelDepends) $(RealityDataHandlerDepends) ${MultiCompileDepends}

$(CoreObjs)RasterBaseModel$(oext) :                 $(DgnCoreDir)RasterBaseModel.cpp $(contextDepends) $(RasterBaseModelDepends) $(RealityDataHandlerDepends) ${MultiCompileDepends}

$(CoreObjs)TextString$(oext) :                      $(DgnCoreDir)TextString.cpp $(contextDepends) $(DgnCoreAPISrc)TextString.h $(DgnCoreAPISrc)DgnFont.h $(HandlerDepends) ${MultiCompileDepends}

$(CoreObjs)TextStyleInterop$(oext) :                $(DgnCoreDir)TextStyleInterop.cpp $(DgnCoreAPISrc)TextString.h $(DgnCoreAPISrc)Annotations/AnnotationTextStyle.h ${MultiCompileDepends}

$(CoreObjs)DgnPropertyJson$(oext) :                 $(DgnCoreDir)DgnPropertyJson.cpp ${MultiCompileDepends}

$(CoreObjs)ElementGeometry$(oext) :                 $(DgnCoreDir)ElementGeometry.cpp $(DgnCoreAPISrc)LineStyle.h ${MultiCompileDepends}

$(CoreObjs)ElementGraphics$(oext) :                 $(DgnCoreDir)ElementGraphics.cpp $(DgnCoreAPISrc)ElementGraphics.h ${MultiCompileDepends}

$(CoreObjs)MeasureGeom$(oext) :                     $(DgnCoreDir)MeasureGeom.cpp $(DgnCoreAPISrc)MeasureGeom.h ${MultiCompileDepends}

$(CoreObjs)DgnCore$(oext) :                         $(DgnCoreDir)DgnCore.cpp $(DgnCoreDir)DgnCoreDLLInlines.h $(DgnPlatformPublicAPISrc)DgnPlatform/DgnPlatformLib.h  ${MultiCompileDepends}

$(CoreObjs)HandlerTypeInfo$(oext) :                 $(DgnCoreDir)HandlerTypeInfo.cpp $(contextDepends) $(HandlerDepends) ${MultiCompileDepends}

$(CoreObjs)ViewContext$(oext) :                     $(DgnCoreDir)ViewContext.cpp $(contextDepends) $(HandlerDepends) $(DgnCoreAPISrc)DgnModel.h $(DgnCoreAPISrc)ScanCriteria.h $(DgnCoreDir)UpdateLogging.h ${MultiCompileDepends}

$(CoreObjs)SymbolContext$(oext) :                   $(DgnCoreDir)SymbolContext.cpp   $(contextDepends) $(HandlerDepends) $(DgnCoreAPISrc)DgnModel.h  $(LevelApiDepends) ${MultiCompileDepends}

$(CoreObjs)NullContext$(oext) :                     $(DgnCoreDir)NullContext.cpp   $(contextDepends) $(DgnCoreAPISrc)NullContext.h ${MultiCompileDepends}

$(CoreObjs)RangeContext$(oext) :                    $(DgnCoreDir)RangeContext.cpp $(DgnCoreAPISrc)NullContext.h $(DgnCoreAPISrc)SimplifyViewDrawGeom.h $(HandlerDepends) ${MultiCompileDepends}

$(CoreObjs)SnapContext$(oext) :                     $(DgnCoreDir)SnapContext.cpp $(HandlerDepends) ${MultiCompileDepends}

$(CoreObjs)SimplifyViewDrawGeom$(oext) :            $(DgnCoreDir)SimplifyViewDrawGeom.cpp $(contextDepends) $(DgnCoreAPISrc)SimplifyViewDrawGeom.h ${MultiCompileDepends}

$(CoreObjs)IFacetTopologyTable$(oext) :             $(DgnCoreDir)IFacetTopologyTable.cpp $(contextDepends) ${MultiCompileDepends}

$(CoreObjs)DrawAreaPattern$(oext) :                 $(DgnCoreDir)DrawAreaPattern.cpp   $(contextDepends) $(HandlerDepends) $(DgnCoreAPISrc)SimplifyViewDrawGeom.h ${MultiCompileDepends}

$(CoreObjs)ClipUtil$(oext) :                        $(DgnCoreDir)ClipUtil.cpp $(DgnCoreAPISrc)ClipUtil.h ${MultiCompileDepends}

$(CoreObjs)ClipPrimitive$(oext) :                   $(DgnCoreDir)ClipPrimitive.cpp $(DgnCoreAPISrc)ClipPrimitive.h ${MultiCompileDepends}

$(CoreObjs)ClipVector$(oext) :                      $(DgnCoreDir)ClipVector.cpp $(DgnCoreAPISrc)ClipPrimitive.h $(DgnCoreAPISrc)ClipVector.h ${MultiCompileDepends}

$(CoreObjs)SectionClip$(oext) :                     $(DgnCoreDir)SectionClip.cpp $(DgnCoreAPISrc)SectionClip.h ${MultiCompileDepends}

$(CoreObjs)TransformClipStack$(oext) :              $(DgnCoreDir)TransformClipStack.cpp $(DgnCoreAPISrc)TransformClipStack.h ${MultiCompileDepends}

$(CoreObjs)DgnCorePolyfaceClip$(oext) :             $(DgnCoreDir)DgnCorePolyfaceClip.cpp $(DgnCoreAPISrc)ClipUtil.h ${MultiCompileDepends}

$(CoreObjs)FenceParams$(oext) :                     $(DgnCoreDir)FenceParams.cpp $(DgnCoreAPISrc)FenceParams.h $(contextDepends) ${MultiCompileDepends}

$(CoreObjs)GParray$(oext) :                         $(DgnCoreDir)GParray.cpp $(DgnCoreAPISrc)GPArray.h ${MultiCompileDepends}

$(CoreObjs)IAuxSystem$(oext) :                      $(DgnCoreDir)IAuxSystem.cpp $(contextDepends) ${MultiCompileDepends}

$(CoreObjs)GradientSettings$(oext) :                $(DgnCoreDir)GradientSettings.cpp $(DgnCoreAPISrc)GradientSettings.h ${MultiCompileDepends}

$(CoreObjs)UnitManager$(oext) :                     $(DgnCoreDir)UnitManager.cpp $(DgnCoreAPISrc)UnitDefinition.h ${MultiCompileDepends}

$(CoreObjs)DgnCoreValueFormat$(oext) :              $(DgnCoreDir)DgnCoreValueFormat.cpp $(DgnCoreAPISrc)ValueFormat.h ${MultiCompileDepends}

$(CoreObjs)ValueParse$(oext) :                      $(DgnCoreDir)ValueParse.cpp $(DgnCoreAPISrc)ValueParse.h ${MultiCompileDepends}

$(CoreObjs)ACSManager$(oext) :                      $(DgnCoreDir)ACSManager.cpp $(DgnCoreAPISrc)IAuxCoordSys.h ${MultiCompileDepends}

$(CoreObjs)DgnFont$(oext) :                         $(DgnCoreDir)DgnFont.cpp $(DgnCoreAPISrc)DgnFont.h $(contextDepends) ${MultiCompileDepends}

$(CoreObjs)DgnRscFont$(oext) :                      $(DgnCoreDir)DgnRscFont.cpp $(DgnCoreAPISrc)DgnFont.h ${MultiCompileDepends}

$(CoreObjs)DgnRscFontData$(oext) :                  $(DgnCoreDir)DgnRscFontData.cpp $(DgnCoreAPISrc)DgnFont.h ${MultiCompileDepends}

$(CoreObjs)DgnShxFont$(oext) :                      $(DgnCoreDir)DgnShxFont.cpp $(DgnCoreAPISrc)DgnFont.h ${MultiCompileDepends}

$(CoreObjs)DgnShxFontData$(oext) :                  $(DgnCoreDir)DgnShxFontData.cpp $(DgnCoreAPISrc)DgnFont.h ${MultiCompileDepends}

$(CoreObjs)Sprites$(oext) :                         $(DgnCoreDir)Sprites.cpp ${MultiCompileDepends}

$(CoreObjs)ImageUtilities$(oext) :                  $(DgnCoreDir)ImageUtilities.cpp $(DgnCoreAPISrc)ImageUtilities.h ${MultiCompileDepends}

$(CoreObjs)GeomPart$(oext) :                        $(DgnCoreDir)GeomPart.cpp $(DgnCoreAPISrc)GeomPart.h ${MultiCompileDepends}

$(CoreObjs)stringop$(oext) :                        $(ToolsDir)charutil/stringop.cpp ${MultiCompileDepends}

$(CoreObjs)DgnDb$(oext) :                           $(DgnCoreDir)DgnDb.cpp $(DgnCoreAPISrc)DgnDb.h $(DgnCoreAPISrc)DgnDbTables.h ${MultiCompileDepends}

$(CoreObjs)DgnDbSchema$(oext) :                     $(DgnCoreDir)DgnDbSchema.cpp $(DgnCoreAPISrc)DgnDb.h $(DgnCoreAPISrc)DgnDbTables.h ${MultiCompileDepends}

$(CoreObjs)DgnSqlFuncs$(oext) :                     $(DgnCoreDir)DgnSqlFuncs.cpp ${MultiCompileDepends}

$(CoreObjs)DgnIModel$(oext) :                       $(DgnCoreDir)DgnIModel.cpp $(DgnCoreAPISrc)DgnDb.h $(DgnCoreAPISrc)DgnDbTables.h ${MultiCompileDepends}

$(CoreObjs)DgnUnits$(oext) :                        $(DgnCoreDir)DgnUnits.cpp $(DgnCoreAPISrc)DgnDb.h $(DgnCoreAPISrc)DgnDbTables.h ${MultiCompileDepends}

$(CoreObjs)DgnCategory$(oext) :                     $(DgnCoreDir)DgnCategory.cpp $(DgnCoreAPISrc)DgnDb.h $(DgnCoreAPISrc)DgnCategory.h ${MultiCompileDepends}

$(CoreObjs)DgnMaterial$(oext) :                     $(DgnCoreDir)DgnMaterial.cpp $(DgnCoreAPISrc)DgnDbTables.h $(DgnCoreAPISrc)DgnMaterial.h ${MultiCompileDepends}

$(CoreObjs)DgnLight$(oext) :                        $(DgnCoreDir)DgnLight.cpp $(DgnCoreAPISrc)DgnDbTables.h $(DgnCoreAPISrc)DgnLight.h ${MultiCompileDepends}

$(CoreObjs)DgnTexture$(oext) :                      $(DgnCoreDir)DgnTexture.cpp $(DgnCoreAPISrc)DgnDbTables.h ${MultiCompileDepends}

$(CoreObjs)DgnAuthority$(oext) :                    $(DgnCoreDir)DgnAuthority.cpp $(DgnCoreAPISrc)DgnDbTables.h ${MultiCompileDepends}

$(CoreObjs)SatelliteChangeSets$(oext) :             $(DgnCoreDir)SatelliteChangeSets.cpp $(DgnCoreAPISrc)SatelliteChangeSets.h ${MultiCompileDepends}

$(CoreObjs)DgnMarkupProject$(oext) :                $(DgnCoreDir)DgnMarkupProject.cpp $(DgnCoreAPISrc)DgnMarkupProject.h $(DgnCoreAPISrc)DgnDbTables.h ${MultiCompileDepends}

$(CoreObjs)DgnDomain$(oext) :                       $(DgnCoreDir)DgnDomain.cpp $(DgnCoreAPISrc)DgnDomain.h ${MultiCompileDepends} ${MultiCompileDepends}

$(CoreObjs)QueryModel$(oext) :                      $(DgnCoreDir)QueryModel.cpp $(DgnCoreAPISrc)QueryModel.h $(DgnCoreAPISrc)DgnRangeTree.h  $(DgnCoreDir)UpdateLogging.h ${MultiCompileDepends}

$(CoreObjs)QueryView$(oext) :                       $(DgnCoreDir)QueryView.cpp $(DgnCoreAPISrc)QueryModel.h $(DgnCoreAPISrc)QueryView.h $(ViewControllerDepends) $(DgnCoreDir)UpdateLogging.h ${MultiCompileDepends}

$(CoreObjs)UpdateLogging$(oext) :                   $(DgnCoreDir)UpdateLogging.cpp $(DgnCoreDir)UpdateLogging.h ${MultiCompileDepends}

$(CoreObjs)DgnViewDb$(oext) :                       $(DgnCoreDir)DgnViewDb.cpp $(DgnCoreAPISrc)DgnDbTables.h ${MultiCompileDepends}

$(CoreObjs)DgnLink$(oext) :                         $(DgnCoreDir)DgnLink.cpp $(DgnCoreAPISrc)DgnDbTables.h $(DgnCoreAPISrc)DgnLink.h ${MultiCompileDepends}

$(CoreObjs)DgnBaseDomain$(oext) :                   $(DgnCoreDir)DgnBaseDomain.cpp ${MultiCompileDepends}

$(CoreObjs)DgnCustomAttributeHelper$(oext) :        $(DgnCoreDir)DgnCustomAttributeHelper.cpp ${MultiCompileDepends}

$(CoreObjs)DgnHandlers$(oext) :                     $(DgnHandlersDir)DgnHandlers.cpp $(DgnPlatformPublicAPISrc)DgnPlatform/DgnPlatformLib.h ${MultiCompileDepends}

$(CoreObjs)HitDetail$(oext) :                       $(DgnHandlersDir)HitDetail.cpp $(HandlerDepends) ${MultiCompileDepends}

$(CoreObjs)PickContext$(oext) :                     $(DgnHandlersDir)PickContext.cpp $(DgnCoreAPISrc)HitDetail.h $(contextDepends) $(DgnCoreAPISrc)SimplifyViewDrawGeom.h ${MultiCompileDepends}

$(CoreObjs)RegionUtil$(oext) :                      $(DgnHandlersDir)RegionUtil.cpp $(contextDepends) ${MultiCompileDepends}

$(CoreObjs)ScopedDgnHost$(oext) :                   $(DgnHandlersDir)ScopedDgnHost.cpp  ${MultiCompileDepends}

$(CoreObjs)NamedVolume$(oext) :                     $(DgnHandlersDir)NamedVolume.cpp $(DgnHandlersAPISrc)NamedVolume.h ${MultiCompileDepends}

$(CoreObjs)DgnChangeSummary$(oext) :                $(DgnHandlersDir)DgnChangeSummary.cpp $(DgnHandlersAPISrc)DgnChangeSummary.h ${MultiCompileDepends}

$(CoreObjs)DgnECSymbolProvider$(oext) :             $(DgnHandlersDir)DgnECSymbolProvider.cpp $(DgnHandlersAPISrc)DgnECSymbolProvider.h ${MultiCompileDepends}




$(o)ECUtils$(oext) :                                $(DgnCoreDir)ECUtils.cpp $(DgnPlatformAPISrc)ECUtils.h ${MultiCompileDepends}

$(o)ModelSolverDef$(oext) :                         $(DgnCoreDir)ModelSolverDef.cpp $(DgnCoreAPISrc)ModelSolverDef.h ${MultiCompileDepends}

$(o)RenderMaterial$(oext) :                         $(DgnCoreDir)RenderMaterial.cpp $(DgnCoreAPISrc)RenderMaterial.h ${MultiCompileDepends}

#$(o)SolarUtility$(oext) :                          $(DgnCoreDir)SolarUtility.cpp $(DgnCoreAPISrc)SolarUtility.h ${MultiCompileDepends}


#----------------------------------------------------------------------
#   DgnGeoCoord
#----------------------------------------------------------------------

$(o)DgnGeoCoord$(oext) :                            $(DgnGeoCoordDir)DgnGeoCoord.cpp $(DgnPlatformAPISrc)DgnGeoCoord.h $(BaseGeoCoordAPISrc)BaseGeoCoord.h ${MultiCompileDepends}

#$(o)ReprojectCache$(oext) :                        $(DgnGeoCoordDir)ReprojectCache.cpp $(DgnPlatformAPISrc)DgnGeoCoord.h $(BaseGeoCoordAPISrc)BaseGeoCoord.h ${MultiCompileDepends}

$(o)GeoCoordServices$(oext) :                       $(DgnGeoCoordDir)GeoCoordServices.cpp $(DgnPlatformAPISrc)DgnGeoCoord.h $(BaseGeoCoordAPISrc)BaseGeoCoord.h ${MultiCompileDepends}

#$(o)AuxCoordSysProcessor$(oext) :                  $(DgnGeoCoordDir)AuxCoordSysProcessor.cpp $(DgnPlatformAPISrc)DgnGeoCoord.h $(BaseGeoCoordAPISrc)BaseGeoCoord.h ${MultiCompileDepends}

#----------------------------------------------------------------------
#   Configuration
#----------------------------------------------------------------------

$(o)findfile$(oext) :                               $(ToolsDir)fileUtil/findfile.cpp ${MultiCompileDepends}

$(o)ConfigurationManager$(oext)                     :$(ConfigToolsDir)ConfigurationManager.cpp ${MultiCompileDepends}

$(o)MacroConfigurationAdmin$(oext)                  :$(ConfigToolsDir)MacroConfigurationAdmin.cpp ${MultiCompileDepends}

$(o)MacroFileProcessor$(oext)                       :$(ConfigToolsDir)MacroFileProcessor.cpp ${MultiCompileDepends}

$(o)ExpandMacro$(oext)                              :$(ConfigToolsDir)ExpandMacro.cpp ${MultiCompileDepends}

$(o)envvutil$(oext)                                 :$(ConfigToolsDir)envvutil.cpp ${MultiCompileDepends}

$(o)evalcnst$(oext)                                 :$(ConfigToolsDir)evalcnst.cpp ${MultiCompileDepends}


#----------------------------------------------------------------------
#   DgnScript
#----------------------------------------------------------------------

%if !defined (BENTLEYCONFIG_NO_JAVASCRIPT)

$(o)DgnScript$(oext) :                              $(dgnScriptDir)DgnScript.cpp $(DgnCoreAPISrc)DgnScript.h ${MultiCompileDepends}

#   Core Dgn JS Api
$(o)DgnJsApi$(oext) :                               $(dgnJsApiDir)DgnJsApi.cpp $(DgnPlatformAPISrc)DgnJsApi.h ${MultiCompileDepends}

$(o)DgnJsApiBootstrap$(oext) :                      $(dgnScriptGen)DgnJsApiBootstrap.cpp ${MultiCompileDepends}

$(o)DgnJsApiCallbacks$(oext) :                      $(dgnScriptGen)DgnJsApiCallbacks.cpp $(dgnScriptGen)DgnPlatform/DgnJsApiProjection.h ${MultiCompileDepends}

#   Geom JS Api
$(o)GeomJsApi$(oext) :                              $(geomJsApiDir)GeomJsApi.cpp $(DgnPlatformAPISrc)GeomJsApi.h ${MultiCompileDepends}

$(o)GeomJsApiBootstrap$(oext) :                     $(dgnScriptGen)GeomJsApiBootstrap.cpp ${MultiCompileDepends}

$(o)GeomJsApiCallbacks$(oext) :                     $(dgnScriptGen)GeomJsApiCallbacks.cpp $(dgnScriptGen)DgnPlatform/GeomJsApiProjection.h ${MultiCompileDepends}

%else

$(o)DgnScriptStubbedOut$(oext) :                    $(dgnScriptDir)DgnScriptStubbedOut.cpp $(DgnCoreAPISrc)DgnScript.h ${MultiCompileDepends}

%endif

#----------------------------------------------------------------------
#   Annotations
#----------------------------------------------------------------------
AnnotationsHeaders = \
    $(AnnotationsApi)AnnotationFrame.h \
    $(AnnotationsApi)AnnotationFrameDraw.h \
    $(AnnotationsApi)AnnotationFrameLayout.h \
    $(AnnotationsApi)AnnotationFrameStyle.h \
    $(AnnotationsApi)AnnotationLeader.h \
    $(AnnotationsApi)AnnotationLeaderDraw.h \
    $(AnnotationsApi)AnnotationLeaderStyle.h \
    $(AnnotationsApi)AnnotationPropertyBag.h \
    $(AnnotationsApi)Annotations.h \
    $(AnnotationsApi)AnnotationTextBlock.h \
    $(AnnotationsApi)AnnotationTextBlockDraw.h \
    $(AnnotationsApi)AnnotationTextBlockLayout.h \
    $(AnnotationsApi)AnnotationTextStyle.h \
    $(AnnotationsApi)TextAnnotation.h \
    $(AnnotationsApi)TextAnnotationDraw.h \
    $(AnnotationsApi)TextAnnotationSeed.h \
    $(AnnotationsPrivateApi)AnnotationFramePersistence.h \
    $(AnnotationsPrivateApi)AnnotationFrameStylePersistence.h \
    $(AnnotationsPrivateApi)Annotations.fb.h \
    $(AnnotationsPrivateApi)AnnotationTextBlockPersistence.h \
    $(AnnotationsPrivateApi)AnnotationTextStylePersistence.h \
    $(AnnotationsPrivateApi)TextAnnotationPersistence.h \
    $(AnnotationsPrivateApi)TextAnnotationSeedPersistence.h

$(CoreObjs)AnnotationFrame$(oext) :                 $(AnnotationsSrc)AnnotationFrame.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationFrameDraw$(oext) :             $(AnnotationsSrc)AnnotationFrameDraw.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationFrameLayout$(oext) :           $(AnnotationsSrc)AnnotationFrameLayout.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationFrameStyle$(oext) :            $(AnnotationsSrc)AnnotationFrameStyle.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationLeader$(oext) :                $(AnnotationsSrc)AnnotationLeader.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationLeaderDraw$(oext) :            $(AnnotationsSrc)AnnotationLeaderDraw.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationLeaderLayout$(oext) :          $(AnnotationsSrc)AnnotationLeaderLayout.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationLeaderStyle$(oext) :           $(AnnotationsSrc)AnnotationLeaderStyle.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationParagraph$(oext) :             $(AnnotationsSrc)AnnotationParagraph.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationPropertyBag$(oext) :           $(AnnotationsSrc)AnnotationPropertyBag.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationRuns$(oext) :                  $(AnnotationsSrc)AnnotationRuns.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationTextBlock$(oext) :             $(AnnotationsSrc)AnnotationTextBlock.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationTextBlockDraw$(oext) :         $(AnnotationsSrc)AnnotationTextBlockDraw.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationTextBlockLayout$(oext) :       $(AnnotationsSrc)AnnotationTextBlockLayout.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)AnnotationTextStyle$(oext) :             $(AnnotationsSrc)AnnotationTextStyle.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)TextAnnotation$(oext) :                  $(AnnotationsSrc)TextAnnotation.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)TextAnnotationDraw$(oext) :              $(AnnotationsSrc)TextAnnotationDraw.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

$(CoreObjs)TextAnnotationElement$(oext) :           $(AnnotationsSrc)TextAnnotationElement.cpp $(AnnotationsHeaders) $(AnnotationsApi)TextAnnotationElement.h ${MultiCompileDepends}

$(CoreObjs)TextAnnotationSeed$(oext) :              $(AnnotationsSrc)TextAnnotationSeed.cpp $(AnnotationsHeaders) ${MultiCompileDepends}

%include MultiCppCompileGo.mki

coreObjects =% $(MultiCompileObjectList)

#----------------------------------------------------------------------
# Generate word break data structures
#----------------------------------------------------------------------
always:
    !~@mkdir $(HandlerObjs)GeneratedSource/GeneratedHeaders

$(HandlerObjs)GeneratedSource/GeneratedHeaders/WordBreakData.h : $(DgnHandlersDir)WordBreakProperty.txt $(DgnHandlersDir)WordBreakDataGenerator.py
    |[== Building "$@", ($=) ==]
    $(DgnHandlersDir)WordBreakDataGenerator.py -i$< -o$@

dirToSearch = $(HandlerObjs)GeneratedSource/
%include cincapnd.mki

# -----------------------------------------------------------------------------------------------
#   Non-port section
# -----------------------------------------------------------------------------------------------
FileTypeControl     =
CCPchOpts           =
CPchOpts            =
MultiCompileDepends = $(_MakeFileSpec)
o                   = $(CoreObjs)

%include MultiCppCompileRule.mki

$(CoreObjs)DgnTrueTypeFont$(oext) :                 $(DgnCoreDir)DgnTrueTypeFont.cpp $(DgnCoreAPISrc)DgnFont.h ${MultiCompileDepends}

$(CoreObjs)DgnTrueTypeFontData$(oext) :             $(DgnCoreDir)DgnTrueTypeFontData.cpp $(DgnCoreAPISrc)DgnFont.h $(DgnCoreAPISrc)DgnFontData.h ${MultiCompileDepends}

%include MultiCppCompileGo.mki

dgnCore_nonPortableObjects  =% $(MultiCompileObjectList)
coreObjects                 + $(dgnCore_nonPortableObjects)

# -----------------------------------------------------------------------------------------------
#   cppObjects = Combine dgncore and dgnhandler obj lists
# -----------------------------------------------------------------------------------------------
cppObjects                  = $(coreObjects)

# -----------------------------------------------------------------------------------------------
#   Portable inline handling (make sure that there is a non-inlined implementation when required)
# -----------------------------------------------------------------------------------------------

$(HandlerObjs)DgnPlatformDLLInlines$(oext) :        $(baseDir)DgnPlatformDLLInlines.cpp $(baseDir)DgnCore/DgnCoreDLLInlines.h ${MultiCompileDepends}

cppObjects                  +% $(HandlerObjs)DgnPlatformDLLInlines$(oext)

#----------------------------------------------------------------------
#   dependencies of the subsystem.
#----------------------------------------------------------------------
o                       = $(DgnPlatformObj)

DLM_DEST                = $(o)
DLM_OBJECT_FILES        = $(cppObjects)
DLM_OBJECT_PCH          = $(DgnPlatformObj)DgnPlatformInternal$(oext)
DLM_EXPORT_OBJS         = $(cppObjects)
DLM_EXPORT_DEST         = $(o)
DLM_NOINITFUNC          = 1
DLM_NOMSBUILTINS        = 1
DLM_NO_DEF              = 1
DLM_NO_DLS              = 1
DLM_NOENTRY             = 1
LINKER_LIBRARIES        =   $(ContextSubpartsLibs)$(ToolsubsLib) \
                            $(ContextSubpartsLibs)$(libprefix)BeSQLiteEC$(libext) \
                            $(ContextSubpartsLibs)$(libprefix)BeSQLite$(libext) \
                            $(ContextSubpartsLibs)$(libprefix)BeZlib$(stlibext) \
                            $(ContextSubpartsLibs)$(libprefix)BePng$(stlibext) \
                            $(ContextSubpartsLibs)$(libprefix)BeLibJpegTurbo$(stlibext) \
                            $(ContextSubpartsLibs)$(libprefix)BeJsonCpp$(stlibext) \
                            $(ContextSubpartsLibs)$(ECNativeObjectsLib) \
                            $(ContextSubpartsLibs)$(BentleyGeomLib) \
                            $(ContextSubpartsLibs)$(libprefix)BentleyGeomSerialization$(libext) \
                            $(ContextSubpartsLibs)$(libprefix)BaseGeoCoord$(libext)\
                            $(ContextSubpartsLibs)$(libprefix)BeXml$(libext) \
                            $(ContextSubpartsLibs)$(libprefix)freetype2$(libext) \
                            $(ContextSubpartsLibs)$(libprefix)BeIcu4c$(libext)

%if $(TARGET_PLATFORM)!="WinRT"
    # The "Casablanca" library is used on WinRT instead
    LINKER_LIBRARIES + $(ContextSubpartsLibs)$(libprefix)BeCurl$(libext)
%endif

%ifndef CREATE_STATIC_LIBRARIES
    %if $(TARGET_PLATFORM)=="Windows"  # *** WIP_NONPORT

        #For CoCreateInstance, RegOpenKey, SHGetPathFromIDListA - used (in Windows build) for TrueType font support and by IntegrationManager.obj
        LINKER_LIBRARIES + $(oleLibs) $(guiLibs) kernel32.lib
        LINKER_LIBRARIES + wininet.lib

        # Add this to use the VTune API. It is a static library that finds the DLL's if they are on the system.
        # LINKER_LIBRARIES       + "C:\Program Files (x86)\Intel\VTune Amplifier XE\lib64\libittnotify.lib"
    %endif
%endif

# JavaScript Support
%ifndef BENTLEYCONFIG_NO_JAVASCRIPT
    LINKER_LIBRARIES +    $(ContextSubpartsLibs)$(libprefix)BeJavaScript$(stlibext)
    %if $(TARGET_PLATFORM) == "Windows"
        %ifndef NDEBUG
            LINKER_LIBRARIES + jsrt.lib
        %else
            LINKER_LIBRARIES + $(ContextSubpartsLibs)libv8.lib
        %endif
    %elif $(TARGET_PLATFORM) == "WinRT"
        %if $(MSVC_VERSION) >= 1900
            LINKER_LIBRARIES + chakrart.lib
        %else
            LINKER_LIBRARIES + jsrt.lib
        %endif
    %elif $(TARGET_PLATFORM) == "Android"
        LINKER_LIBRARIES + $(ContextLibPrefix)v8_base.arm.a
        LINKER_LIBRARIES + $(ContextLibPrefix)v8_snapshot.a
    %endif
%endif

%include $(sharedMki)linkLibrary.mki

SQLANG_CHeader      = $(DgnPlatformInternalDir)DgnCore/DgnCoreL10N.h
SQLANG_Xliff        = $(o)xliffs/DgnCoreMessages_en.xliff

%include $(sharedMki)CHeaderToXliff.mki

$(BuildContext)Delivery/icons : $(DgnCoreDir)/icons
    $(LinkFirstDepToFirstTargetAsDirectory)

#----------------------------------------------------------------------
# Last resort fonts that are required to be available to DgnPlatform.
#----------------------------------------------------------------------
$(BuildContext)Delivery/lastresortfonts : $(baseDir)LastResortFonts/lastresortfonts
    $(LinkFirstDepToFirstTarget)
