//--------------------------------------------------------------------------------------
//     $Source: DgnCore/ElementGraphics.fbs $
//  $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
//--------------------------------------------------------------------------------------

namespace BentleyG06.Dgn.FB;

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
enum GradientMode : byte {None, Linear, Curved, Cylindrical, Spherical, Hemispherical}
enum BoundaryType : byte {None, Open, Closed}
enum FillDisplay : byte {None, ByView, Always, Blanking}
enum GeometryClass : byte {Primary, Construction, Dimension, Pattern}
enum BRepType : byte {Solid, Sheet, Wire, Minimal}

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
struct DPoint3d {x:double; y:double; z:double;}
struct DPoint2d {x:double; y:double;}
struct DVec3d {x:double; y:double; z:double;}
struct Transform {x00:double; x01:double; x02:double; tx:double; x10:double; x11:double; x12:double; ty:double; x20:double; x21:double; x22:double; tz:double;}
struct FaceSymbology {useColor:ubyte; useMaterial:ubyte; color:uint; subCategoryId:long; materialId:long; transparency:double; uv:DPoint2d;}
struct FaceSymbologyIndex {faceIndex:uint; symbIndex:uint;}

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table PointPrimitive
    {
    coords:[DPoint3d];
    boundary:BoundaryType; // point string, line string, or shape

    } // PointPrimitive

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table PointPrimitive2d
    {
    coords:[DPoint2d];
    boundary:BoundaryType; // point string, line string, or shape

    } // PointPrimitive2d

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table ArcPrimitive
    {
    center:DPoint3d;
    vector0:DVec3d;
    vector90:DVec3d;
    start:double;
    sweep:double; // 0.0 means full sweep
    boundary:BoundaryType; // 360 degree arc or ellipse

    } // ArcPrimitive

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table BRepData
    {
    entityTransform:Transform;
    brepType:BRepType;
    entityData:[ubyte];
    symbology:[FaceSymbology];
    symbologyIndex:[FaceSymbologyIndex];

    } // BRepData

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table BeginSubCategory
    {
    subCategoryId:long;
    origin:DPoint3d;
    yaw:double;
    pitch:double;
    roll:double;

    } // BeginSubCategory

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table GeomPart
    {
    geomPartId:long; // only reason to use flatbuffers is to make it easier if we need to add more info down the road...

    } // GeomPart

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table BasicSymbology
    {
    color:uint;
    weight:uint;
    transparency:double; // contributes to net transparency, not an override.
    displayPriority:int; // contributes to net display priority, not an override. (2d only)
    useColor:ubyte;  // color overrides sub-category appearance
    useWeight:ubyte; // weight overrides sub-category appearance
    geomClass:GeometryClass;

    } // BasicSymbology

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table LineStyle
    {
    lineStyleId:long;
    //  LineStyleParams are in a separate table. They are provided only when necessary.
    } // Material

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table Material
    {
    useMaterial:ubyte; // material overrides sub-category appearance
    materialId:long;
    origin:DPoint3d;
    size:DPoint3d;
    yaw:double;
    pitch:double;
    roll:double;

    } // Material

//=======================================================================================
// @bsiclass                                                    
//=======================================================================================
table AreaFill
    {
    fill:FillDisplay;
    color:uint;
    transparency:double;
    mode:GradientMode;
    flags:ushort;
    angle:double;
    tint:double;
    shift:double;
    colors:[uint];
    values:[double];

    } // AreaFill

