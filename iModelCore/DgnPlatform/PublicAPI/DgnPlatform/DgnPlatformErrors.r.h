/*--------------------------------------------------------------------------------------+
|
|     $Source: PublicAPI/DgnPlatform/DgnPlatformErrors.r.h $
|
|  $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
|
+--------------------------------------------------------------------------------------*/
#pragma once

//__PUBLISH_SECTION_START__

#include <Bentley/Bentley.h>
#include <Bentley/BeFileName.h>
#include "DgnPlatformBaseType.r.h"

BEGIN_BENTLEY_DGNPLATFORM_NAMESPACE

//=======================================================================================
//! Error code categories
//! @private
//=======================================================================================
enum DgnErrorCategories
    {
    DGNMODEL_ERROR_BASE             = 0x11000,
    DGNOPEN_STATUS_BASE             = 0x12000,
    DGNELEMENT_ERROR_BASE           = 0x14000,
    GEOCOORD_ATTACH_ERROR_BASE      = 0x15000,
    VIEW_INFO_ERROR_BASE            = 0x16000,
    LINESTYLE_ERROR_BASE            = 0x17000,
    GEOREFERENCE_ERROR_BASE         = 0x18000,
    VIEWFRUSTUM_ERROR_BASE          = 0x19000,
    VIEWPORT_ERROR_BASE             = 0x1a000,
    DGNDB_ERROR_BASE                = 0x1b000,
    PATHNAME_ERROR_BASE             = 0x1c000,
    PATHNAME_ERROR_LAST             = 0x1d000,
    MARKUPPROJECT_ERROR_BASE        = 0x1e000,
    DGNSCHEMA_ERROR_BASE            = 0x1f000,
    };

//=======================================================================================
//! Errors generated by accessing or attempting to modify a DgnFile
//=======================================================================================
enum DgnFileStatus
    {
    DGNFILE_STATUS_Success                      = SUCCESS,
    DGNFILE_STATUS_UnknownError                 = ERROR,

    DGNOPEN_STATUS_SharingViolation             = DGNOPEN_STATUS_BASE + 0x03,
    DGNOPEN_STATUS_AccessViolation              = DGNOPEN_STATUS_BASE + 0x04,
    DGNOPEN_STATUS_AlreadyOpen                  = DGNOPEN_STATUS_BASE + 0x05,
    DGNOPEN_STATUS_FileAlreadyExists            = DGNOPEN_STATUS_BASE + 0x06,
    DGNOPEN_STATUS_BadFilename                  = DGNOPEN_STATUS_BASE + 0x07,
    DGNOPEN_STATUS_UnrecognizedFormat           = DGNOPEN_STATUS_BASE + 0x08,
    DGNOPEN_STATUS_VersionMismatch              = DGNOPEN_STATUS_BASE + 0x09,
    DGNOPEN_STATUS_WrongProject                 = DGNOPEN_STATUS_BASE + 0x0a,
    DGNOPEN_STATUS_FileCorrupt                  = DGNOPEN_STATUS_BASE + 0x0b,
    DGNOPEN_STATUS_FileNotLoaded                = DGNOPEN_STATUS_BASE + 0x0c,
    DGNOPEN_STATUS_TooManyOpenFiles             = DGNOPEN_STATUS_BASE + 0x10,
    DGNOPEN_STATUS_FileNotFound                 = DGNOPEN_STATUS_BASE + 0x11,
    DGNOPEN_STATUS_OpenCanceled                 = DGNOPEN_STATUS_BASE + 0x12,
    DWGOPEN_STATUS_InvalidSeed                  = DGNOPEN_STATUS_BASE + 0x18,
    DGNOPEN_STATUS_IsEncrypted                  = DGNOPEN_STATUS_BASE + 0x21,
    DGNOPEN_STATUS_CorruptFile                  = DGNOPEN_STATUS_BASE + 0x22,
    DGNOPEN_STATUS_FileHasNewFeatures           = DGNOPEN_STATUS_BASE + 0x23,
    DGNOPEN_STATUS_SaveToPerformed              = DGNOPEN_STATUS_BASE + 0x24,
    DWGOPEN_STATUS_BadFile                      = DGNOPEN_STATUS_BASE + 0x27,
    DWGOPEN_STATUS_CannotOpenSeed               = DGNOPEN_STATUS_BASE + 0x28,
    DGNOPEN_STATUS_OperationComplete            = DGNOPEN_STATUS_BASE + 0x29,
    DGNOPEN_STATUS_UpgradeFailed                = DGNOPEN_STATUS_BASE + 0x2a,
    DGNOPEN_STATUS_OutOfMemory                  = DGNOPEN_STATUS_BASE + 0x2b,
    DGNOPEN_STATUS_FileIsReadonly               = DGNOPEN_STATUS_BASE + 0x2c,
    DGNOPEN_STATUS_FileInUse                    = DGNOPEN_STATUS_BASE + 0x2d,

    DGNFILE_ERROR_NotLoaded                     = DGNOPEN_STATUS_BASE + 0x30,
    DGNFILE_ERROR_NotOpen                       = DGNOPEN_STATUS_BASE + 0x31,
    DGNFILE_ERROR_AlreadyLoaded                 = DGNOPEN_STATUS_BASE + 0x32,
    DGNFILE_ERROR_HasChanges                    = DGNOPEN_STATUS_BASE + 0x33,
    DGNFILE_ERROR_BadArg                        = DGNOPEN_STATUS_BASE + 0x34,
    DGNFILE_ERROR_ReadError                     = DGNOPEN_STATUS_BASE + 0x35,
    DGNFILE_ERROR_WriteError                    = DGNOPEN_STATUS_BASE + 0x36,
    DGNFILE_ERROR_NeverWriteable                = DGNOPEN_STATUS_BASE + 0x37,
    DGNFILE_ERROR_CertificatePurpose            = DGNOPEN_STATUS_BASE + 0x38,
    DGNFILE_ERROR_CompressionError              = DGNOPEN_STATUS_BASE + 0x39,
    DGNFILE_ERROR_ModelAlreadyLoaded            = DGNOPEN_STATUS_BASE + 0x3a,
    DGNFILE_ERROR_UnknownFormat                 = DGNOPEN_STATUS_BASE + 0x3b,
    DGNFILE_ERROR_NotOpenForWrite               = DGNOPEN_STATUS_BASE + 0x3c,
    DGNFILE_ERROR_NoSuchModel                   = DGNOPEN_STATUS_BASE + 0x3d,
    DGNFILE_ERROR_NotLocked                     = DGNOPEN_STATUS_BASE + 0x3e,
    DGNFILE_ERROR_UnableToImportSeed            = DGNOPEN_STATUS_BASE + 0x3f,
    DGNFILE_ERROR_ModelLoadError                = DGNOPEN_STATUS_BASE + 0x40,
    DGNFILE_ERROR_RenameError                   = DGNOPEN_STATUS_BASE + 0x41,
    DGNFILE_ERROR_CopyError                     = DGNOPEN_STATUS_BASE + 0x42,
    DGNFILE_ERROR_ModelNotFilled                = DGNOPEN_STATUS_BASE + 0x43,
    DGNFILE_ERROR_NoModel                       = DGNOPEN_STATUS_BASE + 0x44,
    DGNFILE_ERROR_RightNotGranted               = DGNOPEN_STATUS_BASE + 0x46,
    DGNFILE_ERROR_PasswordAlreadyUsed           = DGNOPEN_STATUS_BASE + 0x47,
    DGNFILE_ERROR_InvalidFileSchema             = DGNOPEN_STATUS_BASE + 0x48,
    DGNFILE_ERROR_TransactionActive             = DGNOPEN_STATUS_BASE + 0x49,
    DGNFILE_ERROR_SQLiteError                   = DGNOPEN_STATUS_BASE + 0x4a,

    DGNDB_ERROR_CorruptDatabase            = DGNDB_ERROR_BASE + 0x02,
    DGNDB_ERROR_CantCreateProjectFile      = DGNDB_ERROR_BASE + 0x04,
    DGNDB_ERROR_CantOpenSeedFile           = DGNDB_ERROR_BASE + 0x07,
    DGNDB_ERROR_ViewNotFound               = DGNDB_ERROR_BASE + 0x08,
    DGNDB_ERROR_WrongBeSQLiteSchemaVersion = DGNDB_ERROR_BASE + 0x09,
    DGNDB_ERROR_InvalidSchemaVersion       = DGNDB_ERROR_BASE + 0x0a,
    DGNDB_ERROR_SQLSchemaError             = DGNDB_ERROR_BASE + 0x0b,
    DGNDB_ERROR_MissingDomain              = DGNDB_ERROR_BASE + 0x0e,
    DGNDB_ERROR_UnitsMissing               = DGNDB_ERROR_BASE + 0x0f,
    DGNDB_ERROR_MissingPropertyTable       = DGNDB_ERROR_BASE + 0x10,
    DGNDB_ERROR_NotDgnMarkupProject        = DGNDB_ERROR_BASE + 0x11,

    DGNPATHNAME_ERROR_IllegalName               = PATHNAME_ERROR_BASE + (uint32_t)BeFileNameStatus::IllegalName,
    DGNPATHNAME_ERROR_AlreadyExists             = PATHNAME_ERROR_BASE + (uint32_t)BeFileNameStatus::AlreadyExists,
    DGNPATHNAME_ERROR_CantCreate                = PATHNAME_ERROR_BASE + (uint32_t)BeFileNameStatus::CantCreate,
    DGNPATHNAME_ERROR_FileNotFound              = PATHNAME_ERROR_BASE + (uint32_t)BeFileNameStatus::FileNotFound,
    DGNPATHNAME_ERROR_CantDeleteFile            = PATHNAME_ERROR_BASE + (uint32_t)BeFileNameStatus::CantDeleteFile,
    DGNPATHNAME_ERROR_AccessViolation           = PATHNAME_ERROR_BASE + (uint32_t)BeFileNameStatus::AccessViolation,
    DGNPATHNAME_ERROR_CantDeleteDir             = PATHNAME_ERROR_BASE + (uint32_t)BeFileNameStatus::CantDeleteDir,
    DGNPATHNAME_ERROR_UnknownError              = PATHNAME_ERROR_LAST,

    DGNSCHEMA_STATUS_VersionTooOld        = DGNSCHEMA_ERROR_BASE + 0x01,
    DGNSCHEMA_STATUS_VersionTooNew        = DGNSCHEMA_ERROR_BASE + 0x02,
    DGNSCHEMA_STATUS_UpgradeFailed        = DGNSCHEMA_ERROR_BASE + 0x03,
    DGNSCHEMA_STATUS_MismatchCantOpenForWrite = DGNSCHEMA_ERROR_BASE + 0x04,

    DGNVIEW_ERROR_WrongViewType                 = VIEW_INFO_ERROR_BASE + 0x01,
    DGNVIEW_ERROR_ControllerFailed              = VIEW_INFO_ERROR_BASE + 0x02,
    };

//=======================================================================================
//! Errors generated by accessing or attempting to modify a DgnModel
//=======================================================================================
enum DgnModelStatus
    {
    DGNMODEL_STATUS_Success                     = SUCCESS,
    DGNMODEL_STATUS_ReadOnly                    = DGNMODEL_ERROR_BASE + 0x01,
    DGNMODEL_STATUS_BadElement                  = DGNMODEL_ERROR_BASE + 0x02,
    DGNMODEL_STATUS_BadRequest                  = DGNMODEL_ERROR_BASE + 0x03,
    DGNMODEL_STATUS_WrongClass                  = DGNMODEL_ERROR_BASE + 0x04,
    DGNMODEL_STATUS_ElementNotFound             = DGNMODEL_ERROR_BASE + 0x05,
    DGNMODEL_STATUS_BadModel                    = DGNMODEL_ERROR_BASE + 0x06,
    DGNMODEL_STATUS_IdNotFound                  = DGNMODEL_ERROR_BASE + 0x08,
    DGNMODEL_STATUS_IdExists                    = DGNMODEL_ERROR_BASE + 0x09,
    DGNMODEL_STATUS_InvalidId                   = DGNMODEL_ERROR_BASE + 0x0a,
    DGNMODEL_STATUS_NotEnabled                  = DGNMODEL_ERROR_BASE + 0x0c,
    DGNMODEL_STATUS_IsInUse                     = DGNMODEL_ERROR_BASE + 0x0f,
    DGNMODEL_STATUS_NotFound                    = DGNMODEL_ERROR_BASE + 0x10,
    DGNMODEL_STATUS_2d3dMismatch                = DGNMODEL_ERROR_BASE + 0x13,
    DGNMODEL_STATUS_DuplicateModelName          = DGNMODEL_ERROR_BASE + 0x1a,
    DGNMODEL_STATUS_NoChange                    = DGNMODEL_ERROR_BASE + 0x1b,
    DGNMODEL_STATUS_DuplicateModelID            = DGNMODEL_ERROR_BASE + 0x1d,
    DGNMODEL_STATUS_InvalidModelName            = DGNMODEL_ERROR_BASE + 0x1e,
    DGNMODEL_STATUS_BadArg                      = DGNMODEL_ERROR_BASE + 0x1f,
    DGNMODEL_STATUS_MuNotLargerThanSu           = DGNMODEL_ERROR_BASE + 0x20,
    DGNMODEL_STATUS_NotSameUnitBase             = DGNMODEL_ERROR_BASE + 0x21,
    DGNMODEL_STATUS_WrongModel                  = DGNMODEL_ERROR_BASE + 0x22,
    DGNMODEL_STATUS_DrawingModelMustBe2d        = DGNMODEL_ERROR_BASE + 0x23,
    DGNMODEL_STATUS_InvalidModel                = DGNMODEL_ERROR_BASE + 0x24,
    DGNMODEL_STATUS_IsLocked                    = DGNMODEL_ERROR_BASE + 0x25,
    DGNMODEL_STATUS_ModelTableWriteError        = DGNMODEL_ERROR_BASE + 0x26,
    DGNMODEL_STATUS_InvalidRange                = DGNMODEL_ERROR_BASE + 0x27,
    DGNMODEL_STATUS_BadSeedModel                = DGNMODEL_ERROR_BASE + 0x28,
    DGNMODEL_STATUS_ForeignKeyConstraint        = DGNMODEL_ERROR_BASE + 0x2a,
    DGNMODEL_STATUS_ElementWriteError           = DGNMODEL_ERROR_BASE + 0x2b,
    DGNMODEL_STATUS_ElementReadError            = DGNMODEL_ERROR_BASE + 0x2c,
    DGNMODEL_STATUS_InvalidClassId              = DGNMODEL_ERROR_BASE + 0x2d,
    DGNMODEL_STATUS_InvalidHandler              = DGNMODEL_ERROR_BASE + 0x2e,
    DGNMODEL_STATUS_WrongDgnDb                  = DGNMODEL_ERROR_BASE + 0x2f,
    DGNMODEL_STATUS_NoGeometry                  = DGNMODEL_ERROR_BASE + 0x30,
    DGNMODEL_STATUS_WrongElement                = DGNMODEL_ERROR_BASE + 0x31,
    };

//=======================================================================================
// @bsiclass
//=======================================================================================
enum ViewFrustumStatus
{
    VIEWFRUST_STATUS_SUCCESS                    = SUCCESS,
    VIEWFRUST_STATUS_InvalidWindow              = VIEWFRUSTUM_ERROR_BASE + 1,
    VIEWFRUST_STATUS_MinWindow                  = VIEWFRUSTUM_ERROR_BASE + 2,
    VIEWFRUST_STATUS_MaxWindow                  = VIEWFRUSTUM_ERROR_BASE + 3,
    VIEWFRUST_STATUS_MaxDisplayDepth            = VIEWFRUSTUM_ERROR_BASE + 4,
    VIEWFRUST_STATUS_InvalidUpVector            = VIEWFRUSTUM_ERROR_BASE + 6,
    VIEWFRUST_STATUS_InvalidTargetPoint         = VIEWFRUSTUM_ERROR_BASE + 7,
    VIEWFRUST_STATUS_InvalidLens                = VIEWFRUSTUM_ERROR_BASE + 8,
    VIEWFRUST_STATUS_InvalidViewport            = VIEWFRUSTUM_ERROR_BASE + 9,
};

/** @cond BENTLEY_SDK_Publisher */

//=======================================================================================
// @bsiclass
//=======================================================================================
enum LineStyleStatus
    {
    LINESTYLE_STATUS_Success                    = BSISUCCESS,
    LINESTYLE_STATUS_Error                      = BSIERROR,
    LINESTYLE_STATUS_BadArgument                = LINESTYLE_ERROR_BASE + 0x01,
    LINESTYLE_STATUS_UnknownResourceError       = LINESTYLE_ERROR_BASE + 0x02,
    LINESTYLE_STATUS_FileNotFound               = LINESTYLE_ERROR_BASE + 0x03,
    LINESTYLE_STATUS_NotSameFile                = LINESTYLE_ERROR_BASE + 0x04,
    LINESTYLE_STATUS_FileReadOnly               = LINESTYLE_ERROR_BASE + 0x07,
    LINESTYLE_STATUS_AlreadyExists              = LINESTYLE_ERROR_BASE + 0x08,
    LINESTYLE_STATUS_BadFormat                  = LINESTYLE_ERROR_BASE + 0x09,
    LINESTYLE_STATUS_StyleNotFound              = LINESTYLE_ERROR_BASE + 0x0a,
    LINESTYLE_STATUS_ComponentNotFound          = LINESTYLE_ERROR_BASE + 0x0b,
    LINESTYLE_STATUS_SQLITE_Error               = LINESTYLE_ERROR_BASE + 0x0c,
    LINESTYLE_STATUS_SQLITE_Constraint          = LINESTYLE_ERROR_BASE + 0x0d,
    };

/** @endcond */

//=======================================================================================
//! @private
//=======================================================================================
enum DgnHandlersStatus
    {
    DGNHANDLERS_STATUS_Success                   = SUCCESS,
    DGNHANDLERS_STATUS_BadElement                = (-105),       // these values match the equivalent MDLERR_ values
    DGNHANDLERS_STATUS_FileReadonly              = (-108),
    DGNHANDLERS_STATUS_BadArg                    = (-126),
    DGNHANDLERS_STATUS_UserAbort                 = (-144),
    DGNHANDLERS_STATUS_AlreadyExists             = (-194),
    DGNHANDLERS_STATUS_NoModel                   = (-205),
    };

//=======================================================================================
//! @private
//=======================================================================================
enum DgnPlatformStatus
    {
    DGNPLATFORM_STATUS_Success                   = SUCCESS,
    DGNPLATFORM_STATUS_BadArg                    = (-126),          // these values match the equivalent MDLERR_ values
    DGNPLATFORM_STATUS_InsfMemory                = (-116),
    DGNPLATFORM_STATUS_TooLarge                  = (-148),
    DGNPLATFORM_STATUS_NoChange                  = (-163),
    DGNPLATFORM_STATUS_BadParameter              = (-509),
    };

//=======================================================================================
//! @private
//=======================================================================================
enum GeoCoordAttachmentErrors
    {
    GEOCOORD_ERROR_NoGeocode                    = GEOCOORD_ATTACH_ERROR_BASE + 0x01,
    GEOCOORD_ERROR_NotGeoTransformed            = GEOCOORD_ATTACH_ERROR_BASE + 0x02,
    };

//=======================================================================================
//! @private
//=======================================================================================
enum BSplineStatus
    {
    BSPLINE_STATUS_Success                      = SUCCESS,
    BSPLINE_STATUS_NoPoles                      = (-500),
    BSPLINE_STATUS_NoKnots                      = (-501),
    BSPLINE_STATUS_NoWeights                    = (-502),
    BSPLINE_STATUS_NoBounds                     = (-503),
    BSPLINE_STATUS_NoNumBounds                  = (-504),
    BSPLINE_STATUS_NoBspHeader                  = (-505),
    BSPLINE_STATUS_TooFewPoles                  = (-506),
    BSPLINE_STATUS_TooManyPoles                 = (-507),
    BSPLINE_STATUS_BadBspElement                = (-508),
    BSPLINE_STATUS_BadParameter                 = (-509),
    BSPLINE_STATUS_BadOrder                     = (-510),
    BSPLINE_STATUS_BadPeriodicity               = (-511),
    BSPLINE_STATUS_BadPoles                     = (-512),
    BSPLINE_STATUS_BadKnots                     = (-513),
    BSPLINE_STATUS_BadWeights                   = (-514),
    BSPLINE_STATUS_BadSpiralDefinition          = (-515),
    BSPLINE_STATUS_TooManyKnots                 = (-516),
    BSPLINE_STATUS_NoOffsetIntersection         = (-517),
    BSPLINE_STATUS_BadContinuity                = (-518),
    BSPLINE_STATUS_RecurseLimit                 = (-519),
    };

//=======================================================================================
//! @private
//=======================================================================================
enum DgnPlatformToolsStatus  // these values match the equivalent MDLERR_ values
    {
    DGNPLATFORMTOOLS_STATUS_WriteFailed               = (-111),
    DGNPLATFORMTOOLS_STATUS_InsfMemory                = (-116),
    DGNPLATFORMTOOLS_STATUS_ReadFailed                = (-120),
    DGNPLATFORMTOOLS_STATUS_NoMatch                   = (-123),
    DGNPLATFORMTOOLS_STATUS_Ambiguous                 = (-124),
    DGNPLATFORMTOOLS_STATUS_BadArg                    = (-126),
    DGNPLATFORMTOOLS_STATUS_BadStringListIndex        = (-134),  // Bad string list index
    DGNPLATFORMTOOLS_STATUS_TooLarge                  = (-148),
    DGNPLATFORMTOOLS_STATUS_FileNotFound              = (-166),
    DGNPLATFORMTOOLS_STATUS_NameTooLong               = (-169),
    DGNPLATFORMTOOLS_STATUS_BadParameter              = (-509),
    DGNPLATFORMTOOLS_STATUS_AddressNotValid           = (-725),
    DGNPLATFORMTOOLS_STATUS_BadVariableArraySize      = (-1100),
    DGNPLATFORMTOOLS_STATUS_NotConversionRules        = (-1101),
    DGNPLATFORMTOOLS_STATUS_BadDataDef                = (-1102),
    DGNPLATFORMTOOLS_STATUS_DataDefNotFound           = (-1103),
    DGNPLATFORMTOOLS_STATUS_BufferAlignmentsDiffer    = (-1104),
    DGNPLATFORMTOOLS_STATUS_InvalidPlatformId         = (-1106),
    DGNPLATFORMTOOLS_STATUS_VoidDataType              = (-1107),
    DGNPLATFORMTOOLS_STATUS_InvalidDependency         = (-1901),
    };

//=======================================================================================
//! @private
//=======================================================================================
enum StyleTableErrors
    {
    STYLETABLE_ERROR_NoMatch                      = (-123),
    STYLETABLE_ERROR_BadIndex                     = (-134),  /* Bad string list index */
    STYLETABLE_ERROR_DuplicateName                = (-161),
    STYLETABLE_ERROR_NoChange                     = (-163),
    STYLETABLE_ERROR_BadName                      = (-188),
    STYLETABLE_ERROR_StyleNotFound                = (-227),
    STYLETABLE_ERROR_StyleIsUsed                  = (-230),
    };

END_BENTLEY_DGNPLATFORM_NAMESPACE
