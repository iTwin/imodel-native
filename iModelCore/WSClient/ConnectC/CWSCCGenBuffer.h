/*--------------------------------------------------------------------------------------+
|
|     $Source: ConnectC/CWSCCGenBuffer.h $
|
|  $Copyright: (c) 2016 Bentley Systems, Incorporated. All rights reserved. $
|
+--------------------------------------------------------------------------------------*/
#pragma once
//--------------------------------------------------------------------------------------+
// <auto-generated>
//     This code was generated by the pyApiGen tool on April 29, 2016.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------+

#include <WebServices/ConnectC/CWSCCPublic.h>
#include <DgnClientFx/Utils/Http/ProxyHttpHandler.h>
#include <Bentley/bvector.h>

#define BUFF_TYPE_CONNECTUSER 1
#define BUFF_TYPE_ORGANIZATION 2
#define BUFF_TYPE_PROJECT 3
#define BUFF_TYPE_PROJECTFAVORITE 4
#define BUFF_TYPE_PROJECTMRU 5
#define BUFF_TYPE_PROJECTMRUDETAIL 6
#define BUFF_TYPE_PROJECTTEMPLATE 7

typedef struct _CWSCCBUFFER
   {
   uint32_t       lType;
   uint64_t       lCount;
   bvector<void*> lItems;
   } CWSCCBUFFER, *LPCWSCCBUFFER;

typedef LPCWSCCBUFFER HCWSCCBUFFER;
/*--------------------------------------------------------------------------------------+
| String functions
+--------------------------------------------------------------------------------------*/
CALLSTATUS connectuserGetStringProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP str,
uint32_t strLength
);

CALLSTATUS organizationGetStringProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP str,
uint32_t strLength
);

CALLSTATUS projectGetStringProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP str,
uint32_t strLength
);

CALLSTATUS projectfavoriteGetStringProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP str,
uint32_t strLength
);

CALLSTATUS projectmruGetStringProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP str,
uint32_t strLength
);

CALLSTATUS projectmrudetailGetStringProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP str,
uint32_t strLength
);

CALLSTATUS projecttemplateGetStringProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP str,
uint32_t strLength
);

/*--------------------------------------------------------------------------------------+
| String length functions
+--------------------------------------------------------------------------------------*/
CALLSTATUS connectuserGetStringLength
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
size_t* outStringSize
);

CALLSTATUS organizationGetStringLength
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
size_t* outStringSize
);

CALLSTATUS projectGetStringLength
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
size_t* outStringSize
);

CALLSTATUS projectfavoriteGetStringLength
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
size_t* outStringSize
);

CALLSTATUS projectmruGetStringLength
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
size_t* outStringSize
);

CALLSTATUS projectmrudetailGetStringLength
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
size_t* outStringSize
);

CALLSTATUS projecttemplateGetStringLength
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
size_t* outStringSize
);


/*--------------------------------------------------------------------------------------+
| Guid functions
+--------------------------------------------------------------------------------------*/
CALLSTATUS connectuserGetGuidProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP guid
);

CALLSTATUS organizationGetGuidProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
WCharP guid
);


/*--------------------------------------------------------------------------------------+
| Bool functions
+--------------------------------------------------------------------------------------*/
CALLSTATUS projectGetBooleanProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
bool* boolean
);

CALLSTATUS projectfavoriteGetBooleanProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
bool* boolean
);

CALLSTATUS projectmrudetailGetBooleanProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
bool* boolean
);

CALLSTATUS projecttemplateGetBooleanProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
bool* boolean
);


/*--------------------------------------------------------------------------------------+
| Integer functions
+--------------------------------------------------------------------------------------*/
CALLSTATUS projectGetIntProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
int32_t* integer
);

CALLSTATUS projectfavoriteGetIntProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
int32_t* integer
);

CALLSTATUS projectmrudetailGetIntProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
int32_t* integer
);

CALLSTATUS projecttemplateGetIntProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
int32_t* integer
);


/*--------------------------------------------------------------------------------------+
| Double functions
+--------------------------------------------------------------------------------------*/
CALLSTATUS projectGetDoubleProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
double* pDouble
);

CALLSTATUS projectfavoriteGetDoubleProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
double* pDouble
);

CALLSTATUS projectmrudetailGetDoubleProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
double* pDouble
);

CALLSTATUS projecttemplateGetDoubleProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
double* pDouble
);


/*--------------------------------------------------------------------------------------+
| Long functions
+--------------------------------------------------------------------------------------*/
CALLSTATUS projectmrudetailGetLongProperty
(
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
int64_t* pLong
);



/*--------------------------------------------------------------------------------------+
| Internal buffers
+--------------------------------------------------------------------------------------*/
typedef struct _CWSCC_CONNECTUSER_BUFFER 
    {
    bmap<WString, bool> IsSet;
    WString UserName;
    WString UserEmail;
    WString ConnectOrgGuid;
    WString UltimateSiteId;
    WString OrgName;
    } CWSCCCONNECTUSERBUFFER, *LPCWSCCCONNECTUSERBUFFER;

void ConnectUserBufferStuffer
(
LPCWSCCCONNECTUSERBUFFER connectuserBuf,
RapidJsonValueCR properties
);

typedef struct _CWSCC_ORGANIZATION_BUFFER 
    {
    bmap<WString, bool> IsSet;
    WString OrganizationGuid;
    WString OrganizationName;
    } CWSCCORGANIZATIONBUFFER, *LPCWSCCORGANIZATIONBUFFER;

void OrganizationBufferStuffer
(
LPCWSCCORGANIZATIONBUFFER organizationBuf,
RapidJsonValueCR properties
);

typedef struct _CWSCC_PROJECT_BUFFER 
    {
    bmap<WString, bool> IsSet;
    WString Name;
    WString Number;
    WString OrganizationId;
    bool Active;
    WString Industry;
    WString AssetType;
    WString LastModified;
    WString Location;
    double Latitude;
    double Longitude;
    bool LocationIsUsingLatLong;
    WString RegisteredDate;
    WString TimeZoneLocation;
    int32_t Status;
    bool eBBacked;
    WString LinkToAssetType;
    WString LinkToIndustry;
    WString LinkToIndustryAssets;
    WString PWDMInvitationId;
    } CWSCCPROJECTBUFFER, *LPCWSCCPROJECTBUFFER;

void ProjectBufferStuffer
(
LPCWSCCPROJECTBUFFER projectBuf,
RapidJsonValueCR properties
);

typedef struct _CWSCC_PROJECTFAVORITE_BUFFER 
    {
    bmap<WString, bool> IsSet;
    bool eBBacked;
    WString Name;
    WString Number;
    WString OrganizationId;
    bool Active;
    WString Industry;
    WString AssetType;
    WString LastModified;
    WString Location;
    double Latitude;
    double Longitude;
    bool LocationIsUsingLatLong;
    WString RegisteredDate;
    WString TimeZoneLocation;
    int32_t Status;
    WString PWDMInvitationId;
    } CWSCCPROJECTFAVORITEBUFFER, *LPCWSCCPROJECTFAVORITEBUFFER;

void ProjectFavoriteBufferStuffer
(
LPCWSCCPROJECTFAVORITEBUFFER projectfavoriteBuf,
RapidJsonValueCR properties
);

typedef struct _CWSCC_PROJECTMRU_BUFFER 
    {
    bmap<WString, bool> IsSet;
    WString ProjectGuid;
    WString ProjectName;
    WString LastModified;
    } CWSCCPROJECTMRUBUFFER, *LPCWSCCPROJECTMRUBUFFER;

void ProjectMRUBufferStuffer
(
LPCWSCCPROJECTMRUBUFFER projectmruBuf,
RapidJsonValueCR properties
);

typedef struct _CWSCC_PROJECTMRUDETAIL_BUFFER 
    {
    bmap<WString, bool> IsSet;
    bool IsFavorite;
    int64_t LastAccessedByUser;
    bool eBBacked;
    WString LinkToAssetType;
    WString LinkToIndustry;
    WString LinkToIndustryAssets;
    WString Name;
    WString Number;
    WString OrganizationId;
    bool Active;
    WString Industry;
    WString AssetType;
    WString LastModified;
    WString Location;
    double Latitude;
    double Longitude;
    bool LocationIsUsingLatLong;
    WString RegisteredDate;
    WString TimeZoneLocation;
    int32_t Status;
    WString PWDMInvitationId;
    } CWSCCPROJECTMRUDETAILBUFFER, *LPCWSCCPROJECTMRUDETAILBUFFER;

void ProjectMRUDetailBufferStuffer
(
LPCWSCCPROJECTMRUDETAILBUFFER projectmrudetailBuf,
RapidJsonValueCR properties
);

typedef struct _CWSCC_PROJECTTEMPLATE_BUFFER 
    {
    bmap<WString, bool> IsSet;
    WString Name;
    WString Number;
    WString OrganizationId;
    bool Active;
    WString Industry;
    WString AssetType;
    WString LastModified;
    WString Location;
    double Latitude;
    double Longitude;
    bool LocationIsUsingLatLong;
    WString RegisteredDate;
    WString TimeZoneLocation;
    int32_t Status;
    bool eBBacked;
    WString LinkToAssetType;
    WString LinkToIndustry;
    WString LinkToIndustryAssets;
    } CWSCCPROJECTTEMPLATEBUFFER, *LPCWSCCPROJECTTEMPLATEBUFFER;

void ProjectTemplateBufferStuffer
(
LPCWSCCPROJECTTEMPLATEBUFFER projecttemplateBuf,
RapidJsonValueCR properties
);

