/*--------------------------------------------------------------------------------------+
|
|     $Source: ConnectC/CWSCCBufferGen.cpp $
|
|  $Copyright: (c) 2016 Bentley Systems, Incorporated. All rights reserved. $
|
+--------------------------------------------------------------------------------------*/
//--------------------------------------------------------------------------------------+
// <auto-generated>
//     This code was generated by the pyCApiGen tool on December 15, 2016.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------+

#include "CWSCCInternal.h"

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferFree
(
LPCWSCC api,
HCWSCCBUFFER buf
)
    {
    switch(buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_DataBufferFree(api, buf);
            }
        default:
            api->SetStatusMessage("Successful operation");
            api->SetStatusDescription("The dataBuffer passed into ConnectWebServicesClientC_DataBufferFree is invalid.");
            return INVALID_PARAMETER;
        }
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferGetStringProperty
(
LPCWSCC api,
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
uint32_t strLength,
WCharP str
)
    {
    switch (buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_GetStringProperty(api, buf, bufferProperty, index, strLength, str);
            }
        default:
            api->SetStatusMessage("Invalid parameter passed to function");
            api->SetStatusDescription("The buffer type passed in is invalid.");
            return INVALID_PARAMETER;
        }
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferGetStringLength
(
LPCWSCC api,
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
size_t* outStringSize
)
    {
    switch (buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_GetStringLength(api, buf, bufferProperty, index, outStringSize);
            }
        default:
            api->SetStatusMessage("Invalid parameter passed to function");
            api->SetStatusDescription("The buffer type passed in is invalid.");
            return INVALID_PARAMETER;
        }
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferGetDatetimeProperty
(
LPCWSCC api,
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
uint32_t strLength,
WCharP dateTime
)
    {
    switch (buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_GetDatetimeProperty(api, buf, bufferProperty, index, strLength, dateTime);
            }
        default:
            api->SetStatusMessage("Invalid parameter passed to function");
            api->SetStatusDescription("The buffer type passed in is invalid.");
            return INVALID_PARAMETER;
        }
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferGetGuidProperty
(
LPCWSCC api,
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
uint32_t strLength,
WCharP guid
)
    {
    switch (buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_GetGuidProperty(api, buf, bufferProperty, index, strLength, guid);
            }
        default:
            api->SetStatusMessage("Invalid parameter passed to function");
            api->SetStatusDescription("The buffer type passed in is invalid.");
            return INVALID_PARAMETER;
        }
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferGetBooleanProperty
(
LPCWSCC api,
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
bool* boolean
)
    {
    switch (buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_GetBooleanProperty(api, buf, bufferProperty, index, boolean);
            }
        default:
            api->SetStatusMessage("Invalid parameter passed to function");
            api->SetStatusDescription("The buffer type passed in is invalid.");
            return INVALID_PARAMETER;
        }
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferGetIntProperty
(
LPCWSCC api,
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
int32_t* integer
)
    {
    switch (buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_GetIntProperty(api, buf, bufferProperty, index, integer);
            }
        default:
            api->SetStatusMessage("Invalid parameter passed to function");
            api->SetStatusDescription("The buffer type passed in is invalid.");
            return INVALID_PARAMETER;
        }
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferGetDoubleProperty
(
LPCWSCC api,
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
double* pDouble
)
    {
    switch (buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_GetDoubleProperty(api, buf, bufferProperty, index, pDouble);
            }
        default:
            api->SetStatusMessage("Invalid parameter passed to function");
            api->SetStatusDescription("The buffer type passed in is invalid.");
            return INVALID_PARAMETER;
        }
    }

/*---------------------------------------------------------------------------------**//**
* @bsimethod                                                                    12/2016
+---------------+---------------+---------------+---------------+---------------+------*/
CallStatus WSG_DataBufferGetLongProperty
(
LPCWSCC api,
HCWSCCBUFFER buf,
int16_t bufferProperty,
uint32_t index,
int64_t* pLong
)
    {
    switch (buf->lSchemaType)
        {
        case SCHEMA_TYPE_GLOBALSCHEMA:
            {
            return GlobalSchema_GetLongProperty(api, buf, bufferProperty, index, pLong);
            }
        default:
            api->SetStatusMessage("Invalid parameter passed to function");
            api->SetStatusDescription("The buffer type passed in is invalid.");
            return INVALID_PARAMETER;
        }
    }

