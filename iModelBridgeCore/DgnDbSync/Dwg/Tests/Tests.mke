#----------------------------------------------------------------------------------------
#
#  $Source: Dwg/Tests/Tests.mke $
#
#  $Copyright: (c) 2016 Bentley Systems, Incorporated. All rights reserved. $
#
#----------------------------------------------------------------------------------------
programName = DwgImporterTests
baseDir =   $(_MakeFilePath)

BEGTEST_INPUT=$(baseDir)

%include mdl.mki

%if $(DWGTOOLKIT) != "OpenDwg" && $(DWGTOOLKIT) != "RealDwg"
    %error Must define DWGTOOLKIT to either OpenDwg or RealDwg!
%elif $(DWGTOOLKIT) == "RealDwg" && $(TARGET_PLATFORM) != "Windows"
    %error RealDWG only supports Windows platform!
%endif


# Need to ignore this because it's in Vancouver's header files.
%if defined(MSVC_VERSION)
%if MSVC_VERSION >= 1900
    # C4312: 'type cast': conversion from '...' to '...' of greater size
    CCompOpts + -wd4312

    # C4091: '... ': ignored on left of '...' when no variable is declared
    CCompOpts + -wd4091
%endif
%endif

# We don't want to run the test from the build location because the dependencies are not there.
GUNITTEST_NOEXEC = 1

# This macro is used by gtestobj.mki
GUnitTestDir        = $(BuildContext)SubParts/google_gtest/

BEGTEST_NAME=$(programName)
BEGTEST_OUTPUT=$(OutputRootDir)build/$(BEGTEST_NAME)/
%include $(SrcRoot)bsicommon/sharedmki/BeTestSelectHarness.mki

TestsHeaders = $(baseDir)Tests.h $(baseDir)ImporterTests.h $(baseDir)ImportConfigeditor.h

# Let all stand-alone tests share the same gtestmain and TestFixture objects.
o = $(OutputRootDir)build/DgnDbSync/$(programName)/

always:
    !~@mkdir $(o)

MultiCompileDepends = $(_MakeFileSpec)
%include MultiCppCompileRule.mki

$(o)gtestmain.obj                   : $(BEGTEST_INPUT)gtestmain.cpp                 $(TestsHeaders) ${MultiCompileDepends}

$(o)Admins.obj                      : $(BEGTEST_INPUT)Admins.cpp                    $(TestsHeaders) ${MultiCompileDepends}

$(o)ImporterCommandBuilder.obj      : $(BEGTEST_INPUT)ImporterCommandBuilder.cpp    $(TestsHeaders) ${MultiCompileDepends}

$(o)ImporterTests.obj               : $(BEGTEST_INPUT)ImporterTests.cpp             $(TestsHeaders) ${MultiCompileDepends}

$(o)ImporterBaseFixture.obj         : $(BEGTEST_INPUT)ImporterBaseFixture.cpp       $(TestsHeaders) ${MultiCompileDepends}

$(o)ImporterAppTests.obj            : $(BEGTEST_INPUT)ImporterAppTests.cpp          $(TestsHeaders) ${MultiCompileDepends}

$(o)BasicTests.obj                  : $(BEGTEST_INPUT)BasicTests.cpp                $(TestsHeaders) ${MultiCompileDepends}

$(o)ImportConfigEditor.obj          : $(BEGTEST_INPUT)ImportConfigEditor.cpp        $(TestsHeaders) ${MultiCompileDepends}

%include MultiCppCompileGo.mki

%undef CPchOpts
%undef CCPchOpts

GUNITTEST_OUT       = $(o)
GUNITTEST_NAME      = $(programName)
GUNITTEST_DEST      = $(o)
GUNITTEST_NTLIBS    = advapi32.lib ole32.lib ws2_32.lib $(BuildContext)Delivery/DwgImporter.lib
GUNITTEST_PATH      = $(o)
GUNITTEST_SYMB      = $(o)
GTEST_MAIN_IS_SUPPLIED = 1

%include $(BuildContext)SubParts/google_gtest_mki/gtestobj.mki

LOCAL_GUNITTEST_OBJS + $(MultiCompileObjectList)
LOCAL_GUNITTEST_OBJS + $[@wildcard $(BuildContext)SubParts/Libs/*.lib]


LINKER_LIBRARIES    + $(BuildContext)Delivery/DwgImporter.lib
LINKER_LIBRARIES_DELAYLOADED + $(ContextSubpartsLibs)DwgDbExchange.lib

%include $(SharedMki)gunittest.mki

always:
    ~linkfile "$(BuildContext)Delivery/$(programName).exe=$(o)$(programName).exe"

$(BuildContext)Delivery/$(programName).logging.config.xml : $(baseDir)logging.config.xml
    $(LinkFirstDepToFirstTarget)

$(BuildContext)Delivery/ImportConfig.xsd : $(baseDir)../Config/ConvertConfig.xsd
    $(LinkFirstDepToFirstTarget)

$(BuildContext)Delivery/ImportConfig.xml : $(baseDir)../Config/ConvertConfig.xml
    $(LinkFirstDepToFirstTarget)
    
$(BuildContext)Delivery/ignore_list.txt : $(baseDir)ignore_list.txt
    $(LinkFirstDepToFirstTarget)

$(BuildContext)Delivery/DgnDbSyncTestData/ : $(baseDir)data/
    $(LinkFirstDepToFirstTargetAsDirectory)

# Create the sqlang database
SQLANG_OutputDb     = $(o)DwgImporterTests_en-US.sqlang.db3
SQLANG_DeliveryDir  = $(BuildContext)Delivery/
SQLANG_XliffWildcard=$(BuildContext)SubParts/xliffs/*.xliff
%include $(SrcRoot)bsicommon\sqlang\mki\XliffsToDb.mke
