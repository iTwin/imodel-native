/*--------------------------------------------------------------------------------------+
|
|     $Source: Dwg/Tests/Tests.h $
|
|  $Copyright: (c) 2018 Bentley Systems, Incorporated. All rights reserved. $
|
+--------------------------------------------------------------------------------------*/
#pragma once

#include "../DwgImportInternal.h"

USING_NAMESPACE_DWG

//=======================================================================================
// @bsiclass                                    Sam.Wilson                      04/15
//=======================================================================================
struct ImporterTestsHost : DgnViewLib::Host
{
protected:
    virtual void _SupplyProductName (BentleyApi::Utf8StringR name) override {name.assign("DwgImporterTests");}
    virtual ViewManager& _SupplyViewManager() override;
    virtual IKnownLocationsAdmin& _SupplyIKnownLocationsAdmin() override;
    //virtual NotificationAdmin& _SupplyNotificationAdmin() override;
    virtual BentleyApi::BeSQLite::L10N::SqlangFiles _SupplySqlangFiles() override;
    // Allow view attachments included in thumbnails generated by the importer:
    bool _IsFeatureEnabled(Utf8CP feature) override {return 0 == strcmp(feature, "Platform.RenderViewAttachments");}
};

//=======================================================================================
// @bsiclass                                    Sam.Wilson                      04/15
//=======================================================================================
struct SyncInfoReader
    {
    DgnDbPtr m_dgndb;
    BentleyApi::BeSQLite::Db m_syncInfo;

    SyncInfoReader (BentleyApi::BeFileNameCR);
    void AttachToDgnDb (BentleyApi::BeFileNameCR);
    void MustFindModelSyncInfo (DwgSyncInfo::DwgModelSyncInfoId& out, uint64_t dwgModelId, DwgSyncInfo::ModelSourceType type) const;
    void MustFindElementByDwgEntityHandle (DgnElementId&, DwgSyncInfo::DwgModelSyncInfoId const&, DwgDbHandleCR, int expectedCount=1) const;
    };

