{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
        "Code": {
            "properties": {
                "CodeAuthorityId": {
                    "description": "Id of the Authority (must be defined in this json) used for generating the code for this object",
                    "type": "integer"
                },
                "CodeNamespace": {
                    "description": "Namespace for this code",
                    "type": "string"
                },
                "CodeValue": {
                    "description": "Value for this code",
                    "type": "string"
                }

            },
            "required": [ "CodeAuthorityId", "CodeNamespace", "CodeValue" ]
        },
        "Instance": {
            "properties": {
                "$ECClassKey": {
                    "description": "<SchemaName>.<ClassName> that defines this Model",
                    "type": "string"
                },
                "$ECInstanceId": {
                    "description": "Unique identifier for this Model",
                    "type": "string"
                }
            },
            "required": [ "$ECClassKey", "$ECInstanceId" ]
        },
        "Element": {
            "allOf": [
                { "$ref": "#/definitions/Code" },
                { "$ref": "#/definitions/Instance" },
                {
                    "properties": {
                        "ModelId": {
                            "description": "InstanceId of the Model that contains this element (must have already been defined in this json, and must be a DefinitionModel)",
                            "type": "string"
                        },
                        "ParentId": {
                            "description": "InstanceId of parent Element, if there is one",
                            "type": "integer"
                        },
                        "UserLabel": {
                            "description": "The 'name' given by the User vs. the official 'name' which is the CodeValue",
                            "type": "string"
                        },
                        "UserProperties": {
                            "description": "Json string containing properties like URI",
                            "type": "string"
                        }
                    },
                    "required": [ "ModelId" ]
                }
            ]
        },

        "ViewDefinition": {
            "allOf": [
                { "$ref": "#/definitions/Element" },
                {
                    "properties": {
                        "Descr": {
                            "description": "Description of the view definition",
                            "type": "string"
                        },
                        "Source": {
                            "description": "?",
                            "type": "integer"
                        },
                        "CategorySelector": {
                            "description": "Instance Id of the CategorySelector that this ViewDefinition uses",
                            "type": "integer"
                        },
                        "DisplayStyle": {
                            "description": "Instance Id of the display style that this ViewDefinition uses",
                            "type": "integer"
                        }
                    },
                    "required": [ "CategorySelector" ]
                }
            ]
        },
        "Point2d": {
            "properties": {
                "x": { "type": "number" },
                "y": { "type": "number" }
            }
        },
        "Point3d": {
            "properties": {
                "x": { "type": "number" },
                "y": { "type": "number" },
                "z": { "type": "number" }
            }
        },
        "ViewDefinition3d": {
            "allOf": [
                { "$ref": "#/definitions/ViewDefinition" },
                {
                    "properties": {
                        "TargetModel": {
                            "description": "The target Model for this view",
                            "type": "string"
                        },
                        "ModelSelector": {
                            "description": "?",
                            "type": "string"
                        },
                        "ClipVolume": {
                            "description": "?",
                            "type": "string"
                        },
                        "Origin": {
                            "description": "x, y, z coordinates of the Origin of the viewed volume on the lower, back, rear",
                            "$ref": "#/definitions/Point3d"
                        },
                        "Extents": {
                            "description": "Size of the view diagonal as a vector",
                            "$ref": "#/definitions/Point3d" 
                        },
                        "DirectionYaw": {
                            "description": "Yaw component of the view direction in degrees",
                            "type": "number"
                        },
                        "DirectionPitch": {
                            "description": "Pitch component of the view direction in degrees",
                            "type": "number"
                        },
                        "DirectionRoll": {
                            "description": "Roll component of the view direction in degrees",
                            "type": "number"
                        }
                    },
                    "required": [ "TargetModel", "ModelSelector" ]
                }
            ]
        }
    },
    "title": "BisJson",
    "description": "Expected data format for import into a bim file",
    "type": "array",
    "items": {
        "anyOf": [
            {
                "type": "object",
                "description": "Defines a single domain ECSchema.  These must proceed any use of ECClasses from the schema.",
                "properties": {
                    "Type": { "enum": [ "Schema" ] },
                    "Object": {
                        "patternProperties": {
                            "^[A-Za-z][A-Za-z0-9_]*\\.[0-9]{1,3}\\.[0-9]{1,3}(\\.[0-9]{1,3})?$": {
                                "type": "string",
                                "description": "Name of the schema as the key, and the serialized xml as the value for each domain schema.  Do not include any system schemas.  The domain schema should reference the BisCore schema and domain classes should use BaseClasses from the domain schema as appropriate."
                            }

                        }
                    }
                },
                "required": [ "Type", "Object" ]
            },
            {
                "type": "object",
                "description": "Defines a single BIS Authority",
                "properties": {
                    "Type": { "enum": [ "Authority" ] },
                    "Object": {
                        "type": "object",
                        "properties": {
                            "ECSchemaName": {
                                "description": "Name of the schema that the authority is defined in.  If null, BisCore is assumed.",
                                "type": "string"
                            },
                            "ECClassName": {
                                "description": "Name of the ECClass defining this authority",
                                "type": "string"
                            },
                            "Id": {
                                "description": "Unique identifier for this authority.",
                                "type": "integer"
                            },
                            "Name": {
                                "description": "Name of this authority.",
                                "type": "string"
                            },
                            "Properties": {
                                "description": "Json string containing properties like URI",
                                "type": "string"
                            }
                        },
                        "required": [ "ECSchemaName", "ECClassName", "Id", "Name" ]
                    }
                },
                "required": [ "Type", "Object" ]
            },
            {
                "type": "object",
                "description": "Defines a single BIS Subject.  These must be defined before the Model that uses it.",
                "properties": {
                    "Type": { "enum": [ "Subject" ] },
                    "Object": {
                        "type": "object",
                        "properties": {
                            "$ECInstanceId": {
                                "description": "Unique identifier for this Subject",
                                "type": "string"
                            },
                            "Label": {
                                "description": "Subject label",
                                "type": "string"
                            },
                            "Descr": {
                                "description": "(Optional) description of this subject",
                                "type": "string"
                            },
                            "ParentId": {
                                "description": "Id of this subject's parent subject, if there is one. -1 if not",
                                "type": "integer"
                            }
                        },
                        "required": [ "$ECInstanceId", "Label", "ParentId" ]
                    }
                },
                "required": [ "Type", "Object" ]
            },
            {
                "type": "object",
                "description": "Defines a single BIS Model",
                "properties": {
                    "Type": { "enum": [ "Model" ] },
                    "Object": {
                        "type": "object",
                        "allOf": [
                            { "$ref": "#/definitions/Instance" },
                            { "$ref": "#/definitions/Code" },
                            {
                                "properties": {
                                    "Properties": {
                                        "description": "Json string containing properties like DisplayInfo",
                                        "type": "string"
                                    },
                                    "Visibility": {
                                        "description": "Default visibility of the model",
                                        "type": "integer"
                                    },
                                    "ModeledElementId": {
                                        "description": "Instance Id of the element (Subject or other) that this Model models.  Element must have already been defined in this json.",
                                        "type": "string"
                                    }
                                },
                                "required": [ "$ECClassKey", "$ECInstanceId", "CodeAuthorityId", "CodeNamespace", "CodeValue", "ModeledElementId" ],
                                "additionalProperties": true
                            }
                        ]
                    }
                }
            },
            {
                "type": "object",
                "description": "Defines a single BIS Category",
                "properties": {
                    "Type": { "enum": [ "Category" ] },
                    "Object": {
                        "type": "object",
                        "allOf": [
                            { "$ref": "#/definitions/Instance" },
                            { "$ref": "#/definitions/Code" },
                            {
                                "properties": {
                                    "Descr": {
                                        "description": "Description for this category",
                                        "type": "string"
                                    },
                                    "ModelId": {
                                        "description": "InstanceId of the Model that contains this element (must have already been defined in this json, and must be a DefinitionModel)",
                                        "type": "string"
                                    },
                                    "ParentId": {
                                        "description": "InstanceId of parent Category, if there is one",
                                        "type": "integer"
                                    },
                                    "Rank": {
                                        "description": "The Rank of a category indicates how it was created and where it can be used.",
                                        "type": "integer"
                                    },
                                    "Scope": {
                                        "description": "The Scope of a category determines what types of models may use it.",
                                        "type": "integer"
                                    }
                                },
                                "required": [ "ModelId" ]
                            }
                        ]
                    }
                }
            },
            {
                "type": "object",
                "description": "Defines a BIS subcategory",
                "properties": {
                    "Type": { "enum": [ "SubCategory" ] },
                    "IsDefaultSubCategory": {
                        "description": "Whether this is the default subcategory for the given category",
                        "type": "boolean"
                    },
                    "Object": {
                        "type": "object",
                        "allOf": [
                            { "$ref": "#/definitions/Element" },
                            {
                                "properties": {
                                    "Descr": {
                                        "description": "Description of subcategory",
                                        "type": "string"
                                    },
                                    "Properties": {
                                        "description": "Additional user properties stored as json",
                                        "type": "string"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            {
                "type": "object",
                "description": "A view of an area defined in the bim's coordinate system.",
                "properties": {
                    "Type": { "enum": [ "ViewDefinition3d" ] },
                    "Object": {
                        "allOf": [
                            { "$ref": "#/definitions/ViewDefinition3d" },
                            {
                                "oneOf": [
                                    {
                                        "description": "OrthographicViewDefinition has no extra properties",
                                        "additionalProperties": true
                                    },
                                    {
                                        "description": "CameraViewDefinition - A spatial view that shows a perspective projection.  Must be derived from BisCore.CameraViewDefinition",
                                        "properties": {
                                            "EyePoint": {
                                                "description": "x, y, z coordinations of Camera eye point",
                                                "$ref": "#/definitions/Point3d"
                                            },
                                            "LensAngle": {
                                                "description": "Camera lens angle in degrees",
                                                "type": "number"
                                            },
                                            "FocusDistance": {
                                                "description": "Camera focus distance",
                                                "type": "number"
                                            }
                                        },
                                        "additionalProperties": true
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "type": "object",
                "description": "A view of a 2D model that has its own local coordinate system",
                "properties": {
                    "Type": { "enum": [ "ViewDefinition2d" ] },
                    "Object": {
                        "allOf": [
                            { "$ref": "#/definitions/ViewDefinition" },
                            {
                                "properties": {
                                    "BaseModel": {
                                        "description": "The base Model for this view",
                                        "type": "string"
                                    },
                                    "Origin": {
                                        "description": "x, y coordinates of the Origin of the viewed volume on the lower, back, rear",
                                        "$ref": "#/definitions/Point2d"
                                    },
                                    "Extents": {
                                        "description": "Size of the view diagonal as a vector",
                                        "$ref": "#/definitions/Point2d"
                                    },
                                    "RotationAngle": {
                                        "description": "Rotation angle in degrees of the viewed area.",
                                        "type": "number"
                                    }
                                },
                                "required": [ "BaseModel" ]
                            }
                        ]
                    }
                }

            },
            {
                "type": "object",
                "description": "Base class for elements with 3d geometry",
                "properties": {
                    "Type": { "enum": [ "GeometricElement3d" ] },
                    "Object": {
                        "allOf": [
                            { "$ref": "#/definitions/Element" },
                            {
                                "properties": {
                                    "CategoryId": {
                                        "description": "InstanceId of the category this element is in",
                                        "type": "string"
                                    },
                                    "GeometryStream": {
                                        "description": "Base64 encoded binary stream defining the geometry associated with this element",
                                        "type": "string"
                                    },
                                    "Origin": {
                                        "description": "x, y, z coordinates of the Origin",
                                        "$ref": "#/definitions/Point3d"
                                    },
                                    "Yaw": {
                                        "description": "Yaw component",
                                        "type": "number"
                                    },
                                    "Pitch": {
                                        "description": "Pitch component",
                                        "type": "number"
                                    },
                                    "Roll": {
                                        "description": "Roll component",
                                        "type": "number"
                                    },
                                    "BBoxLow": {
                                        "description": "Lower corner of bounding box",
                                        "$ref": "#/definitions/Point3d"
                                    },
                                    "BBoxHigh": {
                                        "description": "Upper corn of bounding box",
                                        "$ref": "#/definitions/Point3d"
                                    }
                                },
                                "required": [ "CategoryId", "BBoxHigh", "BBoxLow", "GeometryStream", "Origin", "Pitch", "Roll", "Yaw" ],
                                "additionalProperties": true
                            }
                        ]
                    }
                }

            },
                        {
                "type": "object",
                "description": "Base class for elements with 2d geometry",
                "properties": {
                    "Type": { "enum": [ "GeometricElement2d" ] },
                    "Object": {
                        "allOf": [
                            { "$ref": "#/definitions/Element" },
                            {
                                "properties": {
                                    "CategoryId": {
                                        "description": "InstanceId of the category this element is in",
                                        "type": "string"
                                    },
                                    "GeometryStream": {
                                        "description": "Base64 encoded binary stream defining the geometry associated with this element",
                                        "type": "string"
                                    },
                                    "Origin": {
                                        "description": "x, y coordinates of the Origin",
                                        "$ref": "#/definitions/Point2d"
                                    },
                                    "Rotation": {
                                        "description": "Rotation",
                                        "type": "number"
                                    },
                                    "BBoxLow": {
                                        "description": "Lower corner of bounding box",
                                        "$ref": "#/definitions/Point2d"
                                    },
                                    "BBoxHigh": {
                                        "description": "Upper corn of bounding box",
                                        "$ref": "#/definitions/Point2d"
                                    }
                                },
                                "required": [ "CategoryId", "BBoxHigh", "BBoxLow", "GeometryStream", "Origin", "Rotation" ],
                                "additionalProperties": true
                            }
                        ]
                    }
                }
            }
        ]
    }
}
