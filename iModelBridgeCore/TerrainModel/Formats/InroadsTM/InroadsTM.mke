#------------------------------------------------------------------------------------
#
#     $Source: Formats/InroadsTM/InroadsTM.mke $
#    $RCSfile: cppwrappers.mke,v $
#   $Revision: 1.123.2.1 $
#       $Date: 2012/11/15 20:19:18 $
#     $Author: Daryl.Holmwood $
#
#   $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------
%include  mdl.mki

%include $(SrcRoot)TerrainModel/privmki/TerrainModelCommon.mki

CompileOptionsMki = $(_MakeFilePath)inroadsTM.mki
%include $(CompileOptionsMki)

#---------------------------------------------------------
# Macros
#---------------------------------------------------------
baseDir             = $(_MakeFilePath)
appName             = InRoadsTM
MultiCompileDepends = $(_MakeFileSpec)

o =% $(terrainModelFormatsObj)
always:
    ~mkdir $(o)

ASSEMBLY_STRONGNAME = 1
DependsOnHeadersCPP = \
DependsOnHeaders = \

#---------------------------------------------------------
#  Set up for signing
#---------------------------------------------------------
%ifdef todo_signing
RIGHTSCOMPLIANT = true
%include    $(SrcTerrainModel)privmki/TerrainModelSignatureDefaults.mki

%if !defined (MSJ_SKIP_SIGNRSCS) && !defined (DLM_NO_SIGN)
    %include signrightscompliantdefs.mki
    %include signrscsdefs.mki
%endif
%endif

#----------------------------------------------------------------------
#   Make sure that pch is up-to-date.
#----------------------------------------------------------------------
PchCompiland        = $(_MakeFilePath)StdAfx.cpp
PchOutputDir        = $(o)
PchExtraOptions    = -Zm150

%include $(SharedMki)PreCompileHeader.mki

$(o)civguids$(oext) : $(_MakeFilePath)civguids.cpp  ${MultiCompileDepends}

CCPchOpts = $(UsePrecompiledHeaderOptions)
CPchOpts  = $(UsePrecompiledHeaderOptions)

#----------------------------------------------------------------------
#       Inform user of compile options
#----------------------------------------------------------------------
always:
        |  Compiler options: $(cDefs)$(cDefsPost) $(copt)
        |  -------- --------

%include MultiCppCompileRule.mki

$(o)actprj$(oext) : $(baseDir)actprj.cpp  ${MultiCompileDepends}

$(o)addftr$(oext) : $(baseDir)addftr.cpp  ${MultiCompileDepends}

$(o)addpnt$(oext) : $(baseDir)addpnt.cpp  ${MultiCompileDepends}

$(o)addtin$(oext) : $(baseDir)addtin.cpp  ${MultiCompileDepends}

$(o)allftr$(oext) : $(baseDir)allftr.cpp  ${MultiCompileDepends}

$(o)allocs$(oext) : $(baseDir)allocs.cpp  ${MultiCompileDepends}

$(o)allpnt$(oext) : $(baseDir)allpnt.cpp  ${MultiCompileDepends}

$(o)alltin$(oext) : $(baseDir)alltin.cpp  ${MultiCompileDepends}

$(o)bondry$(oext) : $(baseDir)bondry.cpp  ${MultiCompileDepends}

$(o)civdtm$(oext) : $(baseDir)civdtm.cpp  ${MultiCompileDepends}

$(o)civuti$(oext) : $(baseDir)civuti.cpp  ${MultiCompileDepends}

$(o)clputi$(oext) : $(baseDir)clputi.cpp  ${MultiCompileDepends}

$(o)cmpmemuti$(oext) : $(baseDir)cmpmemuti.cpp  ${MultiCompileDepends}

$(o)cmputi$(oext) : $(baseDir)cmputi.cpp  ${MultiCompileDepends}

$(o)CommonDTM$(oext) : $(baseDir)CommonDTM.cpp  ${MultiCompileDepends}

$(o)coruti$(oext) : $(baseDir)coruti.cpp  ${MultiCompileDepends}

$(o)counts$(oext) : $(baseDir)counts.cpp  ${MultiCompileDepends}

$(o)crtsrf$(oext) : $(baseDir)crtsrf.cpp  ${MultiCompileDepends}

$(o)dalloc$(oext) : $(baseDir)dalloc.cpp  ${MultiCompileDepends}

$(o)delany$(oext) : $(baseDir)delany.cpp  ${MultiCompileDepends}

$(o)delftr$(oext) : $(baseDir)delftr.cpp  ${MultiCompileDepends}

$(o)delpnt$(oext) : $(baseDir)delpnt.cpp  ${MultiCompileDepends}

$(o)delsrf$(oext) : $(baseDir)delsrf.cpp  ${MultiCompileDepends}

$(o)deltin$(oext) : $(baseDir)deltin.cpp  ${MultiCompileDepends}

$(o)inroadstm$(oext) : $(baseDir)inroadstm.cpp  ${MultiCompileDepends}

$(o)FeatureClass$(oext) : $(baseDir)FeatureClass.cpp  ${MultiCompileDepends}

$(o)FeatureFunctions$(oext) : $(baseDir)FeatureFunctions.cpp  ${MultiCompileDepends}

$(o)filuti$(oext) : $(baseDir)filuti.cpp  ${MultiCompileDepends}

$(o)fixtol$(oext) : $(baseDir)fixtol.cpp  ${MultiCompileDepends}

$(o)fncpnt$(oext) : $(baseDir)fncpnt.cpp  ${MultiCompileDepends}

$(o)fndfil$(oext) : $(baseDir)fndfil.cpp  ${MultiCompileDepends}

$(o)fndftr$(oext) : $(baseDir)fndftr.cpp  ${MultiCompileDepends}

$(o)fndpnt$(oext) : $(baseDir)fndpnt.cpp  ${MultiCompileDepends}

$(o)fndsrf$(oext) : $(baseDir)fndsrf.cpp  ${MultiCompileDepends}

$(o)fndtin$(oext) : $(baseDir)fndtin.cpp  ${MultiCompileDepends}

$(o)ftruti$(oext) : $(baseDir)ftruti.cpp  ${MultiCompileDepends}

$(o)getact$(oext) : $(baseDir)getact.cpp  ${MultiCompileDepends}

$(o)getelv$(oext) : $(baseDir)getelv.cpp  ${MultiCompileDepends}

$(o)heapmanager$(oext) : $(baseDir)heapmanager.cpp  ${MultiCompileDepends}

$(o)hshftr$(oext) : $(baseDir)hshftr.cpp  ${MultiCompileDepends}

$(o)hshuti$(oext) : $(baseDir)hshuti.cpp  ${MultiCompileDepends}

$(o)insbnd$(oext) : $(baseDir)insbnd.cpp  ${MultiCompileDepends}

$(o)intsct$(oext) : $(baseDir)intsct.cpp  ${MultiCompileDepends}

$(o)intuti$(oext) : $(baseDir)intuti.cpp  ${MultiCompileDepends}

$(o)jonuti$(oext) : $(baseDir)jonuti.cpp  ${MultiCompileDepends}

$(o)lcluti$(oext) : $(baseDir)lcluti.cpp  ${MultiCompileDepends}

$(o)linlst$(oext) : $(baseDir)linlst.cpp  ${MultiCompileDepends}

$(o)load$(oext) : $(baseDir)load.cpp  ${MultiCompileDepends}

$(o)loddtm$(oext) : $(baseDir)loddtm.cpp  ${MultiCompileDepends}

$(o)mrkuti$(oext) : $(baseDir)mrkuti.cpp  ${MultiCompileDepends}

$(o)msguti$(oext) : $(baseDir)msguti.cpp  ${MultiCompileDepends}

$(o)paruti$(oext) : $(baseDir)paruti.cpp  ${MultiCompileDepends}

$(o)patch$(oext) : $(baseDir)patch.cpp  ${MultiCompileDepends}

$(o)plyuti$(oext) : $(baseDir)plyuti.cpp  ${MultiCompileDepends}

$(o)pntadd$(oext) : $(baseDir)pntadd.cpp  ${MultiCompileDepends}

$(o)pntdel$(oext) : $(baseDir)pntdel.cpp  ${MultiCompileDepends}

$(o)pntuti$(oext) : $(baseDir)pntuti.cpp  ${MultiCompileDepends}

$(o)points$(oext) : $(baseDir)points.cpp  ${MultiCompileDepends}

$(o)prcpnt$(oext) : $(baseDir)prcpnt.cpp  ${MultiCompileDepends}

$(o)prjuti$(oext) : $(baseDir)prjuti.cpp  ${MultiCompileDepends}

$(o)ptrind$(oext) : $(baseDir)ptrind.cpp  ${MultiCompileDepends}

$(o)rnguti$(oext) : $(baseDir)rnguti.cpp  ${MultiCompileDepends}

$(o)rotpnt$(oext) : $(baseDir)rotpnt.cpp  ${MultiCompileDepends}

$(o)savdtm$(oext) : $(baseDir)savdtm.cpp  ${MultiCompileDepends}

$(o)srfflg$(oext) : $(baseDir)srfflg.cpp  ${MultiCompileDepends}

$(o)srfuti$(oext) : $(baseDir)srfuti.cpp  ${MultiCompileDepends}

$(o)stsuti$(oext) : $(baseDir)stsuti.cpp  ${MultiCompileDepends}

$(o)tbluti$(oext) : $(baseDir)tbluti.cpp  ${MultiCompileDepends}

$(o)tckuti$(oext) : $(baseDir)tckuti.cpp  ${MultiCompileDepends}

$(o)TimeStampUtils$(oext) : $(baseDir)TimeStampUtils.cpp ${MultiCompileDepends}

$(o)tinstk$(oext) : $(baseDir)tinstk.cpp  ${MultiCompileDepends}

$(o)tinuti$(oext) : $(baseDir)tinuti.cpp  ${MultiCompileDepends}

$(o)trisrf$(oext) : $(baseDir)trisrf.cpp  ${MultiCompileDepends}

$(o)vecuti$(oext) : $(baseDir)vecuti.cpp  ${MultiCompileDepends}

$(o)xngchk$(oext) : $(baseDir)xngchk.cpp  ${MultiCompileDepends}

%include MultiCppCompileGo.mki

#----------------------------------------------------------------------
#   Link the mixed assembly
#----------------------------------------------------------------------
DLM_NAME            = $(appName)
DLM_DEST            = $(o)
DLM_OBJECT_PCH      = $(o)Stdafx$(oext) 
DLM_OBJECT_FILES    = $(MultiCompileObjectList) $(o)civguids$(oext)
DLM_EXPORT_DEST     = $(o)
DLM_NOINITFUNC      = 1
DLM_NOMSBUILTINS    = 1
DLM_NO_DEF          = 1
DLM_NO_DLS          = 1
DLM_NOENTRY         = 1

LINKER_LIBRARIES  = \
	$(ContextSubpartsLibs)$(libprefix)BentleyGeom$(libext) \
	Rpcrt4.lib

%ifdef CREATE_STATIC_LIBRARIES
  LINKER_LIBRARIES + $(ContextSubpartsLibs)$(libprefix)BeIconv$(libext)
%endif

DLM_CONTEXT_LOCATION        = $(ContextDeliveryDir)/
DLM_LIB_CONTEXT_LOCATION    = $(ContextDeliveryDir)/
DLM_CREATE_LIB_CONTEXT_LINK = 1

%include $(sharedMki)LinkLibrary.mki
