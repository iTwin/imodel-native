/*--------------------------------------------------------------------------------------+
|
|     $Source: Core/PublicAPI/dtm2dfns.h $
|
|  $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
|
+--------------------------------------------------------------------------------------*/
//__BENTLEY_INTERNAL_ONLY__

#pragma once
#ifndef __DTM2DFNS_H_

#define __DTM2DFNS_H_

#include <TerrainModel/TerrainModel.h>
#include <TerrainModel\Core\bcDTM.h>

BENTLEYDTM_EXPORT                     long bcdtmClock (void); 
BENTLEYDTM_EXPORT                   size_t bcdtmFread (void *fromP, size_t numBytes, size_t numRecs, FILE *fileP);
BENTLEYDTM_EXPORT                   size_t bcdtmFwrite (void *fromP, size_t numBytes, size_t numRecs, FILE *fileP);
BENTLEYDTM_EXPORT                      int bcdtmInitialise (void); 
BENTLEYDTM_Private           unsigned long dtmRandomNumber (unsigned long size);
BENTLEYDTM_Public            DTM_CIR_LIST* memclistAddrP (BC_DTM_OBJ *dtmP, long clPtr); 
BENTLEYDTM_Public        DTM_FEATURE_LIST* memflistAddrP (BC_DTM_OBJ *dtmP, long flPtr); 
BENTLEYDTM_Public          BC_DTM_FEATURE* memftableAddrP (BC_DTM_OBJ *dtmP, long feature); 
BENTLEYDTM_Public            DTM_TIN_NODE* memnodeAddrP (BC_DTM_OBJ *dtmP, long node); 
BENTLEYDTM_Public           DPoint3d* mempointAddrP (BC_DTM_OBJ *dtmP, long point); 
BENTLEYDTM_Public            unsigned long randomNumber (unsigned long size); 

///////// bcdtm3DModel/////////
BENTLEYDTM_Public                      int bcdtm3DModel_assignTinIndexesToIntersectPolygonsDtm (BC_DTM_OBJLIST *DesignTins, long NumDesignTins, TAG_POLYGON *IntPolys, long NumIntPolys);
BENTLEYDTM_Public                      int bcdtm3DModel_calculateDesignSurfaceVolumesDtm (BC_DTM_OBJLIST *designTinObjectsP, long numDesignTinObjects, long loadFlag, TAG_POLYGON *IntPolys, long NumIntPolys, MODEL_VOLUME **designVolumesPP, long *numDesignVolumesP);
BENTLEYDTM_Public                      int bcdtm3DModel_calculateGroundSurfaceVolumesDtm (BC_DTM_OBJLIST *groundTinObjectP, long numGroundTinObjects, BC_DTM_OBJLIST *designTinObjectsP, long numDesignTinObjects, long loadFlag, TAG_POLYGON *IntPolys, long NumIntPolys, MODEL_VOLUME **groundVolumesPP, long *numGroundVolumesP);
BENTLEYDTM_Public                      int bcdtm3DModel_determineInternalIntersectedTinHullPolygonsDtmObject (BC_DTM_OBJ *dtmP, TAG_POLYGON *IntPolys, long NumIntPolys);
BENTLEYDTM_Public                      int bcdtm3DModel_extractIntersectedTinHullPolygonsDtmObject (BC_DTM_OBJ *dtmP, TAG_POLYGON **IntPolys, long *NumIntPolys);
BENTLEYDTM_EXPORT                      int bcdtm3DModel_insertMissingHullBreakLinesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtm3DModel_intersectDesignTinHullsDtm (BC_DTM_OBJLIST *DesignTins, long NumDesignTins, TAG_POLYGON **IntPolys, long *NumIntPolys);
BENTLEYDTM_EXPORT                      int bcdtm3DModel_volumesDtm (BC_DTM_OBJLIST *designTinObjectsP, long numDesignTinObjects, BC_DTM_OBJLIST *groundTinObjectP, long numGroundTinObjects, long loadFlag, MODEL_VOLUME **designVolumesPP, long *numDesignVolumesP, MODEL_VOLUME **groundVolumesPP, long *numGroundVolumesP);

///////// bcdtmBtree/////////
BENTLEYDTM_Public                      int bcdtmBtree_addNode (BC_DTM_BTREE *btreeP, BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmBtree_createBtree (BC_DTM_BTREE **btreePP, long numNodes); 
BENTLEYDTM_Public                      int bcdtmBtree_destroyBtree (BC_DTM_BTREE **btreePP); 
BENTLEYDTM_Public                      int bcdtmBtree_findNode (BC_DTM_BTREE *btreeP, BC_DTM_OBJ *dtmP, long *nodeP, long *priorNodeP, long *nodeFoundP, long *nodeLevelP); 
BENTLEYDTM_EXPORT                      int bcdtmBtree_getArrayOfNodeValues (BC_DTM_BTREE *btreeP, BC_DTM_OBJ ***nodeValuesPPP, long *numNodeValuesP); 
BENTLEYDTM_Public                      int bcdtmBtree_removeNode (BC_DTM_BTREE *btreeP, long node); 

///////// bcdtmCheck/////////
BENTLEYDTM_Public                      int bcdtmCheck_dtmFeatureEndPointsDtmObject (BC_DTM_OBJ *dtmP, long reportErrors); 
BENTLEYDTM_Public                      int bcdtmCheck_forDuplicatePointOffsetPointersDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmCheck_forIntersectingTinHullLinesDtmObject (BC_DTM_OBJ *dtmP, long messageFlag);
BENTLEYDTM_Public                      int bcdtmCheck_forKnotInDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature); 
BENTLEYDTM_Public                      int bcdtmCheck_forPointOffsetIndexRangeErrorsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmCheck_forTinFeatureErrorsDtmObject (BC_DTM_OBJ *dtmP, long messageFlag, long *numTinErrorsP);
BENTLEYDTM_Public                      int bcdtmCheck_hullFeatureStateDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmCheck_precisionDtmObject (BC_DTM_OBJ *dtmP, long writeError); 
BENTLEYDTM_Public                      int bcdtmCheck_sortOrderDtmObject (BC_DTM_OBJ *dtmP, long writeError); 
BENTLEYDTM_EXPORT                      int bcdtmCheck_tinComponentDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmCheck_tinFeatureListsDtmObject (BC_DTM_OBJ *dtmP, long reportErrors);
BENTLEYDTM_Public                      int bcdtmCheck_topologyDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP, long writeError); 
BENTLEYDTM_Public                      int bcdtmCheck_topologyDtmObject (BC_DTM_OBJ *dtmP, long writeError); 
BENTLEYDTM_Public                      int bcdtmCheck_topologyRangeDtmObject (BC_DTM_OBJ *dtmP, long firstPoint, long lastPoint, long writeError);
BENTLEYDTM_EXPORT                      int bcdtmCheck_trianglesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmCheck_zeroSlopePolygonsDtmObject (BC_DTM_OBJ *dtmP);

///////// bcdtmClean/////////
BENTLEYDTM_Public                      int bcdtmClean_addActiveStringLine (DTM_STR_INT_TAB **ActIntTable, long *ActIntTableNe, long *ActIntTableMe, DTM_STR_INT_TAB *Pint); 
BENTLEYDTM_EXPORT                      int bcdtmClean_breakTopologyDtmObject (BC_DTM_OBJ *dtmP, double snapTolerance);
BENTLEYDTM_Public                      int bcdtmClean_buildStringLineIntersectionTable (DPoint3d *StringPts, long StringPtsNe, DTM_STR_INT_TAB **IntTable, long *IntTableNe); 
BENTLEYDTM_Public                      int bcdtmClean_checkP3DStringForKnots (DPoint3d *StringPts, long StringPtsNe, DTM_STR_INT_PTS **KnotPts, long *KnotPtsNe); 
BENTLEYDTM_Private                     int bcdtmClean_countNumberOfDtmFeatureTypeForTinPointDtmObject (BC_DTM_OBJ *dtmP, long dtmPnt, DTMFeatureType dtmFeatureType, long *numFeaturesP);
BENTLEYDTM_Public                      int bcdtmClean_deleteActiveStringLines (DTM_STR_INT_TAB *ActIntTable, long *ActIntTableNe, DTM_STR_INT_TAB *Pint); 
BENTLEYDTM_Public                      int bcdtmClean_determineActiveStringLineIntersections (DTM_STR_INT_TAB *ActIntTable, long ActIntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
BENTLEYDTM_Public                      int bcdtmClean_externalPointArrayPolygon (DPoint3d **P3dPts, long *NumP3dPts, double Pptol); 
BENTLEYDTM_Public                      int bcdtmClean_internalPointArrayPolygon (DPoint3d **P3dPts, long *NumP3dPts, double Pptol); 
BENTLEYDTM_Public                      int bcdtmClean_polygoniseTinLinesDtmObject (BC_DTM_OBJ *dtmP, long *tinLinesP);
BENTLEYDTM_Private                     int bcdtmClean_removeBreakLineSegmentAtTinPointDtmObject (BC_DTM_OBJ *dtmP, long dtmPnt) ;           
BENTLEYDTM_Private                     int bcdtmClean_removeDanglingBreaksDtmObject (BC_DTM_OBJ *dtmP, double snapTolerance, long *numRemovedP);                
BENTLEYDTM_Private                     int bcdtmClean_removeSliverBreaksDtmObject (BC_DTM_OBJ *dtmP, double snapTolerance, long *numRemovedP)  ;              
BENTLEYDTM_Private                     int bcdtmClean_retriangualteAlongBreakLineDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long *numSwappedP);
BENTLEYDTM_Public                      int bcdtmClean_retriangualteBreakLinesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmClean_scanForStringLineIntersections (DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
BENTLEYDTM_Public                      int bcdtmClean_setDtmPolygonalFeatureAntiClockwiseDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Public                      int bcdtmClean_setDtmPolygonalFeatureTypeAntiClockwiseDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType);
BENTLEYDTM_Public                      int bcdtmClean_stringLineIntersectionPointsCompareFunction (const DTM_STR_INT_PTS *Tp1, const DTM_STR_INT_PTS *Tp2); 
BENTLEYDTM_Public                      int bcdtmClean_stringLineIntersectionTableCompareFunction (const DTM_STR_INT_TAB *Tp1, const DTM_STR_INT_TAB *Tp2); 
BENTLEYDTM_Public                      int bcdtmClean_stringP3D (DPoint3d **StringPts, long *NumStringPts, double Pptol); 
BENTLEYDTM_EXPORT                      int bcdtmClean_validateDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, double ppTol, long *numErrorsP);
BENTLEYDTM_Public                      int bcdtmClean_validatePointArrayPolygon (DPoint3d **Polygon, long *numPolygonPts, long ForceClose, double Pptol); 
BENTLEYDTM_Public                      int bcdtmClean_validateStringP3D (DPoint3d **String, long *NumStringPts, double Pptol); 

///////// bcdtmCleanUp/////////
BENTLEYDTM_Public                      int bcdtmCleanUp_cleanDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmCleanUp_overrideCleanDtmObject (int (*overrideP) (BC_DTM_OBJ *dtmP));
BENTLEYDTM_Public                      int bcdtmCleanUp_overrideRollBackDtmObject (int (*overrideP) (BC_DTM_OBJ *dtmP, long rollBackOption));
BENTLEYDTM_Public                      int bcdtmCleanUp_resolveMultipleIntersectingPolygonalDtmObject (BC_DTM_OBJ *dtmP);

///////// bcdtmClip/////////
BENTLEYDTM_EXPORT                      int bcdtmClip_buildClippingTinFromFencePointsDtmObject (BC_DTM_OBJ **dtmPP, DPoint3dCP fencePtsP, long numFencePts); 
BENTLEYDTM_Public                      int bcdtmClip_checkForInsertedVoidInternalToVoidDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmClip_checkPolygonsIntersect (DPoint3d *Poly1, long numPts1, DPoint3d *Poly2, long numPts2, long *IntersectFlag); 
BENTLEYDTM_Private                     int bcdtmClip_checkReverseLineConnectionsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmClip_checkTinHullsIntersectDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, long *intersectResultP); 
BENTLEYDTM_EXPORT                      int bcdtmClip_cloneAndClipToPolygonDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **cloneDtmPP, DPoint3d *ptsP, long numPts, DTMClipOption clipOption);
BENTLEYDTM_EXPORT                      int bcdtmClip_cloneAndInsertIslandAndVoidBoundariesDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *bndyDtmP, BC_DTM_OBJ **clonedDtmPP); 
BENTLEYDTM_Private                     int bcdtmClip_copyTptrListToPointArrayDtmObject (BC_DTM_OBJ *dtmP, long startPnt, DPoint3d **tptrPtsPP, long *numTptrPtsP);
BENTLEYDTM_Public                      int bcdtmClip_determineFeatureExtentWithFenceDtmObject (BC_DTM_OBJ *tinP, DPoint3d *featurePtsP, long numFeaturePts, DTMFenceOption *featureExtentP);
BENTLEYDTM_Public                      int bcdtmClip_dtmFeaturesExternalToTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long mark); 
BENTLEYDTM_Public                      int bcdtmClip_dtmFeaturesInternalToTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long mark); 
BENTLEYDTM_Public                      int bcdtmClip_exclusivelyPolygonWithClipPolygonDtmObject (DPoint3d *poly1PtsP, long numPoly1Pts, DPoint3d *poly2PtsP, long numPoly2Pts, long *clipResult, DTM_POLYGON_OBJ **polyPP); 
BENTLEYDTM_Private                     int bcdtmClip_externalCleanPolygonalFeaturesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmClip_externalPolygonalDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long Feature, DPoint3d *ClipolyPtsP, long numClipPts); 
BENTLEYDTM_Public                      int bcdtmClip_externalToTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt); 
BENTLEYDTM_EXPORT                      int bcdtmClip_featurePointArrayToTinHullDtmObject (BC_DTM_OBJ *dtmP, DTMFenceOption clipOption, DPoint3d *featPtsP, long numFeatPts, long *clipResultP, DTM_POINT_ARRAY ***clipArraysPPP, long *numClipArraysP);
BENTLEYDTM_Public                      int bcdtmClip_fillTptrPolygonWithTrianglesDtmObject (BC_DTM_OBJ *dtmP, long point);
BENTLEYDTM_Public                      int bcdtmClip_findAndMergeAdjoiningVoidsDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature); 
BENTLEYDTM_Private                     int bcdtmClip_getExclusiveIntersectPolygonsDtmObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ *Poly); 
BENTLEYDTM_Public                      int bcdtmClip_groupSpotDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long mark); 
BENTLEYDTM_Private                     int bcdtmClip_initialiseMarkScanDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long mark); 
BENTLEYDTM_EXPORT                      int bcdtmClip_insertIslandAndVoidBoundariesDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *bndyDtmP);
BENTLEYDTM_Private                     int bcdtmClip_internalPolygonalDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, DPoint3d *clipPtsP, long numClipPts); 
BENTLEYDTM_Public                      int bcdtmClip_internalToTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long fillOption); 
BENTLEYDTM_Public                      int bcdtmClip_linearDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long mark); 
BENTLEYDTM_Public                      int bcdtmClip_modifyIslandHullsForExternalVoidsDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Private                     int bcdtmClip_placeLinearDtmFeatureSectionIntoTptrListDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long startPnt, long endPnt); 
BENTLEYDTM_EXPORT                      int bcdtmClip_pointInPointArrayPolygon (DPoint3d *PolyPts, long NumPolyPts, double Xp, double Yp); 
BENTLEYDTM_EXPORT                      int bcdtmClip_polygonToTinHullDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *polygonPtsP, long numPolygonPts, DTM_POINT_ARRAY ***polygonsPPP, long *numPolygnsP);
BENTLEYDTM_Public                      int bcdtmClip_resolveAdjoiningPolygonalFeaturesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmClip_scanFeatureListAndDetectAndFixConcaveSpansDtmObject (BC_DTM_OBJ *dtmP, long Mark); 
BENTLEYDTM_Public                      int bcdtmClip_scanFeatureListAndMarkConcaveSpansDtmObject (BC_DTM_OBJ *dtmP, long mark);
BENTLEYDTM_Private                     int bcdtmClip_scanToMarkedPointDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long startPnt, long mark, long *markPoint, long *priorPoint); 
BENTLEYDTM_Private                     int bcdtmClip_testForIslandHullLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, long *featureP);
BENTLEYDTM_Public                      int bcdtmClip_testForStartOfAdjoingFeatureDtmObject (BC_DTM_OBJ *dtmP, long Feature, long Pp, long Cp, long Np, DTMFeatureType DtmFeatureType, long *AdjFeat); 
BENTLEYDTM_Private                     int bcdtmClip_testForVoidOrHoleHullLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, long *featureP);
BENTLEYDTM_EXPORT                      int bcdtmClip_toPolygonDtmFile (WCharCP dtmFileP, WCharCP clipDtmFileP, DPoint3d *clipPtsP, long numClipPts, DTMClipOption clipOption);
BENTLEYDTM_EXPORT                      int bcdtmClip_toPolygonDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *ptsP, long numPts, DTMClipOption clipOption);
BENTLEYDTM_Public                      int bcdtmClip_toPolygonDtmObjects (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DPoint3d *userClipPtsP, long numUserClipPts, BC_DTM_OBJ **dtm3PP, BC_DTM_OBJ **dtm4PP); 
BENTLEYDTM_Public                      int bcdtmClip_toTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, DTMClipOption clipOption);
BENTLEYDTM_EXPORT                      int bcdtmClip_usingOffsetsDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **clipDtmPP, DPoint3d *userClipPtsP, long numUserClipPts, DTMClipOption clipOption, long isHorOffset, double horOffset, long isVertOffset, double vertOffset);
BENTLEYDTM_EXPORT                      int bcdtmClip_validateVoidIslandClippingBoundariesDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *bndyDtmP, BC_DTM_OBJ *clipDtmP);

///////// bcdtmClock/////////
BENTLEYDTM_EXPORT                   double bcdtmClock_elapsedTime (long Finish, long Start); 

///////// bcdtmCnv/////////

///////// bcdtmConnect/////////
BENTLEYDTM_Public                      int bcdtmConnect_buildConnectDtmObject (BC_DTM_OBJ **dtmPP, DTM_POINT_ARRAY **pointArrayPP, long numPointArray); 
BENTLEYDTM_Public                      int bcdtmConnect_buildConnectLineTablesFromStrings (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, DTM_CONNECT_LINE **connectLinesPP, long *numConnectLinesP, DTM_CONNECT_POINT **connectPointsPP, long *numConnectPointsP); 
BENTLEYDTM_Public                      int bcdtmConnect_buildConnectTablesFromTinLinesDtmObject (BC_DTM_OBJ *dtmP, DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, DTM_CONNECT_LINE **connectLinesPP, long *numConnectLinesP, DTM_CONNECT_POINT **connectPointsPP, long *numConnectPointsP); 
BENTLEYDTM_Private                     int bcdtmConnect_connectionLineDistanceCompareFunction (const DTM_CONNECTION_LINE *conLine1P, const DTM_CONNECTION_LINE *conLine2P); 
BENTLEYDTM_Private                     int bcdtmConnect_connectionLinePointsCompareFunction (const DTM_CONNECTION_LINE *conLine1P, const DTM_CONNECTION_LINE *conLine2P); 
BENTLEYDTM_EXPORT                      int bcdtmConnect_dtmFeatureTypeOccurrencesInDtmObject (BC_DTM_OBJ *dataP, DTMFeatureType dtmFeatureType, DTM_CONNECT_LINE **connectLinesPP, long *numConnectLinesP, DTM_CONNECT_POINT **connectPointsPP, long *numConnectPointsP, long *numLineConnectionsP); 
BENTLEYDTM_Private                     int bcdtmConnect_getNumberOfDrapeBreakBetweenPointsDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long endPnt, long *numBreaksP); 
BENTLEYDTM_Private                     int bcdtmConnect_lineEndPointsCompareFunction (const DPoint3d *p3d1P, const DPoint3d *p3d2P); 
BENTLEYDTM_Private                     int bcdtmConnect_lineStringsFromStartPoint (DTM_CONNECT_LINE *connectLinesP, long numConnectLines, DTM_CONNECT_POINT *connectPointsP, long numConnectPoints, long startPoint, long *numSolutionsP, DTM_CONNECTED_STRING **connectStringPP, long *numConnectStringP, long *connectResultP, long *connectCloseP, double *connectLengthP); 
BENTLEYDTM_Private                     int bcdtmConnect_lineStringsGetNextConnectPoint (DTM_CONNECT_POINT *connectPointsP, long *lineMarkP, long point, long *nextPointP, double *lengthP); 
BENTLEYDTM_Private                     int bcdtmConnect_lineStringsUsingConnectionTables (DTM_CONNECT_LINE *connectLinesP, long numConnectLines, DTM_CONNECT_POINT *connectPointsP, long numConnectPoints, DTM_CONNECTED_STRING **connectStringPP, long *numConnectStringP, int *connectResultP, int *connectCloseP, double *connectLengthP); 
BENTLEYDTM_Private                     int bcdtmConnect_releaseConnectPointsMemory (DTM_CONNECT_POINT **connectPtsPP, long numConnectPts); 
BENTLEYDTM_EXPORT                      int bcdtmConnect_reportValidationErrorsInConnectStrings (DTM_POINT_ARRAY **lineStringsPP, DTM_CONNECT_INPUT_STRING_ERROR *stringErrorsP, long numStringErrors, WCharCP reportFileP); 
BENTLEYDTM_Private                     int bcdtmConnect_storeConnectionLineDtmObject (BC_DTM_OBJ *dtmP, DTM_CONNECTION_LINE **conLinesPP, long fromPoint, long toPoint, long *numConLinesP, long *memConLinesP, long memConLinesInc); 
BENTLEYDTM_EXPORT                      int bcdtmConnect_strings (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, DTM_CONNECT_INPUT_STRING_ERROR **stringErrorsPP, long *numStringErrorsP, DTM_CONNECTED_STRING **connectedStringPP, long *numConnectedStringsP, int *connectedStringResultP, int *connectedStringCloseP, double *connectedStringLengthP); 
BENTLEYDTM_Private                     int bcdtmConnect_testForConnectedStringClosureDtmObject (BC_DTM_OBJ *dtmP, DTM_POINT_ARRAY **lineStringsPP, DTM_CONNECTED_STRING *connectedStringP, long numConnectedStrings, int *stringCloseP); 
BENTLEYDTM_EXPORT                      int bcdtmConnect_validateConnectLineStrings (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, DTM_CONNECT_INPUT_STRING_ERROR **stringErrorsPP, long *numStringErrorsP); 

///////// bcdtmConvert/////////
BENTLEYDTM_Public                      int bcdtmConvert_eliminateBlanks (char *msgStr); 

///////// bcdtmData/////////
BENTLEYDTM_Public                      int bcdtmData_appendDtmObjectsIfAdjacentDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, double xyTolerance, double zTolerance, long *appendFlag);
BENTLEYDTM_EXPORT                      int bcdtmData_bulkFeatureIdDeleteDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId *dtmFeatureIdP, long numDtmFeatureId);
BENTLEYDTM_EXPORT                      int bcdtmData_bulkUserTagDeleteDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag *dtmUserTagP, long numDtmUserTag);
BENTLEYDTM_EXPORT                      int bcdtmData_changeAllOccurrencesOfDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType1, DTMFeatureType dtmFeatureType2);
BENTLEYDTM_Public                      int bcdtmData_checkForKnots (DPoint3d *Polygon, long numPts, long *IntFlag); 
BENTLEYDTM_Public                      int bcdtmData_checkPolygonForKnots (DPoint3d *PolygonumPolyPts, long NumPolygonumPolyPts, long *KnotFlag); 
BENTLEYDTM_EXPORT                      int bcdtmData_compactFeatureTableDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmData_compactUntriangulatedFeatureTableDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmData_copyDtmFeatureTypeDtmObject (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DTMFeatureType dtmFeatureType, DTMFeatureType copyDtmFeatureType, long copyOption, DTMUserTag dtmUserTag, DTMFeatureId dtmFeatureId);
BENTLEYDTM_EXPORT                      int bcdtmData_copyInitialDtmFeaturePointsToPointArrayDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, DPoint3d **featPtsPP, long *numFeatPtsP);
BENTLEYDTM_Public                      int bcdtmData_copyParallelPointArrayPolygon (double Offset, DPoint3d *P3dPts, long NumP3dPts, DPoint3d **ParallelPts, long *NumParallelPts); 
BENTLEYDTM_Public                      int bcdtmData_copyTaggedDtmFeatureTypeOccurrencesToDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DTMFeatureType dtmFeatureType, DTMUserTag userTag);
BENTLEYDTM_Public                      int bcdtmData_countNumberOfContinuingDtmFeaturesForPointDtmObject (BC_DTM_OBJ *dtmP, long point, long *numFeaturesP);
BENTLEYDTM_Private                     int bcdtmData_createFeatureIdIndexDtmObject (BC_DTM_OBJ *dtmP, DTM_FEATURE_INDEX **dtmFeatureIndexPP, long *numDtmFeatureIndexP);
BENTLEYDTM_Private                     int bcdtmData_createUserTagIndexDtmObject (BC_DTM_OBJ *dtmP, DTM_FEATURE_INDEX **dtmFeatureIndexPP, long *numDtmFeatureIndexP);
BENTLEYDTM_EXPORT                      int bcdtmData_deleteAllDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmData_deleteAllOccurrencesOfDtmFeaturesWithFeatureIdDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId userFeatureId);
BENTLEYDTM_EXPORT                      int bcdtmData_deleteAllOccurrencesOfDtmFeaturesWithUserTagDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag userTag);
BENTLEYDTM_EXPORT                      int bcdtmData_deleteAllOccurrencesOfDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType);
BENTLEYDTM_EXPORT                      int bcdtmData_deleteAllRollBackFeaturesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmData_deleteAllTinErrorFeaturesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmData_featureIdCompareFunction (const DTMFeatureId *id1P, const DTMFeatureId *id2P);
BENTLEYDTM_Private                     int bcdtmData_findFirstFeatureIndexOccurrence (Int64 feature, DTM_FEATURE_INDEX *dtmFeatureIndexP, long numDtmFeatureIndex, long *offsetP);
BENTLEYDTM_EXPORT                      int bcdtmData_getAssociatedDtmFeatureTypeAndCodes (long featureCode, DTMFeatureType *dtmFeatureTypeP, long *startCodeP, long *nextCodeP); 
BENTLEYDTM_Public                      int bcdtmData_getDtmFeatureStateNameFromDtmFeatureState (DTMFeatureState dtmFeatureState, char *dtmFeatureStateName);
BENTLEYDTM_Public                      int bcdtmData_getDtmFeatureTypeFromDtmFeatureTypeName (char *dtmFeatureTypeName, DTMFeatureType* dtmFeatureTypeP); 
BENTLEYDTM_EXPORT                      int bcdtmData_getDtmFeatureTypeNameFromDtmFeatureType (DTMFeatureType dtmFeatureType, char *dtmFeatureTypeName); 
BENTLEYDTM_Public                      int bcdtmData_getFeatureCodesForDtmFeatureType (DTMFeatureType dtmFeatureType, long *startCodeP, long *nextCodeP); 
BENTLEYDTM_Public                      int bcdtmData_getHullsForIntersectingPolyonalFeaturesDtmObject (BC_DTM_OBJ *polygonalDtmP, DTMFeatureType dtmFeatureType);
BENTLEYDTM_Public                      int bcdtmData_getInitialPointsForDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, DPoint3d **featPtsPP, long *numFeatPtsP);
BENTLEYDTM_Public                      int bcdtmData_moveTaggedDtmFeatureTypeOccurrencesToDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DTMFeatureType dtmFeatureType, DTMUserTag userTag);
BENTLEYDTM_EXPORT                      int bcdtmData_moveToP3DArrayDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTMUserTag *userTagP, DTMFeatureId *featureIdP, DPoint3d **featurePtsPP, long *numFeaturePtsP);
BENTLEYDTM_EXPORT                      int bcdtmData_moveXYZDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double z);
BENTLEYDTM_EXPORT                      int bcdtmData_moveXYZUsingTagDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag usertag, double x, double y, double z);
BENTLEYDTM_EXPORT                      int bcdtmData_moveZDtmObject (BC_DTM_OBJ *dtmP, long moveOption, double z);
BENTLEYDTM_EXPORT                      int bcdtmData_moveZUsingTagDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag usertag, long moveOption, double z);
BENTLEYDTM_EXPORT                      int bcdtmData_removeExternalMaxSideTrianglesDtmObject (BC_DTM_OBJ *dtmP, double maxSide);
BENTLEYDTM_EXPORT                      int bcdtmData_removeExternalSliverTrianglesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmData_replaceDtmFeaturePointsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId featureId, DPoint3d *featurePtsP, long numFeaturePts);
BENTLEYDTM_EXPORT                      int bcdtmData_replaceDtmFeaturePointsMultipleDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId featureId, const Bentley::TerrainModel::DtmVectorString& features);
BENTLEYDTM_Public                      int bcdtmData_resolveDataStateIslandsVoidsAndHolesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmData_resolveIntersectingPolygonalDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType);
BENTLEYDTM_Public                      int bcdtmData_resolveTinStateIslandsVoidsAndHolesDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **resolvedDtmPP);
BENTLEYDTM_Public                      int bcdtmData_storePointP3D (double x, double y, double z, DPoint3d **Points, long *numPts, long *memPts, long memPtsInc); 
BENTLEYDTM_Public                      int bcdtmData_testForAdjacenyOfDtmObjectsDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, double Xmin, double Ymin, double Zmin, double Xmax, double Ymax, double Zmax, double xyTolerance, double zTolerance, long *adjacencyFlagP);
BENTLEYDTM_Public                      int bcdtmData_testForValidDataObjectDtmFeatureType (DTMFeatureType dtmFeatureType); 
BENTLEYDTM_EXPORT                      int bcdtmData_testForValidDtmObjectExportFeatureType (DTMFeatureType dtmFeatureType); 
BENTLEYDTM_Public                      int bcdtmData_testForValidDtmObjectImportFeatureType (DTMFeatureType dtmFeatureType);
BENTLEYDTM_Public                      int bcdtmData_testForValidLatticeObjectDtmFeatureType (DTMFeatureType dtmFeatureType); 
BENTLEYDTM_Public                      int bcdtmData_testForValidPolygonalDtmFeatureType (DTMFeatureType dtmFeatureType);
BENTLEYDTM_Public                      int bcdtmData_testForValidTinObjectDtmFeatureType (DTMFeatureType dtmFeatureType); 
BENTLEYDTM_Private                     int bcdtmData_userTagCompareFunction (const DTMUserTag *ut1P, const DTMUserTag *ut2P);
BENTLEYDTM_EXPORT                      int bcdtmData_validateMnDotVoidsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmData_validatePolygonalDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP);

///////// bcdtmDelta/////////
BENTLEYDTM_Private                     int bcdtmDelta_calculateDeltaTinToTinDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P); 
BENTLEYDTM_EXPORT                      int bcdtmDelta_cloneAndCreateDeltaTinToElevationDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **deltaDtmPP, double elevation, DPoint3d *deltaPtsP, long numDeltaPts);
BENTLEYDTM_EXPORT                      int bcdtmDelta_cloneAndCreateDeltaTinToSurfaceDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, BC_DTM_OBJ **deltaDtmPP, DPoint3d *deltaPtsP, long numDeltaPts); 
BENTLEYDTM_Private                     int bcdtmDelta_copyTinLinesToPointLinesDtmObject (BC_DTM_OBJ *dtmP, PNTLINE **tinLinesPP, long *numTinLinesP); 
BENTLEYDTM_Private                     int bcdtmDelta_copyTinPtsToP3DArrayDtmObject (BC_DTM_OBJ *dtmP, DPoint3d **tinPtsPP, long *numTinPtsP); 
BENTLEYDTM_Private                     int bcdtmDelta_copyVoidsAndIslandsToPolygonObjectDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DTM_POLYGON_OBJ **polyPP); 
BENTLEYDTM_EXPORT                      int bcdtmDelta_createDeltaLatticeToElevationDtmObject (BC_DTM_OBJ *dtm1P, DTM_LAT_OBJ **latticePP, DPoint3d *deltaPtsP, long numDeltaPts, double elevation, long numLatticePts); 
BENTLEYDTM_EXPORT                      int bcdtmDelta_createDeltaLatticeToSurfaceDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DTM_LAT_OBJ **latticePP, DPoint3d *deltaPtsP, long numDeltaPts, long numLatticePts); 
BENTLEYDTM_EXPORT                      int bcdtmDelta_createDeltaSurfaceDtmFile (WCharCP fromFileP, WCharCP toFileP, WCharCP deltaFileP, long deltaOption, long modelOption, DPoint3d *polyPtsP, long numPolyPts, long numLatticePts, double elevation); 
BENTLEYDTM_EXPORT                      int bcdtmDelta_createDeltaTinToElevationDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ **dtm2PP, DPoint3d *deltaPtsP, long numDeltaPts, double elevation); 
BENTLEYDTM_EXPORT                      int bcdtmDelta_createDeltaTinToSurfaceDtmObject (BC_DTM_OBJ **dtm1PP, BC_DTM_OBJ **dtm2PP, BC_DTM_OBJ **deltaDtmPP, DPoint3d *deltaPtsP, long numDeltaPts); 
BENTLEYDTM_EXPORT                      int bcdtmDelta_createGeopakPortDeltaSurfaceDtmFile (WCharCP fromFileP, WCharCP toFileP, void **deltaObjPP, long deltaOption, long modelOption, DPoint3d *polyPtsP, long numPolyPts, long numLatticePts, double elevation); 
BENTLEYDTM_Private                     int bcdtmDelta_drapeTin1PointsOnTin2DtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P); 
BENTLEYDTM_Private                     int bcdtmDelta_insertTinIntoTinDtmObject (BC_DTM_OBJ *dtmP, DPoint3d **tinPtsPP, long numTinPts, PNTLINE **tinLinesPP, long numTinLines); 
BENTLEYDTM_Public                      int bcdtmDelta_intersectVoidsAndIslands (DTM_POLYGON_OBJ *Poly, DTM_POLYGON_OBJ **IntPoly); 
BENTLEYDTM_Public                      int bcdtmDelta_intersectVoidsInPolygonObject (DTM_POLYGON_OBJ *Poly, DTM_POLYGON_OBJ **IntPoly); 

///////// bcdtmDraiange/////////
//BENTLEYDTM_Private                     int bcdtmDraiange_markPointsInternalToAZeroSlopeTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long *zeroIndexP, long mark, long *numMarkedP);

///////// bcdtmDrainage/////////
/*
BENTLEYDTM_Private                     int bcdtmDrainage_adjustPondElementToFreeBoardDtmObject (DPoint3d **pondPtsPP, long *numPondPtsP, double freeBoard, double pondSlope, double cornerStrokeTolerance);
BENTLEYDTM_Private                     int bcdtmDrainage_appendBermToPondDtmObject (BC_DTM_OBJ *pondSideSlopesP, long isBermFillOnly, BC_DTM_OBJ *fillTinP, double bermSlope, double bermWidth, long isCrown, double crownWidth, double cornerStrokeTolerance);
BENTLEYDTM_Private                     int bcdtmDrainage_ascentLinesSlopeCompareFunction (const DTM_ASCENT_LINE *aline1P, const DTM_ASCENT_LINE *aline2P); 
BENTLEYDTM_Public                      int bcdtmDrainage_ascentStackFiFo (long action, DTM_ASCENT_LINE *ascentLineP, long *popedP); 
BENTLEYDTM_Private                     int bcdtmDrainage_ascentStackLoadFunction (DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId, DPoint3d *featurePtsP, size_t numFeaturePts, void *userP); 
BENTLEYDTM_Public                      int bcdtmDrainage_buildTriangleHydrologyTableDtmObject (BC_DTM_OBJ *dtmP, DTM_TRG_HYD_TABLE **trgHydTabPP, DTM_TRG_INDEX_TABLE *trgIdxTabP); 
BENTLEYDTM_Public                      int bcdtmDrainage_buildTriangleIndexTableDtmObject (BC_DTM_OBJ *dtmP, DTM_TRG_INDEX_TABLE **trgIdxTabPP, long *numTrianglesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_calculateCatchmentsDtmObject (BC_DTM_OBJ *dtmP, double falseLowDepth, long refineOption, long useFence, DTMFenceOption fenceOption, DPoint3d  *fencePtsP, long numFencePts, DTMFeatureCallback callBackFunctionP, void *userP, long *numCatchmentsP);
BENTLEYDTM_Public                      int bcdtmDrainage_calculateDrainageTablesDtmObject (BC_DTM_OBJ *dtmP, double falseLowDepth);
BENTLEYDTM_Private                     int bcdtmDrainage_calculateGradeSlopeAngleAcrossTriangleFaceDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double Sx, double Sy, double Sz, double GradeSlope, long *GradePointFound, double *GradeSlopeAngle); 
BENTLEYDTM_Private                     int bcdtmDrainage_calculateGradeSlopeAnglesForTriangleDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double GradeSlope, long *GradeSlopeAngleFound, double *GradeSlopeAngleOne, double *GradeSlopeAngleTwo); 
BENTLEYDTM_Public                      int bcdtmDrainage_calculateIntersectOfApexRadialWithTriangleBaseDtmObject (BC_DTM_OBJ *dtmP, long apexPnt, long basePnt1, long basePnt2, double angle, double *xP, double *yP, double *zP, long *intPntP); 
BENTLEYDTM_Public                      int bcdtmDrainage_calculateIntersectOfRadialWithTinLineDtmObject (BC_DTM_OBJ *dtmP, double sRadX, double sRadY, double eRadX, double eRadY, long dtmPnt1, long dtmPnt2, double *xP, double *yP, double *zP, long *intPntP); 
BENTLEYDTM_Public                      int bcdtmDrainage_calculateRadialIntersectionPointOnTriangleBaseDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, long pnt3, double angle, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP); 
BENTLEYDTM_Private                     int bcdtmDrainage_calculateVolumeSurfaceToPlaneDtmObject (BC_DTM_OBJ *tinObjectP, double elevation, double *cutP, double *fillP, double *balanceP, double *areaP);
BENTLEYDTM_Public                      int bcdtmDrainage_catchmentCallBackFunction (DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId, DPoint3d *featurePtsP, size_t numFeaturePts, void *userP);
BENTLEYDTM_Public                      int bcdtmDrainage_catchmentLoadFunction (DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId, DPoint3d *featurePtsP, size_t numFeaturePts, void *userP); 
BENTLEYDTM_Public                      int bcdtmDrainage_checkForAngleBetweenTrianglePointsDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2, long p3, double angle);
BENTLEYDTM_Public                      int bcdtmDrainage_checkForFalseLowPointDtmObject (BC_DTM_OBJ *dtmP, double falseLowDepth, long lowPoint, long *falseLowPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_checkForFlowOutFromSumpLinePointsDtmObject (BC_DTM_OBJ *dtmP, DTM_SUMP_LINES *sumpLinesP, long numSumpLines, long *exitPointP, long *priorPointP, long *nextPointP); 
BENTLEYDTM_Public                      int bcdtmDrainage_checkForLineOnHullLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long *hullLineP); 
BENTLEYDTM_Public                      int bcdtmDrainage_checkForPointOnHullLineDtmObject (BC_DTM_OBJ *dtmP, long Point, long *HullLine); 
BENTLEYDTM_Public                      int bcdtmDrainage_checkForSumpOrRidgeLineDtmObject (BC_DTM_OBJ *dtmP, long useTables, long linePoint1, long linePoint2, long antPoint, long clkPoint, DTMFeatureType *lineTypeP); 
BENTLEYDTM_Public                      int bcdtmDrainage_checkTraceToSumpLineDtmObject (BC_DTM_OBJ *dtmP, long checkOption, double falseLowDepth, long traceOverZeroSlope, long useTables, long pnt1, long pnt2, long pnt3, double x, double y, double z, double sumpX, double sumpY, double sumpZ, long sumpPoint1, long sumpPoint2, long *traceToSumpP);
BENTLEYDTM_Public                      int bcdtmDrainage_cleanCatchmentPolygonDtmObject (BC_DTM_OBJ *dtmP, DPoint3d **polygonPtsPP, long *numPolygonPtsP);
BENTLEYDTM_Private                     int bcdtmDrainage_concatenateZeroSlopeSumpLinesDtmObject (BC_DTM_OBJ *dtmP, long sP1, long sP2, DTM_SUMP_LINES **sumpLinesPP, long *numSumpLinesTableP); 
BENTLEYDTM_Private                     int bcdtmDrainage_copyAscentTracePointsToPointArray (DTM_POINT_ARRAY ***pointArraysPPP, long *numPointArraysP, long *memPointArraysP, long memPointArraysInc); 
BENTLEYDTM_Public                      int bcdtmDrainage_copyCatchmentTrianglesDtmObject (BC_DTM_OBJ *dtmP, long startPoint, BC_DTM_OBJ **catchDtmPP);
BENTLEYDTM_Private                     int bcdtmDrainage_copyElementToMixedObjectDtmObject (BC_DTM_OBJ *dtmElementP, BC_DTM_OBJ **dtmPP);
BENTLEYDTM_Private                     int bcdtmDrainage_copyGlobalTracePointsToPointArray (DTM_POINT_ARRAY ***pointArraysPPP, long *numPointArraysP, long *memPointArraysP, long memPointArraysInc); 
BENTLEYDTM_Public                      int bcdtmDrainage_deletePointOnTinHullDtmObject (BC_DTM_OBJ *dtmP, long point);
BENTLEYDTM_Private                     int bcdtmDrainage_descentLinesSlopeCompareFunction (const DTM_DESCENT_LINE *aline1P, const DTM_DESCENT_LINE *aline2P); 
BENTLEYDTM_Private                     int bcdtmDrainage_designPondToATargetElevationDtmObject (DPoint3d *pondPtsP, long numPondPts, long outsideInsideOpt, double elevation, double pondSlope, double freeBoard, long isBerm, long isBermFillOnly, BC_DTM_OBJ *fillTinP, double bermSlope, double bermWidth, long isCrown, double crownWidth, double cornerStrokeTolerance, BC_DTM_OBJ **designedPond, long *designedPondFlag, double *designedPondElevation, double *designedPondVolume);
BENTLEYDTM_Private                     int bcdtmDrainage_designPondToATargetVolumeDtmObject (DPoint3d *pondPtsP, long numPondPts, long outsideInsideOpt, double designVolume, double pondSlope, double freeBoard, long isBerm, long isBermFillOnly, BC_DTM_OBJ *fillTinP, double bermSlope, double bermWidth, long isCrown, double crownWidth, double cornerStrokeTolerance, BC_DTM_OBJ **designedPond, long *designedPondFlag, double *designedPondElevation, double *designedPondVolume);
BENTLEYDTM_EXPORT                      int bcdtmDrainage_designPondToATargetVolumeOrElevationDtmObject (BC_DTM_OBJ *pondObjectP, long *pondFlag, double *pondElevation, double *pondVolume, DPoint3d *pondPts, long numPondPts, long outsideInsideOpt, long volElevOpt, double volume, double elevation, double pondSlope, double freeBoard, long isBerm, double bermSlope, double bermWidth, long isCrown, double crownWidth, double cornerStrokeTolerance, long isBermFillOnly, BC_DTM_OBJ *fillTinP, double fillSlope);
BENTLEYDTM_Public                      int bcdtmDrainage_destroyDrainageTablesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmDrainage_destroyMixedElementObjectDtmObject (BC_DTM_OBJ **dtmPP);
BENTLEYDTM_EXPORT                      int bcdtmDrainage_determineCatchmentForPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double maxPondDepth, long *catchmentDeterminedP, long *catchmentClosureP, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_determineCatchmentsDtmFile (WCharCP dtmFileP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numCatchmentsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_determineCatchmentsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numCatchmentsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_determineLowPointPondAboutPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double falseLowDepth, DTMFeatureCallback loadFunctionP, long drawPond, long *pondDeterminedP, double *pondElevationP, double *pondDepthP, double *pondAreaP, double *pondVolumeP, void *userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_determineLowPointPondsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long loadFlag, long buildTable, void* userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_determinePondAboutLowPointDtmObject (BC_DTM_OBJ *dtmP, long lowPoint, DTMFeatureCallback loadFunctionP, long loadFlag, long boundaryFlag, long *exitPointP, long *priorPointP, long *nextPointP, DTM_POLYGON_OBJ **polygonPP, void* userP); 
BENTLEYDTM_Public                      int bcdtmDrainage_determinePondAboutZeroSlopeSumpLineDtmObject (BC_DTM_OBJ *dtmP, long sP1, long sP2, DTMFeatureCallback loadFunctionP, long loadFlag, long boundaryFlag, long *exitPointP, long *priorPointP, long *nextPointP, DTM_SUMP_LINES **sumpLinesPP, long *numSumpLinesP, DTM_POLYGON_OBJ **polygonPP, void *userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_determinePondAboutZeroSlopeTriangleDtmObject (BC_DTM_OBJ *dtmP, long dtmPnt1, long dtmPnt2, long dtmPnt3, int (*loadFunctionP) (), long loadFlag, long boundaryFlag, long *exitPointP, long *priorPointP, long *nextPointP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_determinePondsDtmFile (WCharCP dtmFileP, DTMFeatureCallback loadFunctionP, long loadFlag, long buildTable, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_determinePondsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long loadFlag, long buildTable, void* userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_determineRefinedCatchmentBoundaryDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *catchmentDtmP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long catchmentID, void *userP, long *numCatchmentsP);
BENTLEYDTM_Private                     int bcdtmDrainage_determineZeroSlopeSumpLinePondsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long loadFlag, long buildTable, void *userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_determineZeroSlopeTrianglePondsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long loadFlag, long buildTable, void *userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_expandPondAboutPointDtmObject (BC_DTM_OBJ *dtmP, long lowPoint, double lastArea, long *startPointP, double *areaP);
BENTLEYDTM_Public                      int bcdtmDrainage_expandPondAtLowPointElevationDtmObject (BC_DTM_OBJ *dtmP, long *startPointP, double lowPointElevation, long *resetLowPointP);
BENTLEYDTM_Public                      int bcdtmDrainage_expandPondOutOverZeroSlopePolygonDtmObject (BC_DTM_OBJ *dtmP, long   *startPntP, double lowPointElevation, long   zeroSlopePolygon);
BENTLEYDTM_Public                      int bcdtmDrainage_expandPondToExitPointDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long *exitPointP, long *priorPointP, long *nextPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_extractClosingAscentTracesDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long nextPnt, DTMDirection direction, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP); 
BENTLEYDTM_Private                     int bcdtmDrainage_extractClosingCatchmentBoundaryDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long nextPnt, DTMDirection direction, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP); 
BENTLEYDTM_Private                     int bcdtmDrainage_extractNoneClosingCatchmentBoundaryDtmObject (BC_DTM_OBJ *dtmP, long startPnt, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP); 
BENTLEYDTM_Public                      int bcdtmDrainage_extractPointCatchmentFromAscentTracesDtmObject (BC_DTM_OBJ *dtmP, double sumpX, double sumpY, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP); 
BENTLEYDTM_Public                      int bcdtmDrainage_extractPointCatchmentFromDtmObject (BC_DTM_OBJ *dtmP, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP); 
BENTLEYDTM_Private                     int bcdtmDrainage_extractPondBoundaryDtmObject (BC_DTM_OBJ *dtmP, double pondElevation, long startPoint, long nextPoint, DTMFeatureCallback loadFunctionP, long loadFlag, long boundaryFlag, DTM_POLYGON_OBJ **polygonPP, void* userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_findLowPointEntryInLowPointPondTableDtmObject (BC_DTM_OBJ *dtmP, long lowPoint, long *exitPointP, long *priorPointP, long *nextPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_findLowPointEntryInSumpLinePondTableDtmObject (BC_DTM_OBJ *dtmP, long lowPoint, long *exitPointP, long *priorPointP, long *nextPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_findSumpLineEntryInSumpLinePondTableDtmObject (BC_DTM_OBJ *dtmP, long sP1, long sP2, long *exitPointP, long *priorPointP, long *nextPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_fixDrainagePrecisonDtmObject (BC_DTM_OBJ *dtmP, double insertAngle, long trgPnt1, long trgPnt2, long trgPnt3, long trgPnt4, double pointX, double pointY, long *nextPntP, double *nextXP, double *nextYP, long *fixTypeP, long *processP); 
BENTLEYDTM_Private                     int bcdtmDrainage_flowLinesAscendingSlopeCompareFunction (const DTM_DRAINAGE_FLOW_LINE *fline1P, const DTM_DRAINAGE_FLOW_LINE *fline2P); 
BENTLEYDTM_Private                     int bcdtmDrainage_flowLinesDescendingSlopeCompareFunction (const DTM_DRAINAGE_FLOW_LINE *fline1P, const DTM_DRAINAGE_FLOW_LINE *fline2P); 
BENTLEYDTM_Private                     int bcdtmDrainage_freeTracePoints (void); 
BENTLEYDTM_Public                      int bcdtmDrainage_getAscentZeroSlopeTriangleToTraceOverDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, double lastAngle, long *trgPnt1P, long *trgPnt2P); 
BENTLEYDTM_Public                      int bcdtmDrainage_getDescentZeroSlopeTriangleToTraceOverDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, double lastAngle, long *trgPnt1P, long *trgPnt2P); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_getDrainageFlowLinesForPointDtmObject (BC_DTM_OBJ *dtmP, long useTables, long sortOrder, long point, DTM_DRAINAGE_FLOW_LINE **flowLinesPP, long *numFlowLinesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_getFirstGradeTracePointDtmObject (BC_DTM_OBJ *dtmP, double Sx, double Sy, double Sz, double Slope, long P1, long P2, long P3, long *TracePointFound, long *Np1, long *Np2, long *Np3, double *Nx, double *Ny, double *Nz); 
BENTLEYDTM_Public                      int bcdtmDrainage_getFirstTracePointDtmObject (BC_DTM_OBJ *dtmP, long flowDirection, long pnt1, long pnt2, long pnt3, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP); 
BENTLEYDTM_Public                      int bcdtmDrainage_getFirstTracePointFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, long flowDirection, long pnt1, long pnt2, long pnt3, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP); 
BENTLEYDTM_Private                     int bcdtmDrainage_getFirstTrianglePointFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, long traceDirection, long pnt1, long pnt2, long *nxtPntP); 
BENTLEYDTM_Public                      int bcdtmDrainage_getMaximumAscentForLineDtmObject (BC_DTM_OBJ *dtmP, long dtmPnt1, long dtmPnt2, long *ascentTypeP, double *ascentSlopeP, double *ascentAngleP, long *ascentPnt1P, long *ascentPnt2P, long *ascentPnt3P); 
BENTLEYDTM_Private                     int bcdtmDrainage_getNextMaximumAscentLineDtmObject (BC_DTM_OBJ *dtmP, long lastPoint, long point, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *processP); 
BENTLEYDTM_Private                     int bcdtmDrainage_getNextPointOutFromHighPointDtmObject (BC_DTM_OBJ *dtmP, long UseTable, long HighPoint, double falseHighElevation, long *Np); 
BENTLEYDTM_Public                      int bcdtmDrainage_getNextPointOutFromLowPointDtmObject (BC_DTM_OBJ *dtmP, long lowPoint, long mark, double falseLowDepth, long *nextPointOutP); 
BENTLEYDTM_Private                     int bcdtmDrainage_getPriorAscentPointDtmObject (BC_DTM_OBJ *dtmP, long point, long direction, double lastAngle, long *lastPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_getSumpLineOffsetDtmObject (BC_DTM_OBJ *dtmP, long sumpPoint1, long sumpPoint2, long *sumpLineOffsetP); 
BENTLEYDTM_Public                      int bcdtmDrainage_getTraceStartDtmObject (BC_DTM_OBJ *dtmP, long startTraceType, long pnt1, long pnt2, long pnt3, double x, double y, double z, long *startPointTypeP, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, double *startTraceAngleP);
BENTLEYDTM_EXPORT                      int bcdtmDrainage_getTriangleDescentAndAscentAnglesDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double *descentAngleP, double *ascentAngleP, double *trgSlopeP); 
BENTLEYDTM_Public                      int bcdtmDrainage_getTriangleFlowDirectionDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3); 
BENTLEYDTM_Public                      int bcdtmDrainage_getTriangleNumberDtmObject (BC_DTM_OBJ *dtmP, DTM_TRG_INDEX_TABLE *trgIdxTabP, long trgPnt1, long trgPnt2, long trgPnt3, long *trgNumP); 
BENTLEYDTM_Public                      int bcdtmDrainage_initialiseAscentStackFiFo (void); 
BENTLEYDTM_Public                      int bcdtmDrainage_insertCatchmentPolygonIntoDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *polygonPtsP, long numPolygonPts, long *startPointP);
BENTLEYDTM_Public                      int bcdtmDrainage_insertMaximumAscentLineBetweenPointsDtmObject (BC_DTM_OBJ *dtmP, long Point, long Sp, long Ep); 
BENTLEYDTM_Private                     int bcdtmDrainage_insertMaximumAscentLineDtmObject (BC_DTM_OBJ *dtmP, long ridgePnt1, long ridgePnt2, long ridgePnt3); 
BENTLEYDTM_Public                      int bcdtmDrainage_insertMaximumAscentLineFromTinPointDtmObject (BC_DTM_OBJ *dtmP, long tinPoint);
BENTLEYDTM_Private                     int bcdtmDrainage_insertMaximumAscentLinesFromCatchmentDtmObject (BC_DTM_OBJ *dtmP, long startPoint);
BENTLEYDTM_Public                      int bcdtmDrainage_insertMaximumAscentLinesFromDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmDrainage_insertMaximumAscentLinesFromDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType); 
BENTLEYDTM_Public                      int bcdtmDrainage_internallyCleanPointArrayPolygon (DPoint3d **polyPtsPP, long *numPolyPtsP, double ppTol);
BENTLEYDTM_Private                     int bcdtmDrainage_interpolateZDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double *z); 
BENTLEYDTM_Public                      int bcdtmDrainage_intersectCordLines (double X1, double Y1, double X2, double Y2, double X3, double Y3, double X4, double Y4, double *X5, double *Y5); 
BENTLEYDTM_Public                      int bcdtmDrainage_markInternalZeroSlopePolygonPointsDtmObject (BC_DTM_OBJ *dtmP, long **zeroSlopePtsPP, long *numMarkedP);
BENTLEYDTM_Private                     int bcdtmDrainage_markZeroSlopeSumpLinesWithinTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPoint, DTM_SUMP_LINES **sumpLinesPP, long *numSumpLinesTableP); 
BENTLEYDTM_Private                     int bcdtmDrainage_placePolygonAroundSumpLinesDtmObject (BC_DTM_OBJ *dtmP, DTM_SUMP_LINES *sumpLinesP, long numSumpLines, long *startPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_placePolygonAroundZeroSlopeTriangleDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, long *startPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_polygoniseAndLoadCatchmentsFromTriangleIndexValuesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, DTM_TRG_INDEX_TABLE *trgIdxTabP, long numTriangles, void *userP, long *numPolygonsP); 
BENTLEYDTM_Public                      int bcdtmDrainage_polygoniseZeroSlopeTrianglesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType); 
BENTLEYDTM_Public                      int bcdtmDrainage_popAscentStackFiFo (DTM_ASCENT_LINE *ascentLineP, long *popedP); 
BENTLEYDTM_Public                      int bcdtmDrainage_processAscentStackFIFO (BC_DTM_OBJ *dtmP, DTM_POINT_ARRAY ***pointArraysPPP, long *numPointArraysP); 
BENTLEYDTM_Public                      int bcdtmDrainage_processAscentStackFiFoDtmObject (BC_DTM_OBJ *dtmP, DTM_POINT_ARRAY ***pointArraysPPP, long *numPointArraysP); 
BENTLEYDTM_Public                      int bcdtmDrainage_pushAscentStackFiFo (DTM_ASCENT_LINE *ascentLineP); 
BENTLEYDTM_Public                      int bcdtmDrainage_rangeScanPointForMaximumDescentDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *descentTypeP, long *descentPnt1P, long *descentPnt2P, double *descentSlopeP, double *descentAngleP); 
BENTLEYDTM_Private                     int bcdtmDrainage_rangeScanPointForMaximumDescentSumpLineDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *sumpPointP, double *sumpSlopeP); 
BENTLEYDTM_Private                     int bcdtmDrainage_rangeScanPointForMaximumDescentTriangleDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *trgBasePnt1P, long *trgBasePnt2P, double *trgDescentAngleP, double *trgSlopeP); 
BENTLEYDTM_Private                     int bcdtmDrainage_refineCatchmentBoundaryDtmObject (BC_DTM_OBJ *dtmP, double falseLowDepth, long descentTraceOverZeroSlope, long catchmentID, DPoint3d **catchPtsPP, long *numCatchPtsP);
BENTLEYDTM_EXPORT                      int bcdtmDrainage_refineCatchmentsDtmFile (WCharCP dtmFileNameP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numCatchmentsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_refineCatchmentsDtmObject (BC_DTM_OBJ *dtmP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numCatchmentsP); 
BENTLEYDTM_Private                     int bcdtmDrainage_refineTptrCatchmentPolygonDtmObject (BC_DTM_OBJ *dtmP, double sumpX, double sumpY, double sumpZ, long sumpPoint1, long sumpPoint2, long firstPoint, double maxPondDepth, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP);
BENTLEYDTM_Private                     int bcdtmDrainage_removeLineFromDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long pnt1, long pnt2); 
BENTLEYDTM_Private                     int bcdtmDrainage_removeRedundantAscentLinesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnFalseLowPointOffsetsDtmObject (BC_DTM_OBJ *dtmP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **lowPtsPP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnFalseLowPointsDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnFalseLowPointsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnHighPointOffsetsDtmObject (BC_DTM_OBJ *dtmP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **highPtsPP, long *numHighPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnHighPointsDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numHighPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnHighPointsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numHighPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnLowPointOffsetsDtmObject (BC_DTM_OBJ *dtmP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **lowPtsPP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnLowPointsDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnLowPointsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnNoneFalseLowPointOffsetsDtmObject (BC_DTM_OBJ *dtmP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **lowPtsPP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnNoneFalseLowPointsDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnNoneFalseLowPointsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numLowPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnRidgeLineOffsetsDtmObject (BC_DTM_OBJ *dtmP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **ridgePtsPP, long *numRidgeLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnRidgeLinesDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numRidgeLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnRidgeLinesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numRidgeLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnSumpLineOffsetsDtmObject (BC_DTM_OBJ *dtmP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **sumpPtsPP, long *numSumpLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnSumpLinesDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numSumpLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnSumpLinesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numSumpLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnZeroSlopeRidgeLineOffsetsDtmObject (BC_DTM_OBJ *dtmP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **ridgePtsPP, long *numRidgeLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnZeroSlopeRidgeLinesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numRidgeLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnZeroSlopeSumpLineOffsetsDtmObject (BC_DTM_OBJ *dtmP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **sumpPtsPP, long *numSumpLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnZeroSlopeSumpLinesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numSumpLinesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnZeroSlopeTriangleOffsetsDtmObject (BC_DTM_OBJ *dtmP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d ***dtmPtsPPP, long **trianglePtsPP, long *numZeroSlopeTrianglesP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_returnZeroSlopeTrianglesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP, long *numZeroSlopeTrianglesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanAscentTracesForClosureDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long nextPnt, long scanDirection, long *lastPntP, long *closureP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanBetweenPointsForMaximumAscentDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *ascentTypeP, long *ascentPnt1P, long *ascentPnt2P, double *ascentSlopeP, double *ascentAngleP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanBetweenPointsForMaximumAscentRidgeLineDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *ridgePointP, double *ridgeSlopeP, double *ridgeAngleP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanBetweenPointsForMaximumAscentTriangleDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *trgPnt1P, long *trgPnt2P, double *trgAscentAngleP, double *trgSlopeP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanBetweenPointsForMaximumDescentDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *descentTypeP, long *descentPnt1P, long *descentPnt2P, double *descentSlopeP, double *descentAngleP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanBetweenPointsForMaximumDescentSumpLineDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *sumpPointP, double *sumpSlopeP, double *sumpAngleP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanBetweenPointsForMaximumDescentTriangleDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, long *trgPnt1P, long *trgPnt2P, double *trgDescentAngleP, double *trgSlopeP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanBetweenPointsForRidgeLineDtmObject (BC_DTM_OBJ *dtmP, long Point, long Sp, long Ep, long *RidgePoint); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanCatchmentBoundaryForClosureDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long nextPnt, long scanDirection, long *lastPntP, long *closureP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanLineEndPointsForAscentLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point1, long point2, DTM_ASCENT_LINE **ascentLinesPP, long *numAscentLinesP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointBetweenPointsForAscentLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, DTM_ASCENT_LINE **ascentLinesPP, long *numAscentLinesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointBetweenPointsForAscentTrianglesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, DTM_ASCENT_LINE **ascentTrianglesPP, long *numAscentTrianglesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointBetweenPointsForRidgeLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long startPoint, long endPoint, DTM_ASCENT_LINE **ridgeLinesPP, long *numRidgeLinesP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointForAscentLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_ASCENT_LINE **ascentLinesPP, long *numAscentLinesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForAscentRidgeLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_ASCENT_LINE **ridgeLinesPP, long *numRidgeLinesP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointForAscentSumpLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_ASCENT_LINE **ascentSumpLinesPP, long *numAscentSumpLinesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForAscentTrianglesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_ASCENT_LINE **ascentTrianglesPP, long *numAscentTrianglesP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointForDescentLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_DESCENT_LINE **descentLinesPP, long *numDescentLinesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForDescentSumpLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_DESCENT_LINE **sumpLinesPP, long *numSumpLinesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForDescentTrianglesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_DESCENT_LINE **descentTrianglesPP, long *numDescentTrianglesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForFlowTrianglesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_DRAINAGE_FLOW_LINE **flowTrianglesPP, long *numFlowTrianglesP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointForMaximumAscentDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long excludePoint, long *ascentTypeP, long *ascentPnt1P, long *ascentPnt2P, double *ascentSlopeP, double *ascentAngleP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointForMaximumAscentRidgeLineDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long excludePoint, long *ridgePointP, double *ridgeSlopeP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointForMaximumAscentSumpLineDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long excludePoint, long *sumpPointP, double *sumpSlopeP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointForMaximumAscentTriangleDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long excludePoint, long *trgBasePnt1P, long *trgBasePnt2P, double *trgAscentAngleP, double *trgSlopeP); 
BENTLEYDTM_Public                      int bcdtmDrainage_scanPointForMaximumDescentDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long excludePoint, long *descentTypeP, long *descentPnt1P, long *descentPnt2P, double *descentSlopeP, double *descentAngleP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForMaximumDescentSumpLineDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long excludePoint, long *sumpPointP, double *sumpAngleP, double *sumpSlopeP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForMaximumDescentTriangleDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long excludePoint, long *trgBasePnt1P, long *trgBasePnt2P, double *trgDescentAngleP, double *trgSlopeP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForRidgeLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_DRAINAGE_FLOW_LINE **ridgeLinesPP, long *numRidgeLinesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanPointForSumpLinesDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, DTM_DRAINAGE_FLOW_LINE **sumpLinesPP, long *numSumpLinesP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanSumpPointForMaximumDescentTriangleDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long *trgPnt1P, long *trgPnt2P, double *trgSlopeP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanSumpPointForSumpLineDtmObject (BC_DTM_OBJ *dtmP, long useTables, long point, long *sumpPointP, double *slopeP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanZeroSlopePolygonForMaximumAscentDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long dtmFeature, long flowSide, long *maxAscentTypeP, long *maxAscentPnt1P, long *maxAscentPnt2P, long *maxAscentPnt3P, double *maxAscentSlopeP, double *maxAscentAngleP); 
BENTLEYDTM_Private                     int bcdtmDrainage_scanZeroSlopePolygonForMinimumDescentRidgeDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long dtmFeature, long flowSide, long *minDescentTypeP, long *minDescentPnt1P, long *minDescentPnt2P, long *minDescentPnt3P, double *minDescentSlopeP); 
BENTLEYDTM_Private                     int bcdtmDrainage_selectNextRidgePointForFlowDirectionDtmObject (BC_DTM_OBJ *dtmP, long flowSide, double lastAngle, double ridgeX, double ridgeY, long ridgePnt1, long ridgePnt2, long *nextRidgePntP); 
BENTLEYDTM_Public                      int bcdtmDrainage_sortAndRemoveDuplicatesLowPointPondTable (DTM_LOW_POINT_POND_TABLE **lowPointPondTablePP, long *numLowPointsTableP, long *memLowPointsTableP);
BENTLEYDTM_Public                      int bcdtmDrainage_sortAndRemoveDuplicatesSumpLinePondTable (DTM_SUMP_LINE_POND_TABLE **sumpLinePondTablePP, long *numSumpLinesTableP, long *memSumpLinesTableP); 
BENTLEYDTM_Private                     int bcdtmDrainage_stackTraceAscentsFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, unsigned char *ridgeLineP, long useTables, long traceOverZeroSlopeTriangles, double lastAngle, long flowSide, long pnt1, long pnt2, long pnt3, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *processP); 
BENTLEYDTM_Private                     int bcdtmDrainage_stackTraceAscentsFromTrianglePointDtmObject (BC_DTM_OBJ *dtmP, unsigned char *ridgeLineP, long useTables, long traceOverZeroSlope, double falseHighElevation, double lastAngle, long lastPoint, long flowSide, long pnt, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *processP); 
BENTLEYDTM_Public                      int bcdtmDrainage_stackTraceToHighPointWithStartAscentDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, unsigned char *ridgeLineP, long startType, double falseHighElevation, long useTables, long traceOverZeroSlopeTriangles, long loadFlag, long flowSide, long pnt1, long pnt2, long pnt3, double x, double y, double z, long *lastPntP, long *highPnt1P, long *highPnt2P, double *highXP, double *highYP, double *highZP); 
BENTLEYDTM_Private                     int bcdtmDrainage_storeLowPointPond (DTM_LOW_POINT_POND_TABLE **lowPointPondTablePP, long *numLowPtsTableP, long *memLowPtsTableP, long memLowPtsTableInc, long lowPoint, long exitPoint, long priorPoint, long nextPoint); 
BENTLEYDTM_Private                     int bcdtmDrainage_storeSumpLinePond (DTM_SUMP_LINE_POND_TABLE **sumpLinePondTablePP, long *numSumpLinesTableP, long *memSumpLinesTableP, long memSumpLinesTableInc, long sP1, long sP2, long exitPoint, long priorPoint, long nextPoint); 
BENTLEYDTM_Private                     int bcdtmDrainage_storeTracePoint (DTM_STREAM_TRACE_POINTS **tracePointsPP, long *numTracePtsP, long *memTracePtsP, long memTracePtsPInc, double x, double y, double z, long P1, long P2); 
BENTLEYDTM_Private                     int bcdtmDrainage_sumpLinePondTableCompareFunction (const DTM_SUMP_LINE_POND_TABLE *sumpLine1P, const DTM_SUMP_LINE_POND_TABLE *sumpLine2P); 
BENTLEYDTM_Private                     int bcdtmDrainage_sumpPointsCompareFunction (const void *c1P, const void *c2P); 
BENTLEYDTM_Private                     int bcdtmDrainage_testForAndMarkInternallyClosingBreakLinesDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, unsigned char *markBreakP); 
BENTLEYDTM_Public                      int bcdtmDrainage_testForLowerConnectedPointToPointDtmObject (BC_DTM_OBJ *dtmP, long Point, long *Np); 
BENTLEYDTM_Private                     int bcdtmDrainage_testForPondExitPointDtmObject (BC_DTM_OBJ *dtmP, long lowPoint, long *priorPointP, long *nextPointP, long *exitFromPointP); 
BENTLEYDTM_Public                      int bcdtmDrainage_testForZeroSlopePolygonPointDtmObject (BC_DTM_OBJ *dtmP, long point);
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceCatchmentAreaDtmFile (WCharCP dtmFileP, double x, double y, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceCatchmentAreaDtmObject (BC_DTM_OBJ *dtmP, double x, double y, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceCatchmentForSumpLineDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double z, long sumpPnt1, long sumpPnt2, double maxPondDepth, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceCatchmentFromInternalSumpPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double z, long sumpPnt, DPoint3d **catchmentPtsPP, long *numCatchmentPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceCatchmentPatternsDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, double falseHighElevation, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceCatchmentPatternsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseHighElevation, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_Public                      int bcdtmDrainage_traceDownMinimumDescentRidgeUntilAscentDtmObject (BC_DTM_OBJ *dtmP, long useTables, DTMFeatureCallback loadFunctionP, long loadFlag, long flowSide, long ridgePnt, long priorPnt, DTM_ASCENT_LINE *ascentLineP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceDrainagePatternsDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceDrainagePatternsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceGradedSlopeDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double Slope, DTMFeatureCallback loadFunctionP, long loadFlag, long *GradeTraced); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceGradedSlopeFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double Sx, double Sy, double Sz, double GradeSlope, long *TracePointFound, long *Np1, long *Np2, long *Np3, double *Nx, double *Ny, double *Nz); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceGradedSlopeFromTrianglePointDtmObject (BC_DTM_OBJ *dtmP, long P1, double Sx, double Sy, double GradeSlope, long *TracePointFound, long *Np1, long *Np2, long *Np3, double *Nx, double *Ny, double *Nz); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceGradeDtmObject (BC_DTM_OBJ *dtmP, double Sx, double Sy, double Sz, DTMFeatureCallback loadFunctionP, long loadFlag, long P1, long P2, long P3, double GradeSlope, long *LP1, long *LP2); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceIslandBoundaryDtmObject (BC_DTM_OBJ *dtmP, double pondElevation, long startPoint, long nextPoint, long mark, DTMFeatureCallback loadFunctionP, long loadFlag, long boundaryFlag, DTM_POLYGON_OBJ *polygonP, void* userP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceMaximumAscentDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, double falseHighElevation, double startX, double startY, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceMaximumAscentDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseHighElevation, double startX, double startY, void *userP); 
BENTLEYDTM_Public                      int bcdtmDrainage_traceMaximumAscentFromDtmPointBetweenDtmPointsDtmObject (BC_DTM_OBJ *dtmP, long point, long antPoint, long clkPoint, long *ascentTracedP, long *highPoint1P, long *highPoint2P, DPoint3d **tracePtsPP, long *numTracePtsP);
BENTLEYDTM_Private                     int bcdtmDrainage_traceMaximumAscentFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, long useTables, long isFalseHigh, long traceOverZeroSlope, double lastAngle, long pnt1, long pnt2, long pnt3, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *tracePointFoundP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceMaximumAscentFromTrianglePointDtmObject (BC_DTM_OBJ *dtmP, long useTables, long isFalseHigh, long traceOverZeroSlope, double lastAngle, long lastPnt, long startPnt, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *tracePointFoundP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceMaximumDescentDtmFile (WCharCP tinFileNameP, DTMFeatureCallback loadFunctionP, double falseLowDepth, double startX, double startY, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmDrainage_traceMaximumDescentDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseLowDepth, double startX, double startY, void *userP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceMaximumDescentFromPondExitPointDtmObject (BC_DTM_OBJ *dtmP, long useTables, long priorPnt, long exitPnt, long nextPnt, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *processP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceMaximumDescentFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, long useTables, long isFalseLow, long traceOverZeroSlope, double lastAngle, long startPnt1, long startPnt2, long startPnt3, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *tracePointFoundP, long *exitPointP, long *priorPointP, long *nextPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceMaximumDescentFromTrianglePointDtmObject (BC_DTM_OBJ *dtmP, long useTables, long isFalseLow, long traceOverZeroSlope, double lastAngle, long lastPnt, long startPnt, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *processP, long *exitPointP, long *priorPointP, long *nextPointP); 
BENTLEYDTM_Private                     int bcdtmDrainage_tracePondBoundaryDtmObject (BC_DTM_OBJ *dtmP, double pondElevation, long startPoint, long nextPoint, DTMFeatureCallback loadFunctionP, long loadFlag, long boundaryFlag, DTM_POLYGON_OBJ *polygonP, DPoint3d **pondPtsPP, long *numPondPtsP, void* userP); 
BENTLEYDTM_Public                      int bcdtmDrainage_traceToHighPointDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseHighElevation, long useTables, long traceOverZeroSlope, long loadFlag, long trgStartType, long pnt1, long pnt2, long pnt3, double x, double y, double z, void *userP, long *highPnt1P, long *highPnt2P, double *highXP, double *highYP, double *highZP); 
BENTLEYDTM_Public                      int bcdtmDrainage_traceToLowPointDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, double falseLowDepth, long traceOverZeroSlope, long useTables, long loadFlag, long pnt1, long pnt2, long pnt3, double x, double y, double z, void *userP, long *lowPoint1P, long *lowPoint2P); 
BENTLEYDTM_Public                      int bcdtmDrainage_traceToLowPointWithStartDescentDtmObject (BC_DTM_OBJ *dtmP, long startType, double falseLowDepth, long useTables, long traceOverZeroSlope, DTMFeatureCallback loadFunctionP, long loadFlag, long pnt1, long pnt2, long pnt3, double x, double y, double z, long *lowPnt1P, long *lowPnt2P, double *lowXP, double *lowYP, double *lowZP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceToSumpDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, long pnt3, double *xP, double *yP, double *zP, long *sumpPnt1P, long *sumpPnt2P); 
BENTLEYDTM_Public                      int bcdtmDrainage_traceToSumpLineDtmObject (BC_DTM_OBJ *dtmP, long startType, long pnt1, long pnt2, long pnt3, double x, double y, double z, long *sumpPnt1P, long *sumpPnt2P, double *sumpXP, double *sumpYP, double *sumpZP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceToSumpLineFromTrianglePointDtmObject (BC_DTM_OBJ *dtmP, double lastAngle, long lastPnt, long startPnt, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *processP); 
BENTLEYDTM_Private                     int bcdtmDrainage_traceToSumpLinetFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, double lastAngle, long startPnt1, long startPnt2, long startPnt3, double startX, double startY, long *nextPnt1P, long *nextPnt2P, long *nextPnt3P, double *nextXP, double *nextYP, double *nextZP, long *processP); 
BENTLEYDTM_Public                      int bcdtmDrainage_unMarkPointsConnectedToLowPointDtmObject (BC_DTM_OBJ *dtmP, long mark, long lowPoint); 
BENTLEYDTM_Private                     int bcdtmDrainage_writeLowPointPondTable (void); 
BENTLEYDTM_Private                     int bcdtmDrainage_writeTracePoints (DTM_STREAM_TRACE_POINTS *tracePointsP, long numTracePts); 
*/

///////// bcdtmDrape/////////
BENTLEYDTM_Public                   double bcdtmDrape_angleToAzimuth (double angle); 
BENTLEYDTM_EXPORT                      int bcdtmDrape_arcOnDtmFile (WCharCP DtmFile, double Sx, double Sy, double Ex, double Ey, double Cx, double Cy, double A1, double A2, double Ap, double As, double Ra, DTMDrapedLineCode **ArcPointType, DPoint3d **ArcPoints, long *NumArcPoints);
BENTLEYDTM_EXPORT                      int bcdtmDrape_arcOnDtmObject (BC_DTM_OBJ *dtmP, double Sx, double Sy, double Ex, double Ey, double Cx, double Cy, double A1, double A2, double Ap, double As, double Ra, DTMDrapedLineCode **arcPointTypePP, DPoint3d **arcPointsPP, long *numArcPointsP);
BENTLEYDTM_Public                   double bcdtmDrape_azimuthToAngle (double angle); 
BENTLEYDTM_Public                      int bcdtmDrape_coord (double r1, double r2, double l, double *xs, double *ys); 
BENTLEYDTM_Public                   double bcdtmDrape_dfac (int n); 
BENTLEYDTM_Public                   double bcdtmDrape_facdiv (int a, int b); 
BENTLEYDTM_Private                     int bcdtmDrape_findClosestHullLineDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long *pnt1P, long *pnt2P); 
BENTLEYDTM_Public                      int bcdtmDrape_findClosestLineInterceptWithHullDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double endX, double endY, long *fndTypeP, long *pnt1P, long *pnt2P, double *xIntP, double *yIntP, double *zIntP); 
BENTLEYDTM_Public                      int bcdtmDrape_findClosestLineInterceptWithVoidHullDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double endX, double endY, long *findTypeP, long *pnt1P, long *pnt2P, double *intXP, double *intYP, double *intZP);
BENTLEYDTM_Public                   double bcdtmDrape_fn (int n, double m); 
BENTLEYDTM_Public                      int bcdtmDrape_getCoordiantesFromLength (double *xs, double *ys, double r1, double r2, double spiralLength, double dl, double offset, double x1, double y1, double xi, double yi, double x2, double y2); 
BENTLEYDTM_Private                     int bcdtmDrape_getNextDrapePointFromLineDtmObject (BC_DTM_OBJ *dtmP, double x1, double y1, double x2, double y2, long *Type, long pnt1, long pnt2, long pnt3, long *nxtPnt1P, long *nxtPnt2P, long *nxtPnt3P, double *xdP, double *ydP, double *zdP); 
BENTLEYDTM_Private                     int bcdtmDrape_getNextDrapePointFromPointDtmObject (BC_DTM_OBJ *dtmP, double x1, double y1, double x2, double y2, long *drapeTypeP, long pnt1, long *nxtPnt1P, long *nxtPnt2P, long *nxtPnt3P, double *xdP, double *ydP, double *zdP); 
BENTLEYDTM_Private                     int bcdtmDrape_getNextDrapePointFromTriangleDtmObject (BC_DTM_OBJ *dtmP, double x1, double y1, double x2, double y2, long *drapeTypeP, long pnt1, long pnt2, long pnt3, long *nxtPnt1P, long *nxtPnt2P, long *nxtPnt3P, double *xdP, double *ydP, double *zdP); 
BENTLEYDTM_Public                      int bcdtmDrape_getNextPointForDrapeDtmObject (BC_DTM_OBJ *dtmP, double x1, double y1, double x2, double y2, long *drapeTypeP, long pnt1, long pnt2, long pnt3, long *nxtPnt1P, long *nxtPnt2P, long *nxtPnt3P, double *xdP, double *ydP, double *zdP); 
BENTLEYDTM_Private                     int bcdtmDrape_getNextSurfaceInterceptDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double endX, double endY, long *intersectTypeP, long *trgPnt1P, long *trgPnt2P, long *trgPnt3P, double *nextXP, double *nextYP, double *nextZP);
BENTLEYDTM_EXPORT                      int bcdtmDrape_intersectContourDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *startPointP, DPoint3d *endPointP, double contourInterval, double contourRegistration, DTMContourSmoothing smoothOption, double smoothFactor, long smoothDensity, double snapTolerance, long *contourFoundP, DPoint3d **conPtsPP, long *numConPtsP);
BENTLEYDTM_EXPORT                      int bcdtmDrape_intersectSurfaceDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *startPoint, DPoint3d *endPoint, long *intersectTypeP, DPoint3d *surfacePointP, long *trgPnt1P, long *trgPnt2P, long *trgPnt3P, bool& voidFlag);
BENTLEYDTM_EXPORT                      int bcdtmDrape_intersectTriangleDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *startPoint, DPoint3d *endPoint, long *intersectTypeP, DPoint3d *surfacePointP, DPoint3d tinPoints[], bool& voidFlag);
BENTLEYDTM_Public                      int bcdtmDrape_inverseIgds (double n1, double e1, double n2, double e2, double *ptr_dist, double *ptr_ang); 
BENTLEYDTM_Public                     void bcdtmDrape_locatePoint (double xa, double ya, double distance, double direction, double *xb, double *yb); 
BENTLEYDTM_Public                   double bcdtmDrape_normalizeAngle (double angle); 
BENTLEYDTM_Public                   double bcdtmDrape_offset (double xa, double ya, double xb, double yb, double xc, double yc); 
BENTLEYDTM_EXPORT                      int bcdtmDrape_pointCopyParallelDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double *z, long *drapeFlagP);
BENTLEYDTM_EXPORT                      int bcdtmDrape_pointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double *z, long *drapeFlagP); 
BENTLEYDTM_EXPORT                      int bcdtmDrape_pointReturnAttributesDtmFile (WCharCP dtmFileP, double x, double y, double *z, long *drapeFlagP, DPoint3d tinPoints[], double *slopeDegreesP, double *slopePercentP, double *aspectP, double *heightP);
BENTLEYDTM_EXPORT                      int bcdtmDrape_pointReturnAttributesDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double *z, long *drapeFlagP, DPoint3d tinPoints[], double *slopeDegreesP, double *slopePercentP, double *aspectP, double *heightP);
BENTLEYDTM_EXPORT                      int bcdtmDrape_pointWithOffHullToleranceDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double offHullTolerance, double *z, long *drapeFlagP);
BENTLEYDTM_EXPORT                      int bcdtmDrape_spiralOnDtmFile (WCharCP dtmFileP, double R1, double R2, double SpiralLength, double Offset, double Xs, double Ys, double Xe, double Ye, double Xi, double Yi, DTMDrapedLineCode **SpiralPointType, DPoint3d **SpiralPoints, long *NumSpiralPoints);
BENTLEYDTM_EXPORT                      int bcdtmDrape_spiralOnDtmObject (BC_DTM_OBJ *dtmP, double R1, double R2, double SpiralLength, double Offset, double Xs, double Ys, double Xe, double Ye, double Xi, double Yi, DTMDrapedLineCode **SpiralPointType, DPoint3d **SpiralPoints, long *NumSpiralPoints);
BENTLEYDTM_Private                     int bcdtmDrape_storeDrapePointWithDtmFeaturesDtmObject(BC_DTM_OBJ *dtmP, long lineNum, long drapeType, double x, double y, double z, long pnt1, long pnt2, long pnt3, long dtmFeatureOption, bvector<DTMDrapePoint>& drapePts);
BENTLEYDTM_EXPORT                      int bcdtmDrape_stringDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *stringPtsP, long numStringPts, long dtmFeatureOption, bvector<DTMDrapePoint>& drapePts); 
BENTLEYDTM_Public                      int bcdtmDrape_traverseIgds (double p1y, double p1x, double dist, double ang, double *ptr_p2y, double *ptr_p2x); 

///////// bcdtmEdit/////////
BENTLEYDTM_Public                      int bcdtmEdit_addPointToDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double z, long *Point);
BENTLEYDTM_Private                     int bcdtmEdit_assignTinLinesToDrapePointsDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *drapePtsP, long numDrapePts, DTM_TRG_INDEX_TABLE **drapeTinLinesP, long *numDrapeTinLines); 
BENTLEYDTM_Public                      int bcdtmEdit_breakDtmFeatureAtPointDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long breakPoint);
BENTLEYDTM_EXPORT                      int bcdtmEdit_checkAndUpdateCurrentDtmObject (WCharCP EditTinFile);
BENTLEYDTM_Private                     int bcdtmEdit_checkForOneCoincidentTptrVoidPolygonSectionWithTinHullDtmObject (BC_DTM_OBJ *dtmP, long spnt, long *fsP, long *lsP, long *coincidentFlagP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_checkForVoidsAlongTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long *voidsFoundP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_checkPointCanBeDeletedDtmObject (BC_DTM_OBJ *dtmP, long Point, long UpdateFlag, long *Flag);
BENTLEYDTM_EXPORT                      int bcdtmEdit_checkPointXYCanBeMovedDtmObject (BC_DTM_OBJ *dtmP, long Point, long *MoveFlag, long *VoidPtr, double x, double y);
BENTLEYDTM_EXPORT                      int bcdtmEdit_checkTinStructureDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_cleanVoidDtmObject (BC_DTM_OBJ *dtmP, long VoidFeature); 
BENTLEYDTM_EXPORT                     void bcdtmEdit_clearCurrentEditDtmObjects (void);
BENTLEYDTM_Public                      int bcdtmEdit_clearVoidBitOfInternalVoidPointsDtmObject (BC_DTM_OBJ *dtmP, long voidFeature, long *islandsP, long numIslands);
BENTLEYDTM_Private                     int bcdtmEdit_clipDtmFeaturesCoincidentWithTinLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2);
BENTLEYDTM_EXPORT                      int bcdtmEdit_clipLastDtmFeatureToVoidDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmEdit_clipVoidLinesFromDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Private                     int bcdtmEdit_clipVoidPointsFromGroupSpotsDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Private                     int bcdtmEdit_createVoidAndIslandPolygonsForDeletedTrianglesDtmObject (BC_DTM_OBJ *dtmP, DTM_TRG_INDEX_TABLE *delPointsP, long numDelPoints, BC_DTM_OBJ **voidPolygonsPP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_dataPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double *z, long *pntTypeP, long *dtmFeatureP, long *pnt1P, long *pnt2P, long *pnt3P);
BENTLEYDTM_Private                     int bcdtmEdit_deleteAllPointsAndLinesInternalToTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long spnt);
BENTLEYDTM_Private                     int bcdtmEdit_deleteExternalTptrIslandPolygonPointsAndLinesDtmObject (BC_DTM_OBJ *dtmP, long sPnt);
BENTLEYDTM_Private                     int bcdtmEdit_deleteInternalTptrVoidPolygonPointsAndLinesDtmObject (BC_DTM_OBJ *dtmP, long sPnt);
BENTLEYDTM_Private                     int bcdtmEdit_deleteInternalVoidPointsAndLinesAndRetriangulateVoidDtmObject (BC_DTM_OBJ *dtmP, long voidFeature);
BENTLEYDTM_EXPORT                      int bcdtmEdit_deleteLineDtmObject (BC_DTM_OBJ *dtmP, long deleteFlag, long tinPnt1, long tinPnt2, long *tinPnt3, long *tinPnt4);
BENTLEYDTM_EXPORT                      int bcdtmEdit_deletePointDtmObject (BC_DTM_OBJ *dtmP, long tinPoint, long deleteFlag);
BENTLEYDTM_EXPORT                      int bcdtmEdit_deleteTriangleDtmObject (BC_DTM_OBJ *dtmP, long tinPnt1, long tinPnt2, long tinPnt3);
BENTLEYDTM_EXPORT                      int bcdtmEdit_deleteTrianglesOnDeleteLineDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *deleteLinePtsP, long numDeleteLinePts); 
BENTLEYDTM_Private                     int bcdtmEdit_drapeDeleteLineOnEditDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *deleteLinePtsP, long numDeleteLinePts, DPoint3d **drapePoints, long *numDrapePoints);
BENTLEYDTM_Public                      int bcdtmEdit_drawContoursForTriangleDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long P1, long P2, long P3, double contourInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawDeletedFeaturesDtmObject (BC_DTM_OBJ *dtmP, int (*loadFunctionP) (), long drawMode, long *deletedFeaturesP, long numDeletedFeatures, double contourInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, int (*loadFunctionP) (), long drawMode, long dtmFeature, void *userP);
BENTLEYDTM_Private                     int bcdtmEdit_drawDtmFeaturesForLineDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long P1, long P2, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawExternalTptrFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long startPoint, long updateOption, double contourInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawInternalTptrFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long startPoint, double contourInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawLineFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long P1, long P2, double contourInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawPointFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long point, double contourInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawPointPerimeterDtmObject (BC_DTM_OBJ *dtmP, int (*loadFunctionP) (), long drawMode, long Point, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawPolygonFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, DPoint3d *polyPtsP, long numPolyPts, double contourInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawTptrFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long startPoint, long updateOption, double contourInterval, void *userP);
BENTLEYDTM_Public                      int bcdtmEdit_drawTptrLineFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long startPoint, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawTriangleBaseLinesForPointDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long DrawMode, long P1, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawTriangleDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long P1, long P2, long P3, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawTriangleFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long P1, long P2, long P3, double contourInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_drawTriangleLinesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long DrawMode, long P1, long P2, long P3, void *userP);
BENTLEYDTM_Private                     int bcdtmEdit_extractVoidAndIslandPolygonsFromDeletedTrianglesDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **voidPolygonsPP);
BENTLEYDTM_Public                      int bcdtmEdit_findClosestHullLineDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long *hullPnt1P, long *hullPnt2P);
BENTLEYDTM_Private                     int bcdtmEdit_findClosestNonVoidPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long *editPointP);
BENTLEYDTM_Public                      int bcdtmEdit_findClosestVoidLineDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long *voidPnt1P, long *voidPnt2P, long *dtmFeatureP);
BENTLEYDTM_Public                      int bcdtmEdit_findDtmFeatureTypeEnclosingPointDtmObject (BC_DTM_OBJ *dtmP, long point, DTMFeatureType dtmFeatureType, long *dtmFeatureP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_getDeletedFeaturesDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long **deletedDtmFeaturesPP, long *numDeletedDtmFeaturesP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_getDtmEditFeaturePoints (long *editPnt1P, long *editPnt2P, long *editPnt3P);
BENTLEYDTM_Public                      int bcdtmEdit_getIslandFeaturesInternalToVoidDtmObject (BC_DTM_OBJ *dtmP, long voidFeature, DTMTinPointFeatures **islandsPP, long *numIslandsP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_getIslandsInternalToVoidDtmObject (BC_DTM_OBJ *dtmP, long voidFeature, long **islandsPP, long *numIslandsP);
BENTLEYDTM_Private                     int bcdtmEdit_getIslandVoidHoleFeaturesWithACommonHullSegementDtmObject (BC_DTM_OBJ *dtmP, long numStartFeatures, DTMTinPointFeatures **intersectedFeaturesPP, long *numIntersectedFeaturesP);
BENTLEYDTM_Private                     int bcdtmEdit_getListOfIntersectedIslandVoidHoleFeaturesDtmObject (BC_DTM_OBJ *dtmP, long numStartFeatures, DTMTinPointFeatures **intersectedFeaturesPP, long *numIntersectedFeaturesP);
BENTLEYDTM_Public                      int bcdtmEdit_getVoidExternalToIslandDtmObject (BC_DTM_OBJ *dtmP, long islandFeature, long *voidFeatureP);
BENTLEYDTM_Public                      int bcdtmEdit_insertDtmFeatureIntoDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTMUserTag userTag, DPoint3d *stringPtsP, long numStringPts, long *startPntP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_insertIslandIntoDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag userTag, DPoint3d *islandPtsP, long numIslandPts);
BENTLEYDTM_Public                      int bcdtmEdit_insertLineIntoDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTMUserTag userTag, DPoint3d *stringPtsP, long numStringPts, long *startPntP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_insertPointDtmObject (BC_DTM_OBJ *dtmP, long pntType, long dtmFeature, long updateOption, long P1, long P2, long P3, double x, double y, double z, long *newPntP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_insertStringIntoDtmObject (BC_DTM_OBJ *dtmP, long drapeOption, WCharCP stringFileNameP, long *startPntP);
BENTLEYDTM_Public                      int bcdtmEdit_insertTptrPolygonAroundPointDtmObject (BC_DTM_OBJ *dtmP, long Point, long *Spnt);
BENTLEYDTM_EXPORT                      int bcdtmEdit_insertVoidIntoDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag userTag, DPoint3d *voidPtsP, long numVoidPts);
BENTLEYDTM_Private                     int bcdtmEdit_insertVoidsAndIslandsIntoEditDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *dataDtmP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_modifyDtmEditFeatureDtmObject (BC_DTM_OBJ *dtmP, long modifyOption, long *modifyResultP); 
BENTLEYDTM_EXPORT                      int bcdtmEdit_moveVertexXYZDtmObject (BC_DTM_OBJ *dtmP, long ResetFlag, long Point, double x, double y, double z);
BENTLEYDTM_EXPORT                      int bcdtmEdit_moveVertexZDtmObject (BC_DTM_OBJ *dtmP, long point, double z);
BENTLEYDTM_EXPORT                      int bcdtmEdit_nullTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt);
BENTLEYDTM_EXPORT                      int bcdtmEdit_polygonMoveZDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *polyPtsP, long numPolyPts, long moveOption, double elevation);
BENTLEYDTM_EXPORT                      int bcdtmEdit_removeInsertedVoidsOnTinHullDtmObject (BC_DTM_OBJ *dtmP, long numStartFeatures);
BENTLEYDTM_EXPORT                      int bcdtmEdit_removeInternalTptrPointsAndRetriangulateDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long fillOption);
BENTLEYDTM_EXPORT                      int bcdtmEdit_removeInternalVoidPointsAndLinesDtmObject (BC_DTM_OBJ *dtmP, long VoidFeature, long *Islands, long NumIslands);
BENTLEYDTM_EXPORT                      int bcdtmEdit_removePointDtmObject (BC_DTM_OBJ *dtmP, long Point, long Ptype, long Feature, long P1, long P2, long P3);
BENTLEYDTM_EXPORT                      int bcdtmEdit_removeVoidsAlongTptrListDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long drawMode, long startPnt, double contourInterval, void *userP);
BENTLEYDTM_Private                     int bcdtmEdit_resolveIslandsVoidsHolesDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **resolvedFeaturesDtmPP);
BENTLEYDTM_Private                     int bcdtmEdit_resolveOverlappingIslandsVoidsAndHolesDtmObject (BC_DTM_OBJ *dtmP, long numStartFeatures, DTMTinPointFeatures *intersectedFeaturesP, long numIntersectedFeatures);
BENTLEYDTM_Public                      int bcdtmEdit_retriangualteAlongTptrListDtmObject (BC_DTM_OBJ *dtmP, long leftSide, long rightSide, long firstPoint);
BENTLEYDTM_EXPORT                      int bcdtmEdit_selectDtmEditFeatureDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, double x, double y, bool& featureFound, bvector<DPoint3d>& featurePts);
BENTLEYDTM_Private                     int bcdtmEdit_selectLineDtmObject (BC_DTM_OBJ *dtmP, double  x, double y, bool& lineFound, bvector<DPoint3d>& linePts, long& pnt1, long& pnt2);
BENTLEYDTM_Private                     int bcdtmEdit_selectPointDtmObject(BC_DTM_OBJ *dtmP, double x, double y, bool &pointFound, bvector<DPoint3d>& featurePts, long& editPoint);
BENTLEYDTM_Private                     int bcdtmEdit_selectTriangleDtmObject (BC_DTM_OBJ *dtmP, double x, double y, bool& trgFound, bvector<DPoint3d>& trgPts, long& pnt1, long& pnt2, long&  pnt3);
BENTLEYDTM_EXPORT                     void bcdtmEdit_setCurrentEditDtmObjects (void *editdtmP, void *saveEditTin);
BENTLEYDTM_Public                      int bcdtmEdit_storeDtmFeatureInDtmFeatureList (DTMTinPointFeatures **dtmFeatureListPP, long *numFeatureListP, long *memFeatureListP, long memFeatureListInc, long dtmFeature, DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId, long priorPoint, long nextPoint);
BENTLEYDTM_Private                     int bcdtmEdit_storePointFeaturesInDtmFeatureList (DTMTinPointFeatures **bcdtmList, long *numDtmList, long *memDtmList, long memDtmListInc, long dtmFeature, DTMFeatureType dtmFeatureType, DTMUserTag userTag, long priorPoint, long nextPoint);
BENTLEYDTM_EXPORT                      int bcdtmEdit_tempMoveVertexXYZDtmObject (BC_DTM_OBJ *dtmP, long Point, double x, double y, double z);
BENTLEYDTM_Public                      int bcdtmEdit_testForDtmFeatureHullLineDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType DtmFeatureType, long P1, long P2, long *HullLine, long *Feature, DTMDirection* direction);
BENTLEYDTM_Public                      int bcdtmEdit_testForPointOnDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long point, long *dtmFeatureP, long *numFeaturesP);
BENTLEYDTM_EXPORT                      int bcdtmEdit_tptrMoveZDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long moveOption, double elevation);
BENTLEYDTM_EXPORT                      int bcdtmEdit_tptrPolygonMoveZDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long moveOption, double elevation);
BENTLEYDTM_Public                      int bcdtmEdit_triangulateVoidDtmObject (BC_DTM_OBJ *dtmP, long voidFeature, long *islandFeaturesP, long numIslandFeatures, long internalPoint);
BENTLEYDTM_Public                      int bcdtmEdit_validateInsertVoidOrIslandDtmObject (BC_DTM_OBJ *dtmP, long startPoint);
BENTLEYDTM_Public                      int bcdtmEdit_validateStringDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *stringPtsP, long *numStringPtsP);
BENTLEYDTM_Public                      int bcdtmEdit_validateVoidDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *voidPtsP, long *numVoidPtsP);

///////// bcdtmExport/////////
BENTLEYDTM_EXPORT                      int bcdtmExport_dtmObjectToDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **dtmPP, double ppTol, double plTol);
BENTLEYDTM_EXPORT                      int bcdtmExport_geopakTriangulationFromDtmObject (BC_DTM_OBJ *dtmP, WCharCP tinFileNameP);

///////// bcdtmFile/////////
BENTLEYDTM_EXPORT                     void bcdtmFile_close (FILE *dtmFileP);
BENTLEYDTM_EXPORT                    FILE* bcdtmFile_open (WCharCP fileNameP, WCharCP openTypeP);

///////// bcdtmFilter/////////
BENTLEYDTM_Private                     int bcdtmFilter_blockRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, long *firstPointP, long *lastPointP);
BENTLEYDTM_Private                     int bcdtmFilter_changeSinglePointGroupSpotsToRandomSpotsObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmFilter_divConqMergeSortDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long numPts);
BENTLEYDTM_EXPORT                      int bcdtmFilter_dtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, double xyTolerance, double zTolerance, long *numFeaturesFilteredP, long *numVerticesBeforeFilterP, long *numVerticesAfterFilterP);
BENTLEYDTM_Private                     int bcdtmFilter_elevationDifferenceCompareFunction (const void *p1P, const void *p2P);
BENTLEYDTM_Private                     int bcdtmFilter_elevationDifferenceKeepCompareFunction (const void *p1P, const void *p2P);
BENTLEYDTM_Private                     int bcdtmFilter_filterRandomSpotTilesDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long reinsertOption, double zTolerance, long *tileOffsetP, long *numTilePtsP, long numTiles, long *numPointsAfterP);
BENTLEYDTM_Private                     int bcdtmFilter_filterSinglePointGroupSpotTilesDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long reinsertOption, double zTolerance, long *tileOffsetP, long *numTilePtsP, long numTiles, long *numPointsAfterP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_findPlaneDtmObject (BC_DTM_OBJ *dtmP, long pnt, long nPnts, DTM_PLANE* pPlane);
BENTLEYDTM_Private                     int bcdtmFilter_gaussJordanPartialPivot (int n, double *A);
BENTLEYDTM_Private                     int bcdtmFilter_pointArray (DPoint3d **ptsPP, long *numPtsP, double xyTolerance, double zTolerance);
BENTLEYDTM_Private                    void bcdtmFilter_processTileDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *filterDtmP, long iYL, long iYR, double dXL, double dXM, double dXR, double dYL, double dYM, double dYR, double zTolerance, int iDivision, int maxTileDivisions, int minTilePts);
BENTLEYDTM_EXPORT                      int bcdtmFilter_quadTree (DTM_QUAD_TREE_TILE *quadTreeP, long numQuadTreeTiles, long numQuadTreeLevels, long decimationFactor, long decouplePoints, long coplanarFilterOption, double coplanarFilterTolerance);
BENTLEYDTM_EXPORT                      int bcdtmFilter_removeDuplicatePointsFromRangeDtmObject (BC_DTM_OBJ *dtmP, long firstPoint, long *lastPointP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_removeTaggedDuplicatePointsFromRangeDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long firstPoint, long *lastPointP);
BENTLEYDTM_Private                     int bcdtmFilter_setFeatureStatesToFirstPointDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_sortPointRangeDtmObject (BC_DTM_OBJ *dtmP, long firstPoint, long lastPoint, long axis);
BENTLEYDTM_EXPORT                      int bcdtmFilter_sortTaggedPointRangeDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long firstPoint, long lastPoint, long axis);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tileDecimateGroupSpotsDtmObject (BC_DTM_OBJ *dtmP, long numPointsRemove, long *numFilteredSpotsP, BC_DTM_OBJ *filteredDtmP, double *filterToleranceUsedP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tileDecimateRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, long numPointsRemove, long *numFilteredSpotsP, BC_DTM_OBJ *filteredPtsP, double *filterToleranceUsedP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tileDecimateRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, long numPointsToRemove, double percentageToRemove, long& pointsBefore, long& pointsAfter);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tileElevDiffRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, double *elevationDifferencesP);
BENTLEYDTM_Private                     int bcdtmFilter_tileFilterBlockRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **filterDtmPP, long firstPoint, long lastPoint, double zTolerance, int minTilePts, int maxTileDivisions, double tileLength);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tileFilterRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, long minTilePts, long maxTileDivide, double tileLength, double zTolerance, long *numSpotsBeforeFilterP, long *numSpotsAfterFilterP, double *filterReductionP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tileFilterSinglePointGroupSpotsDtmObject (BC_DTM_OBJ *dtmP, long minTilePts, long maxTileDivide, double tileLength, double zTolerance, long *numSpotsBeforeFilterP, long *numSpotsAfterFilterP, double *filterReductionP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tileZToleranceFilterGroupSpotsDtmObject (BC_DTM_OBJ *dtmP, double filterTolerance, long *numFilteredSpotsP, BC_DTM_OBJ *filteredDtmP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tileZToleranceFilterRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, double filterTolerance, long *numFilteredSpotsP, BC_DTM_OBJ *filteredDtmP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tinDecimateGroupSpotsDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long boundaryOption, long numPointsRemove, long *numFilteredPtsP, BC_DTM_OBJ *filteredPtsP, double *filterToleranceUsedP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tinDecimateRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long boundaryOption, long numPointsRemove, long *numFilteredSpotsP, BC_DTM_OBJ *filteredPtsP, double *filterToleranceUsedP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tinElevDiffRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long boundaryOption, double *elevationDifferencesP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tinFilterRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long reinsertOption, double zTolerance, long *numSpotsBeforeFilterP, long *numSpotsAfterFilterP, double *filterReductionP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tinFilterSinglePointGroupSpotsDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long reinsertOption, double zTolerance, long *numSpotsBeforeFilterP, long *numSpotsAfterFilterP, double *filterReductionP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tinZToleranceFilterGroupSpotsDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long boundaryOption, double filterTolerance, long *numFilteredPtsP, BC_DTM_OBJ *filteredPtsP);
BENTLEYDTM_EXPORT                      int bcdtmFilter_tinZToleranceFilterRandomSpotsDtmObject (BC_DTM_OBJ *dtmP, long filterOption, long boundaryOption, double filterTolerance, long *numFilteredPtsP, BC_DTM_OBJ *filteredPtsP);

///////// bcdtmFind/////////
BENTLEYDTM_EXPORT                      int bcdtmFind_binaryScanDtmObject (BC_DTM_OBJ *dtmP, double x, long *cPointP); 
BENTLEYDTM_EXPORT                      int bcdtmFind_closestPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long *cPointP); 
BENTLEYDTM_EXPORT                      int bcdtmFind_findClosestHullLineDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double *z, long *fndTypeP, long *hullPnt1P, long *hullPnt2P);
BENTLEYDTM_Private                     int bcdtmFind_hullIntersectionDtmObject (BC_DTM_OBJ *dtmP, long *intFoundP, long point, double x, double y, long *pnt1P, long *pnt2P, long *pnt3P); 
BENTLEYDTM_Private                     int bcdtmFind_startAndEndPointTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long pt, long* startPt, long* endPt);
BENTLEYDTM_EXPORT                      int bcdtmFind_triangleDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long *fndTypeP, long *pnt1P, long *pnt2P, long *pnt3P); 
BENTLEYDTM_EXPORT                      int bcdtmFind_triangleForPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double *ZP, long *fndTypeP, long *pnt1P, long *pnt2P, long *pnt3P); 
BENTLEYDTM_Public                      int bcdtmFind_triangleForPointFromPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long closestPnt, long *pntTypeP, long *pnt1P, long *pnt2P, long *pnt3P); 

///////// bcdtmFlag/////////
BENTLEYDTM_Public                      int bcdtmFlag_clearBitPCWD (unsigned short *Pcwd, long Offset); 
BENTLEYDTM_Public                      int bcdtmFlag_clearDeletePointBitPCWD (unsigned short *Pcwd);
BENTLEYDTM_EXPORT                      int bcdtmFlag_clearFlag (unsigned char *Flag, long Offset); 
BENTLEYDTM_Public                      int bcdtmFlag_clearInsertPoint (BC_DTM_OBJ *dtmP, long point);
BENTLEYDTM_Public                      int bcdtmFlag_clearVoidBitPCWD (unsigned short *Pcwd); 
BENTLEYDTM_Public                      int bcdtmFlag_setBitPCWD (unsigned short *Pcwd, long Offset); 
BENTLEYDTM_Public                      int bcdtmFlag_setDeletePointBitPCWD (unsigned short *Pcwd);
BENTLEYDTM_EXPORT                      int bcdtmFlag_setFlag (unsigned char *Flag, long Offset); 
BENTLEYDTM_Public                      int bcdtmFlag_setInsertPoint (BC_DTM_OBJ *dtmP, long point);
BENTLEYDTM_Public                      int bcdtmFlag_setVoidBitPCWD (unsigned short *Pcwd); 
BENTLEYDTM_Public                      int bcdtmFlag_testBitPCWD (unsigned short *Pcwd, long Offset); 
BENTLEYDTM_Public                      int bcdtmFlag_testDeletePointBitPCWD (unsigned short *Pcwd);
BENTLEYDTM_EXPORT                      int bcdtmFlag_testFlag (unsigned char *Flag, long Offset); 
BENTLEYDTM_Public                      int bcdtmFlag_testInsertPoint (BC_DTM_OBJ *dtmP, long point);
BENTLEYDTM_EXPORT                      int bcdtmFlag_testVoidBitPCWD (unsigned short *Pcwd); 

///////// bcdtmGeopak/////////
BENTLEYDTM_Private                     int bcdtmGeopak_browseCrossingFeatures (DTM_CROSSING_FEATURE_ERROR& crossError, void *userP);
BENTLEYDTM_Private                     int bcdtmGeopak_browseDuplicatePointErrors (double x, double y, DTM_DUPLICATE_POINT_ERROR *dupPtsP, long numDupPts, void *userP);
BENTLEYDTM_Public                      int bcdtmGeopak_checkForCurrentGeopakDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_cloneDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *cloneDtmP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_convertTinFileToDtmFile (WCharCP tinFileNameP, WCharCP dtmFileNameP, double ppTol);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_copyTinStateDtmObjectToDataStateDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *dataP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_deleteHullFromDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_destroyAllExceptCurrentDtmObjects (void);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_getPositiveUserTagListDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag **userTagListPP, long *numUserTagsP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_moveDtmFeatureTypePointsToPointArrayDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTMUserTag *userTagP, DPoint3d **featPtsPP, long *numFeatPtsP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_moveFirstOccurrenceOfDtmFeatureTypeToPointArrayDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTMUserTag *userTagP, DPoint3d **featurePtsPP, long *numFeaturePtsP);
BENTLEYDTM_Private                     int bcdtmGeopak_readAtFilePositionDtmObject (BC_DTM_OBJ *dtmP, FILE *dtmFP, long filePosition);
BENTLEYDTM_Private                     int bcdtmGeopak_readFromFileDtmObject (BC_DTM_OBJ *dtmP, WCharCP dtmFileNameP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_readGeopakDatFileToDtmObject (BC_DTM_OBJ *dtmP, WCharCP datFileNameP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_reportCrossingFeaturesDtmFile (WCharCP dtmFileNameP, WCharCP reportFileNameP, DTMFeatureCallback loadFunctionP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_reportDuplicatePointErrorsDtmFile (WCharCP dtmFileNameP, WCharCP reportFileNameP);
BENTLEYDTM_EXPORT                      int bcdtmGeopak_validateDtmLinearFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, long fsCode, long fnCode, double ppTol);

///////// bcdtmGrade/////////
BENTLEYDTM_Public                      int bcdtmGrade_calculateGradeSlopeAngleAcrossTriangleFaceDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double Sx, double Sy, double Sz, double GradeSlope, double LastAngle, long *GradePointFound, double *GradeSlopeAngle); 
BENTLEYDTM_Public                      int bcdtmGrade_calculateGradeSlopeAnglesForTriangleDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double GradeSlope, long *GradeSlopeAngleFound, double *GradeSlopeAngleOne, double *GradeSlopeAngleTwo); 
BENTLEYDTM_Public                      int bcdtmGrade_calculateGradeSlopeStartDirectionsForTriangleDtmObject (BC_DTM_OBJ *dtmP, double Sx, double Sy, double Sz, double Slope, long Ptype, long P1, long P2, long P3, double *TriangleSlope, double StartDirections[], long *NumStartDirections); 
BENTLEYDTM_Public                      int bcdtmGrade_calculateMacaoGradeSlopeStartDirectionsForPointDtmObject (BC_DTM_OBJ *dtmP, double Sx, double Sy, double Sz, double Slope, double Distance, double **StartDirections, long *NumStartDirections); 
BENTLEYDTM_Public                      int bcdtmGrade_getFirstGradeTracePointDtmObject (BC_DTM_OBJ *dtmP, double Sx, double Sy, double Sz, long P1, long P2, long P3, double GradeAngle, long *TracePointFound, long *Np1, long *Np2, long *Np3, double *Nx, double *Ny, double *Nz); 
BENTLEYDTM_EXPORT                      int bcdtmGrade_getGradeSlopeStartDirectionsDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double Slope, double *Zs, long *Tp1, long *Tp2, long *Tp3, double *TriangleSlope, double StartDirections[], long *NumStartDirections); 
BENTLEYDTM_EXPORT                      int bcdtmGrade_getMacaoGradeSlopeStartDirectionsDtmObject(BC_DTM_OBJ *dtmP, double x, double y, double Slope, double Distance, double **StartDirections, long *NumStartDirections);
BENTLEYDTM_Public                      int bcdtmGrade_traceGradedSlopeFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double Sx, double Sy, double Sz, double GradeSlope, double LastAngle, long *TracePointFound, long *Np1, long *Np2, long *Np3, double *Nx, double *Ny, double *Nz); 
BENTLEYDTM_Public                      int bcdtmGrade_traceGradedSlopeFromTrianglePointDtmObject (BC_DTM_OBJ *dtmP, long P1, double Sx, double Sy, double GradeSlope, long *TracePointFound, long *Np1, long *Np2, long *Np3, double *Nx, double *Ny, double *Nz); 
BENTLEYDTM_EXPORT                      int bcdtmGrade_traceGradeDtmObject (BC_DTM_OBJ *dtmP, double Sx, double Sy, double Sz, DTMFeatureCallback callBackFunctionP, long P1, long P2, long P3, double GradeSlope, double GradeAngle, double Distance, void *userP); 

///////// bcdtmImport/////////
BENTLEYDTM_EXPORT                      int bcdtmImport_geopakTriangulationToDtmObject (BC_DTM_OBJ **dtmPP, WCharCP tinFileNameP);
BENTLEYDTM_EXPORT                      int bcdtmImport_geopakTriangulationToExistingDtmObject (BC_DTM_OBJ *dtmP, WCharCP tinFileNameP);

///////// bcdtmInitialise/////////
BENTLEYDTM_EXPORT                      int bcdtmInitialise_closeLogFile (void);
BENTLEYDTM_EXPORT                      int bcdtmInitialise_openGpkDtmLogFile (void); 
BENTLEYDTM_EXPORT                      int bcdtmInitialise_openLogFile (WCharCP LogFileName); 

///////// bcdtmInsert/////////
BENTLEYDTM_Public                      int bcdtmInsert_addDtmFeatureToDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_FEATURE *dtmFeaureP, long dtmFeatureNum, DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId, long firstPoint, long clearOption); 
BENTLEYDTM_Public                      int bcdtmInsert_addPointToDtmObject (BC_DTM_OBJ *dtmP, double Xp, double Yp, double Zp, long *pntNumP); 
BENTLEYDTM_Private                     int bcdtmInsert_addToFeatureListDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long dtmFeatureNum, long firstPoint, long clearOption); 
BENTLEYDTM_Public                      int bcdtmInsert_addToFeatureTableDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_FEATURE *dtmFeatureP, long dtmFeatureNum, DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId, long firstPoint, long *newDtmFeatureNumP); 
BENTLEYDTM_Private                     int bcdtmInsert_buildStringHullIntersectionTableDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *stringPtsP, long numStringPts, DTM_STR_INT_TAB **intTablePP, long *numIntTableP);
BENTLEYDTM_Private                     int bcdtmInsert_buildStringHullLinesIntersectionTableDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *stringPtsP, long numStringPts, DTM_STR_INT_TAB **intTablePP, long *numIntTableP);
BENTLEYDTM_Private                     int bcdtmInsert_buildStringHullPointsIntersectionTableDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *stringPtsP, long numStringPts, DTM_STR_INT_TAB **intTablePP, long *numIntTableP); 
BENTLEYDTM_Public                      int bcdtmInsert_checkAndFixInsertLinesDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3); 
BENTLEYDTM_Public                      int bcdtmInsert_checkFeatureIsInternalToTinHullDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *featurePtsP, long numFeaturePts, long *isInternalP);
BENTLEYDTM_Public                      int bcdtmInsert_checkFeatureIsInternalToTinHullMrDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *featurePtsP, long numFeaturePts, long *isInternalP);
BENTLEYDTM_Public                      int bcdtmInsert_checkForColinearLines (double X1, double Y1, double X2, double Y2, double X3, double Y3, double X4, double Y4, double Mpptol); 
BENTLEYDTM_Public                      int bcdtmInsert_checkForCreationOfKnotInExistingFeatureDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, long *createKnotP); 
BENTLEYDTM_Public                      int bcdtmInsert_checkForPointLinePrecisionErrorDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, double x, double y, long *precisionError, long *antPt, long *clockPt); 
BENTLEYDTM_Public                      int bcdtmInsert_checkPointCanBeMovedOnToLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double x, double y); 
BENTLEYDTM_Public                      int bcdtmInsert_checkPointHullTrianglePrecisionDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double x, double y, long *precisionErrorP);
BENTLEYDTM_Public                      int bcdtmInsert_checkPointQuadrilateralPrecisionDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, long P4, double x, double y, long *precisionError); 
BENTLEYDTM_Private                     int bcdtmInsert_checkPointTriangleLinePrecisionDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double x, double y, long *precisionError);
BENTLEYDTM_Public                      int bcdtmInsert_checkPointXYCanBeMovedDtmObject (BC_DTM_OBJ *dtmP, long Point, long *moveFlagP, double x, double y); 
BENTLEYDTM_Public                      int bcdtmInsert_colinearStringDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *hullPtsP, long numHullPts, long *startPntP);
BENTLEYDTM_Private                     int bcdtmInsert_determineStringHullIntersectionsDtmObject (DTM_STR_INT_TAB *activeIntTableP, long activeIntTablePNe, DTM_STR_INT_PTS **intPtsPP, long *numIntPtsP, long *memIntPtsP, long incIntPts, double mppTol);
BENTLEYDTM_Private                     int bcdtmInsert_determineStringHullLineIntersectionsDtmObject (DTM_STR_INT_TAB *activeIntTableP, long numActiveIntTable, DTM_STR_INT_PTS **intPtsPP, long *numIntPtsP, long *memIntPtsP, long incIntPts);
BENTLEYDTM_Private                     int bcdtmInsert_determineStringHullPointIntersections (DTM_STR_INT_TAB *ActIntTable, long ActIntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
BENTLEYDTM_Private                     int bcdtmInsert_findClosestHullLineDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long *hullPnt1P, long *hullPnt2P);
BENTLEYDTM_Public                      int bcdtmInsert_findClosestLineInterceptWithHullDtmObject (BC_DTM_OBJ *dtmP, long firstPnt, long lastPnt, long *p1P, long *p2P); 
BENTLEYDTM_Public                      int bcdtmInsert_fixPointHullTrianglePrecisionDtmObject (BC_DTM_OBJ *dtmP, long trgPnt1, long trgPnt2, long trgPnt3, double pointX, double pointY, double *fixedXP, double *fixedYP, long *fixTypeP);
BENTLEYDTM_Public                      int bcdtmInsert_fixPointQuadrilateralPrecisionDtmObject (BC_DTM_OBJ *dtmP, long trgPnt1, long trgPnt2, long trgPnt3, long trgPnt4, double pointX, double pointY, double *fixedXP, double *fixedYP, long *fixTypeP);
BENTLEYDTM_Public                      int bcdtmInsert_getIntersectPointDtmObject (BC_DTM_OBJ *dtmP, long firstPnt, long lastPnt, long Ip, long *insertLine, long *P1, long *P2, long *P3, double *Xi, double *Yi); 
BENTLEYDTM_Public                      int bcdtmInsert_getNextFeatureListOffsetDtmObject (BC_DTM_OBJ *dtmP, long *listOffsetP); 
BENTLEYDTM_Private                     int bcdtmInsert_getRigidIntersectPointDtmObject (BC_DTM_OBJ *dtmP, long firstPnt, long lastPnt, long indexPnt, long *dtmFeatureLineP, long *dtmPnt1P, long *dtmPnt2P, long *dtmPnt3P, double *intXP, double *intYP); 
BENTLEYDTM_Public                      int bcdtmInsert_getZvalueDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, double x, double y, double *z); 
BENTLEYDTM_EXPORT                      int bcdtmInsert_internalDtmFeatureMrDtmObject(BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long drapeOption, long insertOption, DTMUserTag userTag, DTMFeatureId **featureIdsPP, long *numFeatureIdsP, DPoint3d *featurePtsP, long numFeaturePts, DTMInsertPointCallback insertPointCallback = nullptr);
BENTLEYDTM_EXPORT                      int bcdtmInsert_internalStringIntoDtmObject(BC_DTM_OBJ *dtmP, long drapeOption, long insertOption, DPoint3d *stringPtsP, long numStringPts, long *startPntP, DTMInsertPointCallback insertPointCallback = nullptr);
BENTLEYDTM_Private                     int bcdtmInsert_intersectionLinesHullExternalInsertLineCompareFunction(const DTM_STR_INT_PTS *intPnt1P, const DTM_STR_INT_PTS  *intPnt2P);
BENTLEYDTM_Private                     int bcdtmInsert_intersectionPointsExternalInsertLineCompareFunction (const DTM_STR_INT_PTS *intPnt1P, const DTM_STR_INT_PTS  *intPnt2P);
BENTLEYDTM_Private                     int bcdtmInsert_intersectStringWithTinHullDtmObject (BC_DTM_OBJ *dtmP, DPoint3d **stringPtsPP, long *numStringPtsP, double mppTol);
BENTLEYDTM_Public                      int bcdtmInsert_lineBetweenPointsDtmObject(BC_DTM_OBJ *dtmP, long firstPnt, long lastPnt, long drapeOption, long insertOption, DTMInsertPointCallback insertPointCallback = nullptr);
BENTLEYDTM_Public                      int bcdtmInsert_normalIntersectInsertLineDtmObject(BC_DTM_OBJ *dtmP, long Fp, long Lp, long P1, long P2, double *Xi, double *Yi);
BENTLEYDTM_Public                      int bcdtmInsert_pointIntoAllDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3); 
BENTLEYDTM_Public                      int bcdtmInsert_pointIntoAllDtmFeaturesWithPntTypeDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, int pntType); 
BENTLEYDTM_Public                      int bcdtmInsert_pointIntoDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long P1, long P2, long P3);
BENTLEYDTM_Public                      int bcdtmInsert_removeDtmFeatureFromDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Public                      int bcdtmInsert_removeDtmTinFeatureFromDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature); 
BENTLEYDTM_Public                      int bcdtmInsert_removeFirstPointDtmDataFeatureFromDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Public                      int bcdtmInsert_removeOffsetsArrayDtmDataFeatureFromDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Public                      int bcdtmInsert_removePointFromAllDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP, long point);
BENTLEYDTM_Public                      int bcdtmInsert_removePointFromDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long point, long dtmFeature); 
BENTLEYDTM_Public                      int bcdtmInsert_removePointsArrayDtmDataFeatureFromDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Private                     int bcdtmInsert_removeSliverTriangleDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3); 
BENTLEYDTM_Public                      int bcdtmInsert_removeZeroSlopeTrianglesAlongContourLinesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmInsert_removeZeroSlopeTrianglesAlongTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt); 
BENTLEYDTM_Public                      int bcdtmInsert_retriangualteAlongBreakLineDtmObject (BC_DTM_OBJ *dtmP, long startPnt); 
BENTLEYDTM_Public                      int bcdtmInsert_retriangualteAlongBreakLinesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmInsert_retriangualteAlongTptrListDtmObject (BC_DTM_OBJ *dtmP, long firstPoint);
BENTLEYDTM_Public                      int bcdtmInsert_rigidExternalStringIntoDtmObject (BC_DTM_OBJ *dtmP, long drapeOption, long insertOption, DPoint3d *userStringPtsP, long numUserStringPts, long *startPntP);
BENTLEYDTM_Public                      int bcdtmInsert_rigidInternalStringIntoDtmObject (BC_DTM_OBJ *dtmP, long drapeFlag, long insertFlag, DPoint3d *stringPtsP, long numStringPts, long *startPntP); 
BENTLEYDTM_Private                     int bcdtmInsert_rigidLineBetweenPointsDtmObject (BC_DTM_OBJ *dtmP, long firstPnt, long lastPnt, long drapeFlag, long insertFlag); 
BENTLEYDTM_Public                      int bcdtmInsert_rollBackDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId featureId);
BENTLEYDTM_Public                      int bcdtmInsert_rollBackDtmFeaturesExternalToTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt);
BENTLEYDTM_Private                     int bcdtmInsert_rubberBandHullLinesOnToInsertStringDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *stringPtsP, long numStringPts, long *numMovedP);
BENTLEYDTM_Private                     int bcdtmInsert_rubberBandHullPointsOnToInsertStringDtmObject (BC_DTM_OBJ *dtmP, DPoint3d **stringPtsPP, long *numStringPtsP, long *numMovedP); 
BENTLEYDTM_Private                     int bcdtmInsert_rubberBandTinPointsOnToInsertStringLinesDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *stringPtsP, long numStringPts, long *numMovedP); 
BENTLEYDTM_Public                      int bcdtmInsert_rubberBandTinPointsOnToInsertStringPointsDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *StringPts, long NumStringPts, long *numMovedP); 
BENTLEYDTM_Public                      int bcdtmInsert_scanAndInsertBrokenTptrLinksDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long drapeOption, long insertOption);
BENTLEYDTM_Private                     int bcdtmInsert_scanForStringHullIntersectionsDtmObject (DTM_STR_INT_TAB *intTableP, long numIntTable, DTM_STR_INT_PTS **intPtsPP, long *numIntPtsP, long *memIntPtsP, long incIntPts, double mppTol);
BENTLEYDTM_Private                     int bcdtmInsert_scanForStringHullLineIntersectionsDtmObject (DTM_STR_INT_TAB *intTableP, long numIntTable, DTM_STR_INT_PTS **intPtsPP, long *numIntPtsP, long *memIntPtsP, long incIntPts);
BENTLEYDTM_Private                     int bcdtmInsert_scanForStringHullPointIntersections (DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
BENTLEYDTM_Private                     int bcdtmInsert_scanPointForPointAngleIntersectionWithTriangleBaseDtmObject (BC_DTM_OBJ *dtmP, long pnt, long anglePnt, long *basePnt1P, long *basePnt2P); 
BENTLEYDTM_Public                      int bcdtmInsert_storePointInDtmObject(BC_DTM_OBJ *dtmP, long drapeOption, long internalPoint, double x, double y, double z, long *dtmPointNumP, DTMInsertPointCallback insertPointCallback = nullptr);
BENTLEYDTM_Public                      int bcdtmInsert_storeRigidPointInDtmObject(BC_DTM_OBJ *dtmP, long drapeFlag, long insertFlag, double x, double y, double z, long *dtmPntNumP);
BENTLEYDTM_Public                      int bcdtmInsert_swapTinLinesThatIntersectInsertLineDtmObject (BC_DTM_OBJ *dtmP, long Fp, long Lp, bool allowAdd);
BENTLEYDTM_Private                     int bcdtmInsert_swapTinLinesThatIntersectInsertLineDtmObject (BC_DTM_OBJ *dtmP, long Fp, long Lp);
BENTLEYDTM_Public                      int bcdtmInsert_triangulateAboutPointDtmObject (BC_DTM_OBJ *dtmP, long point);

///////// bcdtmInterpolate/////////
BENTLEYDTM_EXPORT                      int bcdtmInterpolate_dtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, double snapTolerance, BC_DTM_OBJ *spotsP, BC_DTM_OBJ *intDtmP, long *numDtmFeaturesP, long *numDtmFeaturesInterpolatedP);
BENTLEYDTM_Private                     int bcdtmInterpolate_findClosestPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, long *cPointP);
BENTLEYDTM_Private                  double bcdtmInterpolate_getDistanceFromPointDtmObject (BC_DTM_OBJ *dtmP, long point, double x, double y);
BENTLEYDTM_Public                      int bcdtmInterpolate_getPointOnArc (double *Px, double *Py, double Paxis, double Saxis, double Angle); 
BENTLEYDTM_Private                     int bcdtmInterpolate_linearFeatureDtmObject (BC_DTM_OBJ *spotsDtmP, DPoint3d **pointsPP, long *numPointsP, double snapTolerance, long *interpolationResultP);
BENTLEYDTM_Public                      int bcdtmInterpolate_rotateAndTranslatePoint (double Px, double Py, double Tx, double Ty, double RotAngle, double *Nx, double *Ny); 
BENTLEYDTM_Public                      int bcdtmInterpolate_translateAndRotatePoint (double Px, double Py, double Tx, double Ty, double RotAngle, double *Nx, double *Ny); 

///////// bcdtmInterruptLoad/////////
BENTLEYDTM_Private                     int bcdtmInterruptLoad_dtmFeatureFeatureIdOccurrencesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId featureId, long maxSpots, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_dtmFeaturesForFeatureIdDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId featureId, long maxSpots, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP) ;
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_dtmFeaturesForUsertagDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag userTag, long maxSpots, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP) ;
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_dtmFeaturesWithTinErrorsDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_dtmFeatureTypeFromDtmFile (WCharCP dtmFileP, DTMFeatureType dtmFeatureType, long maxSpots, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_dtmFeatureTypeFromDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long maxSpots, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP);
BENTLEYDTM_Private                     int bcdtmInterruptLoad_dtmFeatureTypeOccurrencesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long maxSpots, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_Private                     int bcdtmInterruptLoad_dtmFeatureUsertagOccurrencesDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag userTag, long maxSpots, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_slopeLinesBetweenDtmObjects (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DTMFeatureCallback loadFunctionP, double majorInterval, double minorInterval, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_triangleHillShadeMeshFromDtmObject (BC_DTM_OBJ *dtmP, long maxTriangles, long greyScaleRange, double altitudeDegrees, double azimuthDegrees, double zAxisFactor, DTMTriangleHillShadeMeshCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_triangleMeshFromDtmObject (BC_DTM_OBJ *dtmP, long maxTriangles, DTMTriangleMeshCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d  *fencePtsP, long numFencePts, void *userP);
BENTLEYDTM_Private                     int bcdtmInterruptLoad_trianglesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_trianglesFromDtmFile (WCharCP dtmFileP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_trianglesFromDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_triangleShadeMeshForQVCacheFromDtmObject (BC_DTM_OBJ *dtmP, long maxTriangles, long vectorOption, double zAxisFactor, DTMTriangleShadeMeshCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d  *fencePtsP, long numFencePts, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmInterruptLoad_triangleShadeMeshFromDtmObject (BC_DTM_OBJ *dtmP, long maxTriangles, long vectorOption, double zAxisFactor, DTMTriangleShadeMeshCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d  *fencePtsP, long numFencePts, void *userP);

///////// bcdtmJoin/////////
BENTLEYDTM_Private                     int bcdtmJoin_appendJoinedLineStringsToDtmObject (BC_DTM_OBJ *dataP, BC_DTM_OBJ *joinP, DTMFeatureType dtmFeatureType, double tolerance, DTM_JOIN_FEATURE_TABLE *featureTableP, long numFeatureTable, DTM_JOIN_LINE_TABLE *lineTableP, long numLineTable, DTM_JOIN_USER_TAGS **joinUserTagsPP, long *numJoinUserTagsP); 
BENTLEYDTM_Private                     int bcdtmJoin_buildJoinFeatureTableFromDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTM_JOIN_FEATURE_TABLE **featureTablePP, long *numFeatureTableP); 
BENTLEYDTM_Private                     int bcdtmJoin_buildJoinLineTable (DTM_JOIN_NODE_TABLE *nodeTableP, long numNodeTable, DTM_JOIN_LINE_TABLE **lineTablePP, long *numLineTableP, long *numJoinedLinesP); 
BENTLEYDTM_Private                     int bcdtmJoin_buildJoinNodeTable (DTM_JOIN_FEATURE_TABLE *featureTableP, long numFeatureTable, DTM_JOIN_NODE_TABLE **nodeTablePP, long *numNodeTableP); 
BENTLEYDTM_EXPORT                      int bcdtmJoin_dtmFeatureTypeDtmObject (BC_DTM_OBJ *dataP, double tolerance, DTMFeatureType dtmFeatureType, DTMFeatureType joinFeatureType, long *numBeforeJoinP, long *numAfterJoinP, DTM_JOIN_USER_TAGS **joinUserTagsPP, long *numJoinUserTagsP); 
BENTLEYDTM_EXPORT                      int bcdtmJoin_dtmFeatureTypeGeopakDatFile (WCharCP dataFilePName, WCharCP joinFileName, DTMFeatureType dtmFeatureType, DTMFeatureType joinFeatureType, double tolerance, long *numBeforeJoin, long *numAfterJoin); 
BENTLEYDTM_EXPORT                      int bcdtmJoin_dtmFeatureTypeWithRollbackDtmObject (BC_DTM_OBJ *dataP, double tolerance, DTMFeatureType dtmFeatureType, DTMFeatureType joinFeatureType, long *numBeforeJoinP, long *numAfterJoinP, DTM_JOIN_USER_TAGS **joinUserTagsPP, long *numJoinUserTagsP, int useRollBack); 
BENTLEYDTM_Private                     int bcdtmJoin_findClosestNode (DTM_JOIN_NODE_TABLE *nodeTableP, long numNodeTable, DTM_JOIN_NODE_TABLE *nodeP, long joinContours, double tolerance, DTM_JOIN_NODE_TABLE **closestNodePP); 
BENTLEYDTM_Private                     int bcdtmJoin_nodes (DTM_JOIN_NODE_TABLE *nodeTableP, long numNodeTable, long joinContours, double tolerance); 
BENTLEYDTM_Private                     int bcdtmJoin_nodeTableCompareFunction (const DTM_JOIN_NODE_TABLE *n1P, const DTM_JOIN_NODE_TABLE *n2P); 

///////// bcdtmLattice/////////
BENTLEYDTM_Public                      int bcdtmLattice_calculateNumberOfLatticeLines (double Xdif, double Ydif, long *Xll, long *Yll, long NoLatPts); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createDemTinDtmObject (BC_DTM_OBJ *dtmP, long numRows, long numColumns, double nullValue); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createDtmFileFromLatticeFile (WCharCP latticeFileP, WCharCP dtmFileP); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createDtmObjectFromLatticeObject (DTM_LAT_OBJ *latticeP, BC_DTM_OBJ **dtmPP); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createIsopachLatticeFromDtmFile (WCharCP dtmFileNameP, WCharCP latticeFileP, long polynomialOption, long latticeOption, long numLatticePts, double elevation, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax);
BENTLEYDTM_EXPORT                      int bcdtmLattice_createIsopachLatticeFromDtmFiles (WCharCP fromDtmFileP, WCharCP toDtmFileP, WCharCP latticeFileP, long latticeOption, long numLatticePts, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createIsopachLatticeFromDtmObject (BC_DTM_OBJ *dtmP, DTM_LAT_OBJ **latticePP, long polynomialOption, long latticeOption, long numLatticePts, double elevation, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax);
BENTLEYDTM_EXPORT                      int bcdtmLattice_createIsopachLatticeFromDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DTM_LAT_OBJ **latticePP, long latticeOption, long numLatticePts, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createLatticeFromDtmFile (WCharCP dtmFileNameP, WCharCP toDtmFileP, long polynomialOption, long latticeOption, long numLatticePts, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createLatticeFromDtmObject (BC_DTM_OBJ *dtmP, DTM_LAT_OBJ **latticePP, long polynomialOption, long latticeOption, long numLatticePts, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createLatticeThemeFromDtmFiles (WCharCP fromDtmFileP, WCharCP toDtmFileP, WCharCP latticeFileP, long themeOption, long latticeOption, long numLatticePts, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax);
BENTLEYDTM_EXPORT                      int bcdtmLattice_createLatticeThemeFromDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DTM_LAT_OBJ **latticePP, long themeOption, long latticeOption, long numLatticePts, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax); 
BENTLEYDTM_EXPORT                      int bcdtmLattice_createReferenceAndIsopachLatticesFromDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DTM_LAT_OBJ **refLatticePP, DTM_LAT_OBJ **isoLatticePP, long latticeOption, long numLatticePts, double xinc, double xreg, double xmin, double xmax, double yinc, double yreg, double ymin, double ymax) ;
BENTLEYDTM_Public                      int bcdtmLattice_getPartialDerivatives (long p1, long p2, long p3, double *Pdv, double pd[]); 
BENTLEYDTM_Private                     int bcdtmLattice_insertVoidsAndIslandsIntoDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *voidDtmP); 
BENTLEYDTM_Public                      int bcdtmLattice_moveZLatticeObject (DTM_LAT_OBJ *latticeP, double moveValue, long moveOption);
BENTLEYDTM_Public                      int bcdtmLattice_populateIsopachLatticeFromDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DTM_LAT_OBJ *latticeP); 
BENTLEYDTM_Public                      int bcdtmLattice_populateLatticeDtmObject (BC_DTM_OBJ *dtmP, DTM_LAT_OBJ *latticeP, long polynomialOption, double *partialDerivP); 
BENTLEYDTM_Private                     int bcdtmLattice_populateLatticeThemeFromDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DTM_LAT_OBJ *latticeP, long themeOption); 
BENTLEYDTM_Private                     int bcdtmLattice_populateReferenceAndIsopachLatticesFromDtmObjects (BC_DTM_OBJ  *fromDtmP, BC_DTM_OBJ  *toDtmP, DTM_LAT_OBJ *refLatticeP, DTM_LAT_OBJ *isoLatticeP);
BENTLEYDTM_Private                     int bcdtmLattice_removeNullPointsOnTinHullDtmObject (BC_DTM_OBJ *dtmP, double nullValue); 
BENTLEYDTM_Private                     int bcdtmLattice_resolveVoidsFromBreakLinesDtmObject (BC_DTM_OBJ *voidDtmP); 
BENTLEYDTM_Private                     int bcdtmLattice_triangulateDemDtmObject (BC_DTM_OBJ *dtmP, long numRows, long numColumns, double nullValue); 
BENTLEYDTM_Private                     int bcdtmLattice_triangulateGridDtmObject (BC_DTM_OBJ *dtmP, long numRows, long numColumns, double nullValue); 
BENTLEYDTM_Private                     int bcdtmLattice_voidInternalNullPointsDtmObject (BC_DTM_OBJ *dtmP, double nullValue); 

///////// bcdtmLatticeVolume/////////
BENTLEYDTM_Private                     int bcdtmLatticeVolume_calculateVolumeSurfaceToElevationDtmObject (BC_DTM_OBJ *dtmP, long numLatticePts, DTM_POLYGON_OBJ *polyP, long intersectFlag, VOLRANGETAB *rangeTableP, long numRanges, double elevation, DTMFeatureCallback loadFunctionP, void *userP,  double &cutP, double &fillP, double &balanceP, double &cutAreaP, double&fillAreaP, long &numCellsP, double &cellAreaP); 
BENTLEYDTM_Private                     int bcdtmLatticeVolume_calculateVolumeSurfaceToSurfaceDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DTM_POLYGON_OBJ *polyP, long intersectFlag, long numLatticePts, VOLRANGETAB *rangeTableP, long numRanges, DTMFeatureCallback loadFunctionP, void *userP,  double &cutP, double &fillP, double &balanceP, double &cutAreaP, double &fillAreaP, long &numCellsP, double &cellAreaP); 
BENTLEYDTM_EXPORT                      int bcdtmLatticeVolume_surfaceToElevationDtmFile (WCharCP dtmFileP, long numLatticePts, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, double elevation, DTMFeatureCallback loadFunctionP, void *userP, double *cutP, double *fillP, double *balanceP, double *areaP, long *numCellsP, double *cellAreaP); 
BENTLEYDTM_EXPORT                      int bcdtmLatticeVolume_surfaceToElevationDtmObject (BC_DTM_OBJ *dtmP, long numLatticePts, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, double elevation, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &cutAreaP, double &fillAreaP, long &numCellsP, double &cellAreaP);
BENTLEYDTM_EXPORT                      int bcdtmLatticeVolume_surfaceToSurfaceDtmFiles (WCharCP fromDtmFileP, WCharCP toDtmFileP, long numLatticePts, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, void *userP,  double *cutP, double *fillP, double *balanceP, double *areaP, long *numCellsP, double *cellAreaP); 
BENTLEYDTM_EXPORT                      int bcdtmLatticeVolume_surfaceToSurfaceDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, long numLatticePts, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &cutAreaP, double &fillAreaP, long &numCellsP, double &cellAreaP);

/////////// bcdtmLidarFilter/////////
BENTLEYDTM_Public                      int bcdtmLidarFilter_coarseFilterTinPointsDtmObject (BC_DTM_OBJ *dtmP, double zTolerance, long *numFilteredP); 
BENTLEYDTM_Public                      int bcdtmLidarFilter_fineFilterTinPointsDtmObject (BC_DTM_OBJ *dtmP, double zTolerance, long *numFilteredP); 

///////// bcdtmList/////////
BENTLEYDTM_Private                     int bcdtmList_addDtmFeatureToTptrListDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long *firstPntP, long *lastPntP, long *numAddedP);
BENTLEYDTM_Public                      int bcdtmList_addLineDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                      int bcdtmList_checkConnectivityOfDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long messageOption); 
BENTLEYDTM_Public                      int bcdtmList_checkConnectivitySptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long messageFlag);
BENTLEYDTM_Public                      int bcdtmList_checkConnectivityTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long messageFlag); 
BENTLEYDTM_Public                      int bcdtmList_checkConnectivityTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long messageFlag); 
BENTLEYDTM_Public                      int bcdtmList_checkForNoneNullSptrValuesDtmObject (BC_DTM_OBJ *dtmP, long *noneNullSptrP);
BENTLEYDTM_Public                      int bcdtmList_checkForNoneNullTptrValuesDtmObject (BC_DTM_OBJ *dtmP, long *noneNullSptrP);
BENTLEYDTM_Public                      int bcdtmList_cleanDtmFeatureListsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmList_cleanDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmList_cleanSptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt);
BENTLEYDTM_Public                      int bcdtmList_cleanTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt); 
BENTLEYDTM_EXPORT                      int bcdtmList_copyAllDtmFeatureTypePointsToPointArraysDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTM_POINT_ARRAY ***featuresPPP, long *numFeaturesP);
BENTLEYDTM_Public                      int bcdtmList_copyCircularListPointsToPointArrayFromDtmObjectToDtmObject (BC_DTM_OBJ *dtmP, DTMDirection direction, long firstPnt, long point, long lastPnt, DPoint3d  **cirPtsPP, long *numCirPtsP);
BENTLEYDTM_EXPORT                      int bcdtmList_copyDtmFeaturePointsToPointArrayDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, DPoint3d **featPtsPP, long *numFeatPtsP);
BENTLEYDTM_Public                      int bcdtmList_copyDtmFeaturePointsToPointOffsetArrayDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long **featPtsPP, long *numFeatPtsP);
BENTLEYDTM_Public                      int bcdtmList_copyDtmFeatureToSptrListDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long *startPnt);
BENTLEYDTM_Public                      int bcdtmList_copyDtmFeatureToTptrListDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long *startPnt); 
BENTLEYDTM_Public                      int bcdtmList_copyHptrListToTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt);
BENTLEYDTM_Public                      int bcdtmList_copyPointListToTptrListDtmObject (BC_DTM_OBJ *dtmP, long *pntListP, long numPntList, long *startPointP);
BENTLEYDTM_Public                      int bcdtmList_copyPointListToTptrValuesDtmObject (BC_DTM_OBJ *dtmP, long *pntListP);
BENTLEYDTM_Public                      int bcdtmList_copySptrListToPointArrayDtmObject (BC_DTM_OBJ *dtmP, long startPnt, DPoint3d **tptrPtsPP, long *numTptrPtsP);
BENTLEYDTM_Public                      int bcdtmList_copySptrListToPointListDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long **pntListPP, long *numPntListP);
BENTLEYDTM_Public                      int bcdtmList_copySptrListToTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt);
BENTLEYDTM_Public                      int bcdtmList_copyTptrListFromDtmObjectToDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, long startPnt, DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId);
BENTLEYDTM_Public                      int bcdtmList_copyTptrListToHptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt);
BENTLEYDTM_Public                      int bcdtmList_copyTptrListToPointArrayDtmObject (BC_DTM_OBJ *dtmP, long startPnt, DPoint3d **tptrPtsPP, long *numTptrPtsP);
BENTLEYDTM_Public                      int bcdtmList_copyTptrListToPointListDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long **pntListPP, long *numPntListP);
BENTLEYDTM_Public                      int bcdtmList_copyTptrListToSptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt);
BENTLEYDTM_Public                      int bcdtmList_copyTptrValuesToPointListDtmObject (BC_DTM_OBJ *dtmP, long **pntListPP);
BENTLEYDTM_EXPORT                      int bcdtmList_countNonVoidTrianglesAndLinesDtmObject (BC_DTM_OBJ *dtmP, long *numTrianglesP, long *numLinesP);
BENTLEYDTM_Public                      int bcdtmList_countNumberOfDtmFeaturePointsDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long *numPtsP, long *closeFlagP);
BENTLEYDTM_Public                      int bcdtmList_countNumberOfDtmFeaturesForPointDtmObject (BC_DTM_OBJ *dtmP, long point, long *numFeaturesP);
BENTLEYDTM_Public                      int bcdtmList_countNumberOfDtmFeaturesForLineDtmObject(BC_DTM_OBJ *dtmP, long point1, long point2, long *numFeaturesP);
BENTLEYDTM_Public                      int bcdtmList_countNumberOfHardBreakFeaturesForPointDtmObject (BC_DTM_OBJ *dtmP, long point, long *numFeaturesP);
BENTLEYDTM_Public                      int bcdtmList_countNumberOfPointsForDtmTinFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long *numPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmList_countTinFeaturesWithErrorsDtmObject (BC_DTM_OBJ *dtmP, long *numFeatureErrorsP, long *numContourLinesP, long *numHardBreaksP, long *numVoidsP, long *numIslandsP, long *numHolesP, long *numBreakVoidsP, long *numDrapeVoidsP, long *numGroupSpotsP, long *numPolygonsP, long *numHullsP);
BENTLEYDTM_Public                      int bcdtmList_countTrianglesAndLinesDtmObject (BC_DTM_OBJ *dtmP, long *numTrianglesP, long *numLinesP); 
BENTLEYDTM_Public                      int bcdtmList_deleteLineDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                      int bcdtmList_expandTptrPolygonAtPointDtmObject (BC_DTM_OBJ *dtmP, long *pointP);
BENTLEYDTM_EXPORT                      int bcdtmList_extractDtmFeatureForUsertagDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag usertag, long *numFeaturesP, long *featureTypeP, DPoint3d **featurePtsPP, long *numFeaturePtsP);
BENTLEYDTM_EXPORT                      int bcdtmList_extractHullDtmObject (BC_DTM_OBJ *dtmP, DPoint3d **hullPtsPP, long *numHullPtsP);
BENTLEYDTM_EXPORT                      int bcdtmList_extractHullWithConnectingUserTagsDtmObject (BC_DTM_OBJ *dtmP, P3DTAG **hullPtsPP, long *numHullPtsP);
BENTLEYDTM_EXPORT                      int bcdtmList_extractHullWithDtmFeatureTypeAndUserTagsDtmObject (BC_DTM_OBJ *dtmP, P3DTAG **hullPtsPP, long *numHullPtsP);
BENTLEYDTM_EXPORT                      int bcdtmList_getBreakLineUsertagsAtPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, DTMUserTag **userTagsPP, long *numUserTagsP);
BENTLEYDTM_EXPORT                      int bcdtmList_getBreakLineUsertagsAtTinPointDtmObject (BC_DTM_OBJ *dtmP, long tinPoint, DTMUserTag **userTagsPP, long *numUserTagsP);
BENTLEYDTM_EXPORT                      int bcdtmList_getConnectedBreakLineUsertagsAtPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, DTMUserTag **userTagsPP, long *numUserTagsP);
BENTLEYDTM_EXPORT                      int bcdtmList_getConnectedUsertagsDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag userTag, DTMUserTag **userTagsPP, long *numUserTagsP);
BENTLEYDTM_Public                      int bcdtmList_getDtmFeatureForDtmFeatureTypeOnLineDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long pnt1, long pnt2, long *dtmFeatureP);
BENTLEYDTM_Public                      int bcdtmList_getDtmFeaturesAndUserTagsForTinLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, DTMFeatureType **dtmFeaturesTypesPP, DTMUserTag **dtmUserTagsPP, long *numFeaturesP);
BENTLEYDTM_EXPORT                      int bcdtmList_getDtmFeaturesForLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, bvector<DTMTinPointFeatures>& lineFeaturesPP); 
BENTLEYDTM_Public                      int bcdtmList_getDtmFeaturesForPointDtmObject (BC_DTM_OBJ *dtmP, long point, bvector<DTMTinPointFeatures>& pointFeaturesPP); 
BENTLEYDTM_Public                      int bcdtmList_getDtmFeatureTypeOccurrencesForLineDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long P1, long P2, DTMTinPointFeatures **lineFeatures, long *numLineFeatures);
BENTLEYDTM_Public                      int bcdtmList_getDtmFeatureTypeOccurrencesForPointDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long Point, DTMTinPointFeatures **pointFeatures, long *numPointFeatures);
BENTLEYDTM_EXPORT                      int bcdtmList_getFeaturesAtPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, DTMUserTag features[], long maxFeatures, long *numFeaturesP);
BENTLEYDTM_Public                      int bcdtmList_getFirstAndLastPointForDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long *firstPntP, long *lastPntP);
BENTLEYDTM_Public                      int bcdtmList_getFirstAndLastPointForDtmTinFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long *firstPntP, long *lastPntP); 
BENTLEYDTM_Public                      int bcdtmList_getHullFeaturesForPointDtmObject (BC_DTM_OBJ *dtmP, long Point, DTMTinPointFeatures **pointFeaturesPP, long *numPointFeaturesP); 
BENTLEYDTM_Public                      int bcdtmList_getLastPointInTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long *lastPntP, long *lastPriorPntP);
BENTLEYDTM_EXPORT                      int bcdtmList_getNextPointForDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long currentPnt, long *nextPntP); 
BENTLEYDTM_Public                      int bcdtmList_getPointerAndOffsetToNextDtmFeatureTypeOccurrenceDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long firstCall, BC_DTM_FEATURE **dtmFeaturePP, long *dtmFeatureNumP); 
BENTLEYDTM_Public                      int bcdtmList_getPriorPointForDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long currentPnt, long *priorPntP); 
BENTLEYDTM_Public                      int bcdtmList_getTptrPriorAndNextPointsDtmObject (BC_DTM_OBJ *dtmP, long thisPnt, long *priorPntP, long *nextPntP);
BENTLEYDTM_Public                      int bcdtmList_getVoidExternalToIslandDtmObject (BC_DTM_OBJ *dtmP, long islandFeature, long *voidFeatureP);
BENTLEYDTM_Private                     int bcdtmList_getVoidFeatureExternalToIslandFeatureDtmObject (BC_DTM_OBJ *dtmP, long islandFeature, long *voidFeatureP);
BENTLEYDTM_Public                      int bcdtmList_insertLineAfterPointDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long Ap); 
BENTLEYDTM_Public                      int bcdtmList_insertLineBeforePointDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long Bp); 
BENTLEYDTM_Public                      int bcdtmList_insertLineDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                      int bcdtmList_insertTptrPolygonAroundPointDtmObject (BC_DTM_OBJ *dtmP, long point, long *startPntP);
BENTLEYDTM_EXPORT                     long bcdtmList_nextAntDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                     long bcdtmList_nextClkDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                      int bcdtmList_nullHptrValuesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmList_nullSptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt);
BENTLEYDTM_Public                      int bcdtmList_nullSptrValuesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmList_nullTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt); 
BENTLEYDTM_Public                      int bcdtmList_nullTptrValuesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Private                     int bcdtmList_qsortDtmObject (BC_DTM_OBJ *dtmP, long ns, long ofs, long *sortP, long *tempP); 
BENTLEYDTM_Public                      int bcdtmList_rangeNullTptrValuesDtmObject (BC_DTM_OBJ *dtmP, long startNode, long endNode); 
BENTLEYDTM_Private                     int bcdtmList_removeLastPointFromDtmFeatureListDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Public                      int bcdtmList_removeLineDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_EXPORT                      int bcdtmList_removeNoneFeatureHullLinesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmList_reportAndSetToNullNoneNullSptrValuesDtmObject (BC_DTM_OBJ *dtmP, long reportFlag); 
BENTLEYDTM_Public                      int bcdtmList_reportAndSetToNullNoneNullTptrValuesDtmObject (BC_DTM_OBJ *dtmP, long reportFlag); 
BENTLEYDTM_Public                      int bcdtmList_reportNumberOfPointsMarkedForDeleteDtmObject (BC_DTM_OBJ *dtmP, long reportOption, long *numMarkedPointsP);
BENTLEYDTM_Public                      int bcdtmList_resortTinStructureDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmList_reverseDtmTinFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature); 
BENTLEYDTM_Public                      int bcdtmList_reverseSptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long firstPnt);
BENTLEYDTM_Public                      int bcdtmList_reverseTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long firstPnt);
BENTLEYDTM_EXPORT                      int bcdtmList_setConvexHullDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmList_setNumberOfSortedPointsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmList_setPntTypeForForDtmTinFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long pntType);
BENTLEYDTM_Public                      int bcdtmList_testForBreakLineDirectionDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2);
BENTLEYDTM_EXPORT                      int bcdtmList_testForBreakLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmList_testForBreakPointDtmObject (BC_DTM_OBJ *dtmP, long point); 
BENTLEYDTM_Public                      int bcdtmList_testForDtmFeatureLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmList_testForDtmFeatureTypeLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, DTMFeatureType dtmFeatureType);
BENTLEYDTM_Public                      int bcdtmList_testForHullLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmList_testForHullPointDtmObject (BC_DTM_OBJ *dtmP, long point, long *hullPointP);
BENTLEYDTM_Public                      int bcdtmList_testForIslandHullLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmList_testForIslandVoidOrHoleHullLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2);
BENTLEYDTM_Public                      int bcdtmList_testForLineOnAnIslandOrVoidHullDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2);
BENTLEYDTM_Public                      int bcdtmList_testForLineOnDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long pnt1, long pnt2);
BENTLEYDTM_Public                      int bcdtmList_testForNonDirectionalIslandVoidOrHoleHullLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmList_testForPointBetweenCircularListPointsDtmObject (BC_DTM_OBJ *dtmP, long point, long firstPoint, long lastPoint, long testPoint, bool& testPointFound);
BENTLEYDTM_Public                      int bcdtmList_testForPointInTinFeatureListDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long point, long *inListP); 
BENTLEYDTM_Public                      int bcdtmList_testForPointOnAnIslandOrVoidHullDtmObject (BC_DTM_OBJ *dtmP, long point);
BENTLEYDTM_Public                      int bcdtmList_testForPointOnDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long point, long *featureP);
BENTLEYDTM_Public                      int bcdtmList_testForPointOnIslandHullDtmObject (BC_DTM_OBJ *dtmP, long P1);
BENTLEYDTM_Public                      int bcdtmList_testForPointOnIslandVoidOrHoleHullDtmObject (BC_DTM_OBJ *dtmP, long P1);
BENTLEYDTM_Public                      int bcdtmList_testForPointOnTinFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long point, long *onFeatureP);
BENTLEYDTM_Public                      int bcdtmList_testForPointOnVoidHullDtmObject (BC_DTM_OBJ *dtmP, long P1);
BENTLEYDTM_Private                     int bcdtmList_testForSurroundingDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, long featurePnt, long featureNextPnt, long featurePriorPnt, DTMFeatureType dtmFeatureType, long *surroundFeatureP);
BENTLEYDTM_Public                      int bcdtmList_testForTinHullLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2); 
BENTLEYDTM_Public                      int bcdtmList_testForValidTriangleDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, long pnt3); 
BENTLEYDTM_Public                      int bcdtmList_testForVoidHullLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2); 
BENTLEYDTM_Public                      int bcdtmList_testForVoidLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, bool& voidLine); 
BENTLEYDTM_Public                      int bcdtmList_testForVoidOrHoleHullLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmList_testForVoidsInDtmObject (BC_DTM_OBJ *dtmP, bool& voidsInDtmP); 
BENTLEYDTM_Public                      int bcdtmList_testForVoidTriangleDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, bool& voidTriangle); 
BENTLEYDTM_Public                      int bcdtmList_testIfDirectionalLineOnDtmFeatureTypeDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmList_testIfPointOnDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeatureType, long point);
BENTLEYDTM_Public                      int bcdtmList_testLineDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                      int bcdtmList_writeCircularListForPointDtmObject (BC_DTM_OBJ *dtmP, long point); 
BENTLEYDTM_Public                      int bcdtmList_writeHptrListDtmObject (BC_DTM_OBJ *dtmP, long point); 
BENTLEYDTM_Public                      int bcdtmList_writePointsForDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature); 
BENTLEYDTM_Public                      int bcdtmList_writeSptrListDtmObject (BC_DTM_OBJ *dtmP, long point); 
BENTLEYDTM_Public                      int bcdtmList_writeTptrListDtmObject (BC_DTM_OBJ *dtmP, long point); 
BENTLEYDTM_Public                      int bcdtmList_zeroTptrValuesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmList_checkForValidTriangleDtmObject(BC_DTM_OBJ *dtmP,int trgPoint1,int trgPoint2, int trgPoint3) ;
BENTLEYDTM_Public                      int bcdtmList_checkForPointOnHullLineDtmObject(BC_DTM_OBJ *dtmP,long Point,long *HullLine) ;
BENTLEYDTM_Public                      int bcdtmList_checkForLineOnHullLineDtmObject(BC_DTM_OBJ *dtmP,long P1,long P2,long *hullLineP) ;

///////// bcdtmLoad/////////
BENTLEYDTM_Public                      int bcdtmLoad_buildContourIndexDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long lastPnt, double cMinZ, double cMaxZ, double cInt, double cReg, unsigned char **tinLinePP, DtmContourIndexArrayR contourIndexPP, long *numContourIndexP); 
BENTLEYDTM_Private                     int bcdtmLoad_buildContourIntersectionTable (DPoint3d *conPtsP, long numConPts, DTM_STR_INT_TAB **conIntTablePP, long *numConIntTableP); 
BENTLEYDTM_Public                      int bcdtmLoad_calculateNormalVectorForTriangleVertexDtmObject (BC_DTM_OBJ *dtmP, long point, long vectorOption, double zAxisFactor, DPoint3d *normalVectorP);
BENTLEYDTM_Public                      int bcdtmLoad_callUserBrowseFunctionWithCachePoints (DTMFeatureCallback loadFunctionP, DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId, void *userP);
BENTLEYDTM_Public                      int bcdtmLoad_callUserLoadFunction (DTMFeatureCallback loadFunctionP, DTMFeatureType dtmFeatureType, DTMUserTag userTag, DTMFeatureId userFeatureId, DPoint3d *featurePtsP, long numFeaturePts, void *userP);
BENTLEYDTM_Public                      int bcdtmLoad_callUserTriangleShadeMeshLoadFunction (DTMTriangleShadeMeshCallback loadFunctionP, DTMFeatureType dtmFeatureType, long numTriangles, long numMeshPts, DPoint3d *meshPtsP, DPoint3d *meshVectorsP, long numMeshFaces, long *meshFacesP, void *userP);
BENTLEYDTM_Public                      int bcdtmLoad_checkForDepressionContourDtmObject (BC_DTM_OBJ *lowHighDtmP, DPoint3d *conPtsP, long numConPts, double conInterval, long *conTypeP);
BENTLEYDTM_Public                      int bcdtmLoad_checkIfPointInCache (double x, double y, double z);
BENTLEYDTM_Public                      int bcdtmLoad_clearCache (void);
BENTLEYDTM_Public                      int bcdtmLoad_clearLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, unsigned char *maskLineP);
BENTLEYDTM_Public                      int bcdtmLoad_contourFeature (BC_DTM_OBJ *dtmP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMPondAppData* pondExtendedAppData, BC_DTM_OBJ *clipDtmP, long contourDirection, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_contourForPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double contourInterval, DTMContourSmoothing smoothOption, double smoothFactor, long smoothDensity, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DTMFenceType fenceType, DPoint3d *fencePtsP, long numFencePts, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmLoad_contoursCreateDepressionDtmObject (BC_DTM_OBJ* dtmP, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmLoad_contoursFromDtmFile (WCharCP dtmFile, double conInt, double conReg, long loadRange, double conMin, double conMax, long loadValues, double *conValuesP, long numConValues, DTMContourSmoothing smoothOption, double smoothFactor, long smoothDensity, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DTMFenceType fenceType, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_contoursFromDtmObject (BC_DTM_OBJ *dtmP, double conInt, double conReg, long loadRange, double conMin, double conMax, long loadValues, double *conValuesP, long numConValues, DTMContourSmoothing smoothOption, double smoothFactor, long smoothDensity, double smoothLength, long useFence, DTMFenceOption fenceOption, DTMFenceType fenceType, DPoint3d *fencePtsP, long numFencePts, long depressionOption, long maxSlopeOption, double maxSlopeValue, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_contoursFromDtmObject (BC_DTM_OBJ *dtmP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMFeatureCallback loadFunctionP, void* userP);
BENTLEYDTM_EXPORT                      int bcdtmLoad_contoursFromLatticeFile (WCharCP latticeFile, double conInt, double conReg, long loadRange, double conMin, double conMax, long loadValues, double *conValuesP, long numConValues, DTMContourSmoothing smoothOption, double smoothFactor, long smoothDensity, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_contoursFromLatticeObject (DTM_LAT_OBJ *latticeP, double conInt, double conReg, long loadRange, double conMin, double conMax, long loadValues, double *conValuesP, long numConValues, DTMContourSmoothing smoothOption, double smoothFactor, long smoothDensity, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_Public                      int bcdtmLoad_copyCachePointsToPointArray (DPoint3d **pointsPP, long *numPointsP);
BENTLEYDTM_Private                     int bcdtmLoad_createDepressionDtmObject(BC_DTM_OBJ *dtmP, BC_DTM_OBJ*& depressionDtm, DTMFeatureCallback ContourLoadFunctionP, void* ContourLoadFunctionUserArgP);
BENTLEYDTM_Private                     int bcdtmLoad_createTriangleShadeMeshDtmObject (BC_DTM_OBJ *dtmP, long numTriangles, double zAxisFactor, long *meshFacesP, DPoint3d **meshPtsPP, long *numMeshPtsP, long *meshPtsSizeP, DPoint3d **meshVectorsPP, long *meshVectorSizeP);
BENTLEYDTM_Private                     int bcdtmLoad_cubicInterpolateSpline (long Ind, long N, double x[], double y[], double Rho[], long Ib, double Ax, double Bx, long I, double Xx, double *Sp, double *Dsp, double *D2sp);
BENTLEYDTM_Private                     int bcdtmLoad_determineContourIntersections (DTM_STR_INT_TAB *actIntTableP, long numActIntTable, DTM_STR_INT_PTS **intPtsPP, long *numIntPtsP, long *memIntPtsP, long memIntPtsInc); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_dtmFeatureTypeFromLatticeFile (WCharCP latticeFileP, DTMFeatureType dtmFeatureType, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_dtmFeatureTypeFromLatticeObject (DTM_LAT_OBJ *latticeP, DTMFeatureType dtmFeatureType, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_Private                     int bcdtmLoad_dtmFeatureTypeOccurrencesFromLatticeObject (DTM_LAT_OBJ *latticeP, DTMFeatureType dtmFeatureType, DTMFeatureCallback loadFunctionP, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_Private                     int bcdtmLoad_filterWeightedPointArray (DPoint3d *pointsP, long *numPtsP, long *wghtPtsP, double tolerance); 
BENTLEYDTM_Private                     int bcdtmLoad_fivePointSmooth (double X1, double Y1, double X2, double Y2, double X3, double Y3, double smoothFactor, double *Sx1, double *Sy1, double *Sx2, double *Sy2, double *Sx3, double *Sy3, double *Sx4, double *Sy4, double *Sx5, double *Sy5);
BENTLEYDTM_Private                     int bcdtmLoad_fivePointSmoothContour (DPoint3d **conPtsPP, long *numConPtsP, long **weightP, double smoothFactor);
BENTLEYDTM_EXPORT                      int bcdtmLoad_freeCache (void);
BENTLEYDTM_EXPORT                      int bcdtmLoad_freeContourMemory (void); 
BENTLEYDTM_Public                      int bcdtmLoad_getCachePoints (DPoint3d **p3dPtsPP, long *numP3dPtsP);
BENTLEYDTM_Public                      int bcdtmLoad_getFirstTinLineForContourFromIndexDtmObject (BC_DTM_OBJ *dtmP, DtmContourIndexArrayR contourIndexP, long numContourIndex, double contourValue, long *contourLineP);
BENTLEYDTM_Public                      int bcdtmLoad_getNextAnt (long i1, long j1, long i2, long j2, long *i3, long *j3); 
BENTLEYDTM_Public                      int bcdtmLoad_getNextClock (long i1, long j1, long i2, long j2, long *i3, long *j3); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_latticeMeshFromLatticeObject (DTM_LAT_OBJ *latticeP, long firstCall, long maxMeshSize, long useFence, DPoint3d *fencePtsP, long numFencePts, DPoint3d **meshPtsPP, long *numMeshPtsP, long **meshFacesPP, long *numMeshFacesP);
BENTLEYDTM_Private                     int bcdtmLoad_markIntersectingTinLinePointsDtmObject (BC_DTM_OBJ *dtmP, double pnt1X, double pnt1Y, double pnt2X, double pnt2Y, long pointMark, long *leftMostPointP, long *numMarkedP);
BENTLEYDTM_Public                      int bcdtmLoad_markTinPointsExternalToFenceDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *fenceDtmP, long pointMark, long *leftMostPointP, long *numMarkedP);
BENTLEYDTM_Private                     int bcdtmLoad_markTriangleEdgesThatSpanTheFenceDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *clipDtmP, long *minPointP, long *maxPointP, long *numMarkedP);
BENTLEYDTM_Public                      int bcdtmLoad_overrideCreateDepressionDtmObject (int (*overrideP) (BC_DTM_OBJ *dtmP, BC_DTM_OBJ*& depressionDtmP, DTMFeatureCallback loadFunctionP));
BENTLEYDTM_Private                     int bcdtmLoad_plotContourAtPointDtmObject (BC_DTM_OBJ *dtmP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMPondAppData* pondExtendedAppData, BC_DTM_OBJ* clipDtmP, double x, double y, double z, long pointType, long trgPnt1, long trgPnt2, long trgPnt3, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_Private                     int bcdtmLoad_plotContourDtmObject (BC_DTM_OBJ *dtmP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMPondAppData* pondExtendedAppData, BC_DTM_OBJ* clipDtmP, double ContourValue, unsigned char *tinLineP, long voidsInDtm, DtmContourIndexArrayR contourIndexP, long numContourIndex, long *contourStartLineP, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_Private                     int bcdtmLoad_plotContourLatticeObject (DTM_LAT_OBJ *latticeP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMPondAppData* pondExtendedAppData, BC_DTM_OBJ* clipDtmP, unsigned char *markLatP, float contourValue, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_Private                     int bcdtmLoad_pullSmoothPointsBack (BC_DTM_OBJ *dtmP, double conInt, double *xKnotP, double *yKnotP, long *knotWghtP, long numKnots, long pointDensity, double contourValue, DPoint3d *conPtsP, long numConPts); 
BENTLEYDTM_Private                     int bcdtmLoad_pullSmoothPointsBackAtKnots (double x[], double y[], long weightP[], long numSplinePts, long smoothDensity, double contourValue, DPoint3d *conPtsP, long numConPts); 
BENTLEYDTM_Private                     int bcdtmLoad_pullSmoothPointsBackOnToBreakLines (double x[], double y[], long conWght[], long numPts, long pointDensity, DPoint3d *conPtsP, long numConPts); 
BENTLEYDTM_Public                      int bcdtmLoad_removeDuplicateContourPoints (void); 
BENTLEYDTM_Private                     int bcdtmLoad_scanForContourIntersections (DTM_STR_INT_TAB *conIntTableP, long numConIntTable, DTM_STR_INT_PTS **conIntPtsPP, long *nunConIntPtsP, long *memConIntPtsP, long memConIntPtsInc); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_setDtmDllLoadFunction (DTMFeatureCallback dllFunctionP); 
BENTLEYDTM_Public                      int bcdtmLoad_setLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, unsigned char *maskLineP); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_smoothContour (BC_DTM_OBJ *dtmP, double conInt, DTMContourSmoothing smoothOption, double smoothFactor, long smoothDensity); 
BENTLEYDTM_Private                     int bcdtmLoad_solvePentaDiagonalMatrix (long n, double a[], double b[], double c[], double d[], double e[], double g[], double u[], double v[], double w[], double p[], double q[], double r[], double s[], double t[], double aa[], double dd[], double z[]);
BENTLEYDTM_Private                     int bcdtmLoad_splineSmoothContour (BC_DTM_OBJ *dtmP, double conInt, DPoint3d **conPtsPP, long *numconPtsP, long **conWghtPP, DTMContourSmoothing smoothOption, double smoothFactor, long pointDensity); 
BENTLEYDTM_Public                      int bcdtmLoad_storeContourPoint (long storeOption, double x, double y, double z, long weight); 
BENTLEYDTM_Public                      int bcdtmLoad_storeFeaturePoint (double x, double y, double z, DPoint3d **loadPtsPP, long *numLoadPtsP, long *memLoadPtsP, long memLoadPtsInc);
BENTLEYDTM_Public                      int bcdtmLoad_storePointInCache (double x, double y, double z);
BENTLEYDTM_Public                      int bcdtmLoad_testForOverlapWithTinHullDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *featPtsP, long numFeatPts, DTMFenceOption *featureExtentP); 
BENTLEYDTM_Public                      int bcdtmLoad_testLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, unsigned char *maskLineP); 
BENTLEYDTM_EXPORT                      int bcdtmLoad_tinEdgesFromDtmObject (BC_DTM_OBJ *dtmP, long useFence, DPoint3d *fencePtsP, long numFencePts, long *numEdgesP, long **edgesPP, DPoint3d ***dtmPtsPPP);
BENTLEYDTM_EXPORT                      int bcdtmLoad_tinMeshFromDtmObject (BC_DTM_OBJ *dtmP, long firstCall, long maxMeshSize, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DPoint3d  **meshPtsPP, long *numMeshPtsP, long **meshFacesPP, long *numMeshFacesP);
BENTLEYDTM_EXPORT                      int bcdtmLoad_tinTrianglesFromDtmObject (BC_DTM_OBJ *dtmP, long useFence, DTMFenceType fenceType, DPoint3d *fencePtsP, long numFencePts, long *numTrianglesP, long **trianglesPP, DPoint3d ***dtmPtsPPP);
BENTLEYDTM_Private                     int bcdtmLoad_traceContourDtmObject (BC_DTM_OBJ *dtmP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMPondAppData* pondExtendedAppData, BC_DTM_OBJ* clipDTMP, double contourValue, long p1, long p2, DTMDirection direction, unsigned char *tinLineP, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_Private                     int bcdtmLoad_traceContourFromTriangleEdgeDtmObject (BC_DTM_OBJ *dtmP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMPondAppData* pondExtendedAppData, BC_DTM_OBJ* clipDtmP, double contourValue, long trgPnt1, long trgPnt2, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_Private                     int bcdtmLoad_traceContourLatticeObject (DTM_LAT_OBJ *latticeP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMPondAppData* pondExtendedAppData, BC_DTM_OBJ* clipDtmP, unsigned char *markLatP, float contourValue, long i1, long j1, long i2, long j2, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_Private                     int bcdtmLoad_traceZeroSlopeContourDtmObject (BC_DTM_OBJ *dtmP, DTMContourParamsCR contourParams, DTMFenceParamsCR fenceParams, DTMPondAppData* pondExtendedAppData, BC_DTM_OBJ* clipDtmP, long p1, long p2, DTMDirection direction, long contourDirection, double contourValue, unsigned char *tinLineP, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmLoad_trianglesFromRegionDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId featureId, DTMFeatureCallback loadFunctionP, void* userP);
BENTLEYDTM_EXPORT                      int bcdtmLoad_triangleShadeMeshForRegionDtmObject (BC_DTM_OBJ *dtmP, long maxTriangles, long vectorOption, double zAxisFactor, long regionOption, long indexOption, Int64 indexValue, DTMTriangleShadeMeshCallback loadFunctionP, void* userP);
BENTLEYDTM_Public                      int bcdtmLoad_truncateRadialAtTinHullDtmObject (BC_DTM_OBJ *dtmP, double Sx, double Sy, double Ex, double Ey, double *Hx, double *Hy, double *Hz);
BENTLEYDTM_Private                     int bcdtmLoad_vertexSmoothContour (DPoint3d **conPtsPP, long *numConPtsP, long **weightPP);

///////// bcdtmLos/////////
BENTLEYDTM_Public                      int bcdtmLos_determineIfHorizonLineIsCovered (double Xe, double Ye, DTM_HORIZON_LINE *Hline1, DTM_HORIZON_LINE *Hline2); 
BENTLEYDTM_Public                      int bcdtmLos_determineVisibilityOfEdge (double Xe, double Ye, double Ze, double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double Z3, double X4, double Y4, double Z4, long *Visibility, DPoint3d Point[]); 
BENTLEYDTM_Public                      int bcdtmLos_findHorizonLineEntryListUsingHorizonLineIndex (DTM_HORIZON_LINE_INDEX *HlineIdx, long NumHlineIdx, long *Hidxlist, double Angle, long *HlineOfs); 
BENTLEYDTM_Public                      int bcdtmLos_horizonPointsAngleCompareFunction (const void *Cp1, const void *Cp2); 
BENTLEYDTM_Public                      int bcdtmLos_storePointInHorizonTable (DTM_HORIZON_LINE **Htable, long *Htne, long *Htme, double Ang1, double Ang2, double D1, double D2, double X1, double Y1, double Z1, double X2, double Y2, double Z2); 

///////// bcdtmMark/////////
BENTLEYDTM_Public                      int bcdtmMark_directionalTinLinesInternalToTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long sPnt, long *tinLinesP, long mark, long *numMarked);
BENTLEYDTM_Public                      int bcdtmMark_directionalVoidLinesExternalToTptrIslandPolygonDtmObject (BC_DTM_OBJ *dtmP, long sPnt, long *tinLinesP, long mark, long *numMarked);
BENTLEYDTM_Public                      int bcdtmMark_directionalVoidLinesInternalToTptrVoidPolygonDtmObject (BC_DTM_OBJ *dtmP, long sPnt, long *tinLinesP, long mark, long *numMarked);
BENTLEYDTM_Public                      int bcdtmMark_externalTptrPolygonPointsDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long mark, long *numMarkedP);
BENTLEYDTM_Public                      int bcdtmMark_internalPolygonPointsDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long mark, long *numMarkedP);
BENTLEYDTM_Public                      int bcdtmMark_internalTptrPolygonPointsDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long mark, long *numMarkedP);
BENTLEYDTM_Public                      int bcdtmMark_internalTptrPolygonPointsMinMaxDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long mark, long *numMarkedP, long *minPntP, long *maxPntP);
BENTLEYDTM_Public                      int bcdtmMark_pointsExternalToIslandDtmObject (BC_DTM_OBJ *dtmP, long islandFeature);
BENTLEYDTM_Public                      int bcdtmMark_pointsInternalToVoidDtmObject (BC_DTM_OBJ *dtmP, long voidFeature);
BENTLEYDTM_Public                      int bcdtmMark_prgnControlWordForFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long mark, long *numMarkedP);
BENTLEYDTM_Public                      int bcdtmMark_setLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, unsigned char *lineFlagP);
BENTLEYDTM_Public                      int bcdtmMark_setVoidPointsDtmObject (BC_DTM_OBJ *dtmP, long initOption, long startFeature, long *numVoidPtsP);
BENTLEYDTM_Public                      int bcdtmMark_testForDtmFeatureTypeLineEqualOrAboveStartFeatureDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long startFeature, long point1, long point2);
BENTLEYDTM_Public                      int bcdtmMark_testForPointOnDtmFeatureTypeEqualOrAboveStartFeatureDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long startFeature, long point);
BENTLEYDTM_Public                      int bcdtmMark_testLineDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, unsigned char *lineFlagP);
BENTLEYDTM_Public                      int bcdtmMark_voidPointsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmMark_voidPointsExternalToTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long *numMarkedP);
BENTLEYDTM_Private                     int bcdtmMark_voidPointsInternalToTptrVoidPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long *numMarkedP);
BENTLEYDTM_Public                      int bcdtmMark_internalStmTrianglePointsDtmObject(BC_DTM_OBJ *dtmP,long startPnt,long mark,long *numMarkedP)  ;
BENTLEYDTM_Public                      int bcdtmObject_findAndFixMissingStmTrianglesDtmObject(BC_DTM_OBJ *dtmP) ;

///////// bcdtmMath/////////
BENTLEYDTM_Public                      int bcdtmMath_allPointSideOfDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2, long p3); 
BENTLEYDTM_Public                      int bcdtmMath_allSideOf (double x1, double y1, double x2, double y2, double x3, double y3); 
BENTLEYDTM_Private                  double bcdtmMath_angleDifference (double angle1, double angle2); 
BENTLEYDTM_Public                      int bcdtmMath_calculateAreaAndDirectionHptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, double *areaP, DTMDirection *directionP); 
BENTLEYDTM_Public                      int bcdtmMath_calculateAreaAndDirectionSptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, double *areaP, DTMDirection *directionP);
BENTLEYDTM_Public                      int bcdtmMath_calculateAreaAndDirectionTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, double *areaP, DTMDirection *directionP);
BENTLEYDTM_Public                      int bcdtmMath_calculateDirectionAreaAndPerimeterHptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, DTMDirection *directionP, double *areaP, double *perimeterP);
BENTLEYDTM_Public                      int bcdtmMath_calculateDirectionAreaAndPerimeterTptrPolygonDtmObject (BC_DTM_OBJ *dtmP, long startPnt, DTMDirection *directionP, double *areaP, double *perimeterP);
BENTLEYDTM_Public                   double bcdtmMath_calculateIncludedAngle (double X1, double Y1, double X2, double Y2, double X3, double Y3); 
BENTLEYDTM_Public                   double bcdtmMath_calculateIncludedPointAngleDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, long pnt3);
BENTLEYDTM_EXPORT                      int bcdtmMath_calculateMachinePrecisionForDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmMath_calculateNormalVectorForTriangleVertexDtmObject (BC_DTM_OBJ *dtmP, long point, long vectorOption, DPoint3d *normalVectorP);
BENTLEYDTM_EXPORT                      int bcdtmMath_calculateNormalVectorsForTriangleVerticesDtmObject (BC_DTM_OBJ *dtmP, long vectorOption, DPoint3d **normalVectorsPP, long *numNormalVectorsP);
BENTLEYDTM_EXPORT                      int bcdtmMath_calculateNormalVectorToPlaneDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, long pnt3, DPoint3d *normalVectorP);
BENTLEYDTM_Public                      int bcdtmMath_calculatePartialDerivativesDtmObject (BC_DTM_OBJ *dtmP, double **partialDerivPP);
BENTLEYDTM_Public                      int bcdtmMath_calculatePlaneCoefficients (double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double Z3, double *A, double *B, double *C, double *D); 
BENTLEYDTM_Public                      int bcdtmMath_calculatePrecisionFromLarge (double Large, double *Tpptol, double *Tpltol, long *Nsd, long *Nid, long *Ndd); 
BENTLEYDTM_Public                   double bcdtmMath_calculateRadiusCircumscribedCircleCord (double x1, double y1, double x2, double y2, double x3, double y3); 
BENTLEYDTM_EXPORT                      int bcdtmMath_calculatesSlopeAtGivenAngleFromPointDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double Angle, double *elevationP, long *drapeFlagP, double *slopeP);
BENTLEYDTM_Public                   double bcdtmMath_calculateTriangleAreaToPerimeterRatio (double X1, double Y1, double X2, double Y2, double X3, double Y3); 
BENTLEYDTM_Public                      int bcdtmMath_checkIfLinesIntersect (double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4); 
BENTLEYDTM_EXPORT                      int bcdtmMath_convertCoordinatesDtmObject (BC_DTM_OBJ *dtmP, double ConversionFactor);
BENTLEYDTM_EXPORT                      int bcdtmMath_convertUnitsDtmObject (BC_DTM_OBJ *dtmP, double xyFactor, double zFactor);
BENTLEYDTM_Public                   double bcdtmMath_coordinateTriangleArea (double X1, double Y1, double X2, double Y2, double X3, double Y3); 
BENTLEYDTM_Public                      int bcdtmMath_deleteDuplicatePointsP3D (DPoint3d **Points, long *numPts, double Pptol); 
BENTLEYDTM_Public                      int bcdtmMath_deleteKnotP3D (DPoint3d *P2, DPoint3d *P3, DPoint3d *P4, double Xc, double Yc, double Zc, DPoint3d **Points, long *numPts, double Pptol); 
BENTLEYDTM_Public                      int bcdtmMath_deletePolygonKnotsP3D (DPoint3d **Polygon, long *numPts, long *IntFlag, double Pptol); 
BENTLEYDTM_Public                   double bcdtmMath_distance (double X1, double Y1, double X2, double Y2); 
BENTLEYDTM_EXPORT                   double bcdtmMath_distance3D (double X1, double Y1, double Z1, double X2, double Y2, double Z2); 
BENTLEYDTM_EXPORT                   double bcdtmMath_distanceOfPointFromLine (long *LineFlag, double X1, double Y1, double X2, double Y2, double X3, double Y3, double *X4, double *Y4); 
BENTLEYDTM_Public                   double bcdtmMath_distanceSquared (double X1, double Y1, double X2, double Y2); 
BENTLEYDTM_EXPORT                      int bcdtmMath_freeArcPoints (DPoint3d **Points); 
BENTLEYDTM_EXPORT                   double bcdtmMath_getAngle (double x1, double y1, double x2, double y2); 
BENTLEYDTM_Public                      int bcdtmMath_getBoundingCubeForPointArray (DPoint3d *ptsP, long numPts, double *xMinP, double *xMaxP, double *yMinP, double *yMaxP, double *zMinP, double *zMaxP); 
BENTLEYDTM_Public                      int bcdtmMath_getLatticeAttributes (DPoint3d LatPts[], double *Sd, double *Sp, double *Bd, double *Ht); 
BENTLEYDTM_EXPORT                   double bcdtmMath_getPointAngleDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                      int bcdtmMath_getPointArrayExtents (DPoint3d *pointsP, long numPoints, double *xMinP, double *yMinP, double *zMinP, double *xMaxP, double *yMaxP, double *zMaxP);
BENTLEYDTM_Public                      int bcdtmMath_getPointOffsetPolygonDirectionAndAreaDtmObject (BC_DTM_OBJ *dtmP, long *polyPtsP, long numPts, DTMDirection *directionP, double *areaP);
BENTLEYDTM_Public                      int bcdtmMath_getPolygonDirectionP3D (DPoint3d *Polygon, long numPts, DTMDirection* direction, double *Area); 
BENTLEYDTM_Public                      int bcdtmMath_getStringMaxMinP3D (long SetFlag, DPoint3d *StringPts, long NumStringPts, double *Xmin, double *Xmax, double *Ymin, double *Ymax, double *Zmin, double *Zmax); 
BENTLEYDTM_EXPORT                      int bcdtmMath_getTriangleAttributes (DPoint3d TrgPts[], double *SlopeDegrees, double *SlopePercent, double *Aspect, double *Height); 
BENTLEYDTM_Public                      int bcdtmMath_getTriangleAttributesDtmObject (BC_DTM_OBJ *dtmP, long trgPnt1, long trgPnt2, long trgPnt3, double *slopeDegreesP, double *slopePercentP, double *aspectP, double *heightP);
BENTLEYDTM_Public                      int bcdtmMath_getTriangleAttributesJay (DPoint3d TrgPts[], double *SlopeDegrees, double *SlopePercent, double *Aspect, double *Height); 
BENTLEYDTM_Private                     int bcdtmMath_interpolateLinear (bool newTriangle, double x, double y, double *z, double xt[3], double yt[3], double zt[3]); 
BENTLEYDTM_EXPORT                      int bcdtmMath_interpolatePointOnLine (double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double *Z3); 
BENTLEYDTM_EXPORT                      int bcdtmMath_interpolatePointOnLineDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double *z, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmMath_interpolatePointOnPlane (double x, double y, double *z, double Ca, double Cb, double Cc, double Cd); 
BENTLEYDTM_Public                      int bcdtmMath_interpolatePointOnPolynomial (bool newTriangle, double xp, double yp, double *zp, double x[], double y[], double z[], double pd[]);
BENTLEYDTM_Public                      int bcdtmMath_interpolatePointOnTriangle (double x, double y, double *ZP, double trgX[], double trgY[], double trgZ[]); 
BENTLEYDTM_Public                      int bcdtmMath_interpolatePointOnTriangleDtmObject (BC_DTM_OBJ *dtmP, double x, double y, double *ZP, long P1, long P2, long P3); 
BENTLEYDTM_Public                      int bcdtmMath_interpolatePointOnTrianglePlane (bool newTriangle, double x, double y, double *z, double xt[3], double yt[3], double zt[3]);
BENTLEYDTM_Public                      int bcdtmMath_interpolatePoly (bool NewTrg, double xp, double yp, double *zp, double x[], double y[], double z[], double pd[]); 
BENTLEYDTM_Public                      int bcdtmMath_intersectCordLines (double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, double *xc, double *yc); 
BENTLEYDTM_Public                      int bcdtmMath_linePointSideOfDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2, double x, double y); 
BENTLEYDTM_Public                   double bcdtmMath_normalDistanceToCordLine (double X1, double Y1, double X2, double Y2, double x, double y); 
BENTLEYDTM_Public                   double bcdtmMath_normalDistanceToLineDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, double x, double y); 
BENTLEYDTM_Public                      int bcdtmMath_normalIntersectCordLines (double X1, double Y1, double X2, double Y2, double X3, double Y3, double X4, double Y4, double *Xi, double *Yi); 
BENTLEYDTM_EXPORT                   double bcdtmMath_normaliseAngle (double Angle); 
BENTLEYDTM_EXPORT                      int bcdtmMath_normaliseCoordinatesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                   double bcdtmMath_pointDistance3DDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2);
BENTLEYDTM_Public                   double bcdtmMath_pointDistanceDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                   double bcdtmMath_pointDistanceSquaredDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_Public                      int bcdtmMath_pointInsideTriangleDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double Xp, double Yp); 
BENTLEYDTM_Public                      int bcdtmMath_pointInTriangleDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double Xp, double Yp); 
BENTLEYDTM_Public                      int bcdtmMath_pointSideOfDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2, long p3); 
BENTLEYDTM_Public                   double bcdtmMath_returnSideOf (double x1, double y1, double x2, double y2, double x3, double y3); 
BENTLEYDTM_Public                      int bcdtmMath_reversePointOffsetPolygonDirection (long *polyPtsP, long numPts);
BENTLEYDTM_Public                      int bcdtmMath_reversePolygonDirectionP3D (DPoint3d *Polygon, long numPts); 
BENTLEYDTM_EXPORT                      int bcdtmMath_rotateCoordinatesDtmObject (BC_DTM_OBJ *dtmP, double Xorg, double Yorg, double Angle);
BENTLEYDTM_Public                   double bcdtmMath_roundToDecimalPoints (double Value, long Ndd); 
BENTLEYDTM_Public                   double bcdtmMath_roundToTolerance (double Value, double Tolerance); 
BENTLEYDTM_EXPORT                      int bcdtmMath_setBoundingCubeDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_EXPORT                      int bcdtmMath_sideOf (double x1, double y1, double x2, double y2, double x3, double y3); 
BENTLEYDTM_EXPORT                      int bcdtmMath_strokeArc (double Sx, double Sy, double Ex, double Ey, double Cx, double Cy, double A1, double A2, double Ap, double As, double Ra, double Tolerance, DPoint3d **ArcPts, long *NumArcPts); 
BENTLEYDTM_Private                     int bcdtmMath_testForColinearPoints2d (double x1, double y1, double x2, double y2, double x3, double y3); 
BENTLEYDTM_EXPORT                      int bcdtmMath_transformDtmObject (BC_DTM_OBJ *dtmP, double  transformMatrix[3][4]);
BENTLEYDTM_EXPORT                      int bcdtmMath_transformViaCallbackDtmObject (BC_DTM_OBJ *dtmP, DTMTransformPointsCallback loadFunctionP, void* userP);
BENTLEYDTM_EXPORT                      int bcdtmMath_translateCoordinatesDtmObject (BC_DTM_OBJ *dtmP, double Xinc, double Yinc, double Zinc);
BENTLEYDTM_Public                      int bcdtmMath_validatePointArrayPolygon (DPoint3d **Polygon, long *NumPolyPoints, double Pptol); 
BENTLEYDTM_Public                      int bcdtmMath_validateStringP3D (DPoint3d *StringPts, long *NumStringPts, double Tolerance); 
BENTLEYDTM_Public                      int bcdtmMath_getTriangleDescentAndAscentAnglesDtmObject(BC_DTM_OBJ *dtmP,long P1,long P2,long P3,double *descentAngleP,double *ascentAngleP,double *trgSlopeP) ;
BENTLEYDTM_Public                   double bcdtmMath_calculateRadiusOfCircumscribedCircleDtmObject(BC_DTM_OBJ *dtmP,long P1,long P2,long P3) ;

///////// bcdtmMedianTile/////////
BENTLEYDTM_Public                      int bcdtmMedianTile_getXYZCoordinateRangesDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, double *xRangeP, double *yRangeP, double *zRangeP);
BENTLEYDTM_EXPORT                      int bcdtmMedianTile_pointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long minTilePoints, DTM_POINT_TILE **pointTilesPP, long *numPointTilesP);
BENTLEYDTM_Public                      int bcdtmMedianTile_pointsInDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, long minTilePoints, DTM_POINT_TILE **pointTilesPP, long *numPointTilesP);
BENTLEYDTM_Private                     int bcdtmMedianTile_sortAndTilePointsDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, long minTilePoints, DTM_POINT_TILE *pointTilesPP, long *numPointTilesP, long *lastStartPointP, long memPointTiles);
BENTLEYDTM_Private                     int bcdtmMedianTile_sortAndTileTaggedPointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long minTilePoints, DTM_POINT_TILE *pointTilesPP, long *numPointTilesP, long *lastStartPointP, long memPointTiles);
BENTLEYDTM_Public                      int bcdtmMedianTile_taggedPointsInDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long numTilePoints, DTM_POINT_TILE **pointTilesPP, long *numPointTilesP);

///////// bcdtmMem/////////
BENTLEYDTM_Public                      int bcdtmMem_allocatePointerArrayToPointArrayMemory (DTM_POINT_ARRAY ***pointArraysPPP, long numPointArrays, long *memPointArraysP, long memPointArraysInc); 
BENTLEYDTM_EXPORT                      int bcdtmMem_freePointerArrayToPointArrayMemory (DTM_POINT_ARRAY ***pointArraysPPP, long numPointArrays); 
BENTLEYDTM_Public                      int bcdtmMem_storePointsInExistingPointerArrayToPointArray (DTM_POINT_ARRAY **pointArrayPP, long numPointArrays, DPoint3d *ptsP, long numPts);
BENTLEYDTM_Public                      int bcdtmMem_storePointsInPointerArray (DTM_POINT_ARRAY **pointArrayPP, long numPointArray, DPoint3d **ptsPP, long numPts);
BENTLEYDTM_Public                      int bcdtmMem_storePointsInPointerArrayToPointArray (DTM_POINT_ARRAY ***pointArrayPPP, DPoint3d **ptsPP, long numPts); 

///////// bcdtmMemory/////////
BENTLEYDTM_EXPORT                DTMMemPnt bcdtmMemory_allocate (BC_DTM_OBJ *dtmP, size_t size);
BENTLEYDTM_EXPORT                    void* bcdtmMemory_allocatePartition (BC_DTM_OBJ *dtmP, DTMPartition type, int partitionNumber, size_t size);
BENTLEYDTM_EXPORT                     void bcdtmMemory_free (BC_DTM_OBJ *dtmP, DTMMemPnt partitionNumber);
BENTLEYDTM_EXPORT                    void  bcdtmMemory_freePartition (BC_DTM_OBJ *dtmP, DTMPartition type, int partitionNumber, void* pointer);
BENTLEYDTM_EXPORT                  IDTMElementMemoryAllocator* bcdtmMemory_getAllocator (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                    void* bcdtmMemory_getPointer (BC_DTM_OBJ *dtmP, DTMMemPnt partitionNumber); 
BENTLEYDTM_EXPORT                DTMMemPnt bcdtmMemory_reallocate (BC_DTM_OBJ *dtmP, DTMMemPnt partitionNumber, size_t size);
BENTLEYDTM_EXPORT                    void* bcdtmMemory_reallocatePartition (BC_DTM_OBJ *dtmP, DTMPartition type, int partitionNumber, void* pointer, size_t size);
BENTLEYDTM_EXPORT                     void bcdtmMemory_release (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmMemory_setMemoryAccess (BC_DTM_OBJ *dtmP, DTMAccessMode accessMode);

///////// bcdtmMerge/////////
BENTLEYDTM_Public                      int bcdtmMerge_checkAndFixPrecisionForTrianglesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmMerge_checkHoleInternalToDtmHull (DPoint3d *hullPtsP, long numHullPts, DPoint3d *holePtsP, long numHolePts, long *holeInternalFlag); 
BENTLEYDTM_Public                      int bcdtmMerge_checkPointCanBeMergedDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2, long *mergeFlagP); 
BENTLEYDTM_EXPORT                      int bcdtmMerge_checkTinsIntersectDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, long *internalFlagP); 
BENTLEYDTM_Public                      int bcdtmMerge_connectedPointsDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Private                     int bcdtmMerge_copyDtmFeaturesToDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P); 
BENTLEYDTM_Public                      int bcdtmMerge_copyFeatureListFromPointToPointDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2); 
BENTLEYDTM_Public                      int bcdtmMerge_detectAndInsertImpliedVoidsDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P); 
BENTLEYDTM_EXPORT                      int bcdtmMerge_dtmFiles (WCharCP dtmFile1P, WCharCP dtmFile2P, WCharCP dtmFile3P); 
BENTLEYDTM_Public                      int bcdtmMerge_extractAndInsertHoleDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DPoint3d *holePtsP, long numHolePts); 
BENTLEYDTM_Public                      int bcdtmMerge_fixFeatureListForLastPointDtmObject (BC_DTM_OBJ *dtmP, long pnt1, long pnt2); 
BENTLEYDTM_Private                     int bcdtmMerge_insertHolesIntoDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, long internalFlag); 
BENTLEYDTM_Public                      int bcdtmMerge_insertImpliedVoidDtmObject (BC_DTM_OBJ *dtmP, long point, long numPoints); 
BENTLEYDTM_Public                      int bcdtmMerge_insertMergeDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, long mergeFlag, long firstPnt); 
BENTLEYDTM_Private                     int bcdtmMerge_internallyClipDtmObject (BC_DTM_OBJ *dtmP, long internalFlag, DPoint3d *clipPtsP, long numClipPts, long *firstPntP); 
BENTLEYDTM_Private                     int bcdtmMerge_mergeClosePointsOnInsertBoundaryDtmObject (BC_DTM_OBJ *dtmP, long internalFlag, long startPnt, DPoint3d *hullPtsP, long numHullPts); 
BENTLEYDTM_Private                     int bcdtmMerge_removeTrianglesOnInsertHullDtmObject (BC_DTM_OBJ *dtmP, long startPnt); 
BENTLEYDTM_Public                      int bcdtmMerge_writeTinLinesDtmObject (BC_DTM_OBJ *dtmP, WCharCP dataFilePP); 
BENTLEYDTM_Public                      int bcdtmMerge_dtmObjects(BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, long internalFlag, bool failOnNonIntersecting = false) ;

///////// bcdtmObject/////////
BENTLEYDTM_Public                      int bcdtmObject_allocateCircularListMemoryDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmObject_allocateFeatureListMemoryDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmObject_allocateFeaturesMemoryDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmObject_allocateLatticeMemoryLatticeObject (DTM_LAT_OBJ *Lattice, long Nxl, long Nyl, float NullVal); 
BENTLEYDTM_Public                      int bcdtmObject_allocateNodesMemoryDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_allocatePointsMemoryDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_appendDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P);
BENTLEYDTM_EXPORT                      int bcdtmObject_appendWithUsertagDtmObject (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DTMUserTag userTag);
BENTLEYDTM_EXPORT                      int bcdtmObject_assignFeatureIdsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmObject_changeStateDtmFeaturesToOffsetsArrayDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmObject_changeStateDtmObject (BC_DTM_OBJ *dtmP, DTMState toState);
BENTLEYDTM_Private                    void bcdtmObject_checkLastModifiedDate (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmObject_clearCleanUpDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmObject_cloneDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **dtmPP); 
BENTLEYDTM_Public                      int bcdtmObject_copyLatticeObjectToLatticeObject (DTM_LAT_OBJ *Lattice1, DTM_LAT_OBJ *Lattice2); 
BENTLEYDTM_EXPORT                      int bcdtmObject_copyToMemoryBlockDtmObject (BC_DTM_OBJ *dtmP, char **memoryBlockPP, unsigned long *memoryBlockSizeP);
BENTLEYDTM_Private                     int bcdtmObject_countDtmTriangulationFeaturesDtmObject (BC_DTM_OBJ *dtmP, long *numGraphicBreaksP, long *numContourLinesP, long *numSoftBreaksP, long *numHardBreaksP, long *numVoidsP, long *numIslandsP, long *numHolesP, long *numBreakVoidsP, long *numDrapeVoidsP, long *numGroupSpotsP, long *numPolygonsP, long *numHullsP, long *numDrapeHullsP, long *numHullLinesP); 
BENTLEYDTM_Public                      int bcdtmObject_countNumberOfDtmFeatureTypeOccurrencesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long *numOccurencesP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_createDtmElementFromDtmObject (BC_DTM_OBJ *dtmP, void* memoryAllocator, void * (*managedFunctionP) (), void *userP);
BENTLEYDTM_EXPORT                      int bcdtmObject_createDTMExtended (BC_DTM_OBJ_EXTENDED ** dtmObjectExtendedPP);
BENTLEYDTM_EXPORT                      int bcdtmObject_createDtmObject (BC_DTM_OBJ **dtmPP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_createDtmObjectForDtmElement (BC_DTM_OBJ **dtmPP, BC_DTM_OBJ *dtmHeaderP);
BENTLEYDTM_EXPORT                      int bcdtmObject_createFromMemoryBlockDtmObject (BC_DTM_OBJ **dtmPP, char *memoryBlockP, unsigned long memoryBlockSize);
BENTLEYDTM_EXPORT                      int bcdtmObject_createLatticeObject (DTM_LAT_OBJ **Lattice); 
BENTLEYDTM_Public                      int bcdtmObject_createTinDtmObject (BC_DTM_OBJ *dtmP, long edgeOption, double maxSide, bool normaliseOption = true, bool duplicateOption = true); 
BENTLEYDTM_Public                      int bcdtmObject_createTinDtmObjectOverload (BC_DTM_OBJ *dtmP, long edgeOption, double maxSide, bool normaliseOption, bool mergeOption);
BENTLEYDTM_EXPORT                      int bcdtmObject_decReferenceCountDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmObject_deleteAllLatticeObjects (void); 
BENTLEYDTM_EXPORT                      int bcdtmObject_deleteLatticeObject (DTM_LAT_OBJ **Lattice); 
BENTLEYDTM_EXPORT                      int bcdtmObject_destoryDTMExtended (BC_DTM_OBJ_EXTENDED ** dtmObjectExtendedPP);
BENTLEYDTM_EXPORT                      int bcdtmObject_destroyAllDtmObjects (void); 
BENTLEYDTM_EXPORT                      int bcdtmObject_destroyDtmObject (BC_DTM_OBJ **dtmPP); 
BENTLEYDTM_Public                      int bcdtmObject_divConqMergeSortDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long numPts, long *sortP, long *tempP); 
BENTLEYDTM_Private                     int bcdtmObject_featureIdCompareFunction (const DTMFeatureId *id1P, const DTMFeatureId *id2P);
BENTLEYDTM_Public                      int bcdtmObject_freeMemoryLatticeObject (DTM_LAT_OBJ *Lattice); 
BENTLEYDTM_EXPORT                      int bcdtmObject_getApiCleanUpDtmObject (BC_DTM_OBJ *dtmP, DTMCleanupFlags* type);
BENTLEYDTM_EXPORT                      int bcdtmObject_getPointByIndexDtmObject (BC_DTM_OBJ *dtmP, long index, DPoint3d* pt);
BENTLEYDTM_Public                      int bcdtmObject_getPointOffsetsForDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long **featPtsPP, long *numFeatPtsP);
BENTLEYDTM_Public                      int bcdtmObject_getPointsForDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, DPoint3d **featPtsPP, long *numFeatPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_getReferenceCountDtmObject (BC_DTM_OBJ *dtmP, long *countP);
BENTLEYDTM_EXPORT                      int bcdtmObject_getTriangulationParametersDtmObject (BC_DTM_OBJ *dtmP, double* ppTol, double* plTol, long* edgeOption, double* maxSide);
BENTLEYDTM_EXPORT                      int bcdtmObject_incReferenceCountDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmObject_incrementTinMemoryDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_initialiseDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmObject_initialiseLatticeObject (DTM_LAT_OBJ *Lattice); 
BENTLEYDTM_Private                     int bcdtmObject_markTinFeaturesThatAreRollBackFeaturesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmObject_markTinFeaturesThatAreRollBackFeaturesPreMergeDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *rollBackDtmP);
BENTLEYDTM_Public                      int bcdtmObject_moveOrCopyPointsArray (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *tempDtmP);
BENTLEYDTM_Private                     int bcdtmObject_multiThreadSortDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmObject_overrideTriangulateDtmObject (int (*overrideP) (BC_DTM_OBJ *dtmP));
BENTLEYDTM_EXPORT                      int bcdtmObject_placeVoidsAroundNullValuesDtmObject (BC_DTM_OBJ *dtmP, double nullValue);
BENTLEYDTM_Public                      int bcdtmObject_processForTriangulationDtmObject (BC_DTM_OBJ *dtmP, bool normaliseOption = true, bool duplicateOption = true); 
BENTLEYDTM_Public                      int bcdtmObject_processForTriangulationDtmObjectOverload (BC_DTM_OBJ *dtmP, bool normaliseOption, bool duplicateOption);
BENTLEYDTM_Private                     int bcdtmObject_removeDuplicatePointOffsetsDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmObject_removeDuplicatesDtmObject (BC_DTM_OBJ *dtmP, long *numDuplicatesP, bool duplicateOption = false); 
BENTLEYDTM_Public                      int bcdtmObject_removeDuplicatesDtmObjectOverload (BC_DTM_OBJ *dtmP, long *numDuplicatesP, bool duplicateOption);
BENTLEYDTM_EXPORT                      int bcdtmObject_reportActiveDtmObjects (long reportOption, long *numActiveObjectsP, unsigned long *totMemoryUsageP);
BENTLEYDTM_EXPORT                      int bcdtmObject_reportEntityUsageAllDtmObjects (unsigned long *numFeaturesP, unsigned long *memFeaturesP, unsigned long *numPointsP, unsigned long *memPointsP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_reportEntityUsageDtmObject (BC_DTM_OBJ *dtmP, unsigned long *numFeaturesP, unsigned long *memFeaturesP, unsigned long *numPointsP, unsigned long *memPointsP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_reportMemoryUsageAllDtmObjects (unsigned long *headMemAmountP, unsigned long *featureMemAmountP, unsigned long *featPtsMemAmountP, unsigned long *pointMemAmountP, unsigned long *nodeMemAmountP, unsigned long *clistMemAmountP, unsigned long *flistMemAmountP, unsigned long *totalMemAmountP);
BENTLEYDTM_EXPORT                      int bcdtmObject_reportMemoryUsageDtmObject (BC_DTM_OBJ *dtmP, unsigned long *headMemAmountP, unsigned long *featureMemAmountP, unsigned long *featPtsMemAmountP, unsigned long *pointMemAmountP, unsigned long *nodeMemAmountP, unsigned long *clistMemAmountP, unsigned long *flistMemAmountP, unsigned long *totalMemAmountP);
BENTLEYDTM_EXPORT                      int bcdtmObject_reportStatisticsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmObject_resizeMemoryDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_rollBackDtmObject (BC_DTM_OBJ *dtmP, long rollBackOption);
BENTLEYDTM_EXPORT                      int bcdtmObject_setApiCleanUpDtmObject (BC_DTM_OBJ *dtmP, DTMCleanupFlags type);
BENTLEYDTM_EXPORT                      int bcdtmObject_setFeatureMemoryAllocationParametersDtmObject (BC_DTM_OBJ *dtmP, long iniFeatures, long incFeatures); 
BENTLEYDTM_EXPORT                      int bcdtmObject_setPointMemoryAllocationParametersDtmObject (BC_DTM_OBJ *dtmP, long iniPoints, long incPoints); 
BENTLEYDTM_EXPORT                      int bcdtmObject_setPointTolerancesDtmObject (BC_DTM_OBJ *dtmP, double p2pTolerance, double p2lTolerance);
BENTLEYDTM_EXPORT                      int bcdtmObject_setReferenceCountDtmObject (BC_DTM_OBJ *dtmP, long count);
BENTLEYDTM_EXPORT                      int bcdtmObject_setToDTMElement (BC_DTM_OBJ *dtmP, void* allocator);
BENTLEYDTM_EXPORT                      int bcdtmObject_setTriangulationParametersDtmObject (BC_DTM_OBJ *dtmP, double ppTol, double plTol, long edgeOption, double maxSide);
BENTLEYDTM_Private                     int bcdtmObject_singleThreadSortDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmObject_slopeModifyDemTriangulationDtmObject (BC_DTM_OBJ *dtmP, long slopeModifyOption);
BENTLEYDTM_EXPORT                      int bcdtmObject_sortDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_EXPORT                      int bcdtmObject_storeDtmFeatureInDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTMUserTag userTag, long indexOption, DTMFeatureId *userFeatureIdP, DPoint3dCP featurePtsP, long numFeaturePts); 
BENTLEYDTM_EXPORT                      int bcdtmObject_testApiCleanUpDtmObject (BC_DTM_OBJ *dtmP, DTMCleanupFlags cleanupOption);
BENTLEYDTM_EXPORT                      int bcdtmObject_testForInMemoryDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmObject_testForValidDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmObject_testForValidLatticeObject (DTM_LAT_OBJ *Lattice); 
BENTLEYDTM_EXPORT                      int bcdtmObject_triangulateDemDtmObject (BC_DTM_OBJ *dtmP, long numRows, long numColumns, double nullValue);
BENTLEYDTM_EXPORT                      int bcdtmObject_triangulateDtmObject (BC_DTM_OBJ *dtmP, bool normaliseOption = true, bool duplicateOption = true);
BENTLEYDTM_Private                     int bcdtmObject_triangulateGridDtmObject (BC_DTM_OBJ *dtmP, long numRows, long numColumns, double nullValue);
BENTLEYDTM_EXPORT                      int bcdtmObject_triangulateLatticeObject (DTM_LAT_OBJ *latticeP, BC_DTM_OBJ **dtmPP);
BENTLEYDTM_EXPORT                      int bcdtmObject_updateDtmObjectForDtmElement (BC_DTM_OBJ *dtmP,  void *headerP, void *featureArraysP, void *pointArraysP, void *nodeArraysP, void *fListArraysP, void *cListArraysP);
BENTLEYDTM_Public                     void bcdtmObject_updateLastModifiedTime (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmObject_triangulateStmTrianglesDtmObject(BC_DTM_OBJ *dtmP) ;
BENTLEYDTM_Private                     int bcdtmObject_fixStmHullKnotPointDtmObject(BC_DTM_OBJ *dtmP,long hullPoint,long nextHullPoint) ;
BENTLEYDTM_Private                     int bcdtmObject_logProblemStmTrianglesDtmObject(BC_DTM_OBJ *dtmP,BC_DTM_OBJ *tempDtmP) ;
BENTLEYDTM_Private                     int bcdtmObject_checkAndFixTopologyStmTrianglesDtmObject(BC_DTM_OBJ *dtmP,BC_DTM_OBJ *trgDtmP) ;

///////// bcdtmPatch/////////
BENTLEYDTM_Public                      int bcdtmPatch_loadBackSurfaceToPlaneIsoCells (DTM_LAT_OBJ *latticeP, double elevation, DTMFeatureCallback loadFunctionP); 
BENTLEYDTM_Public                      int bcdtmPatch_loadBackSurfaceToPlaneIsoLines (DTM_LAT_OBJ *latticeP, double elevation, DTMFeatureCallback loadFunctionP); 
BENTLEYDTM_Public                      int bcdtmPatch_loadBackSurfaceToSurfaceIsoCells (DTM_LAT_OBJ *latticeP, DTM_LAT_OBJ *isoLatticeP, DTMFeatureCallback loadFunctionP); 
BENTLEYDTM_Public                      int bcdtmPatch_loadBackSurfaceToSurfaceIsoLines (DTM_LAT_OBJ *latticeP, DTM_LAT_OBJ *isoLatticeP, DTMFeatureCallback loadFunctionP); 
BENTLEYDTM_Public                      int bcdtmPatch_moveZElevationLatticeObject (DTM_LAT_OBJ *latticeP, double moveValue, long moveOption); 
BENTLEYDTM_EXPORT                      int bcdtmPatch_surfaceToPlaneIsoPatchDtmFile (WCharCP dtmFileP, WCharCP patchFileP, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, double elevation, long loadOption, long patchOption, long numLatPts, double xinc, double yinc, double xreg, double yreg); 
BENTLEYDTM_EXPORT                      int bcdtmPatch_surfaceToPlaneIsoPatchDtmObject (BC_DTM_OBJ *dtmP, DTM_LAT_OBJ **latticePP, DPoint3d *polyPtsP, long numPolyPts, DTMFeatureCallback loadFunctionP, double elevation, long loadOption, long patchOption, long numLatticePts, double xinc, double yinc, double xreg, double yreg); 
BENTLEYDTM_EXPORT                      int bcdtmPatch_surfaceToSurfaceIsoPatchDtmFiles (WCharCP dtmFile1P, WCharCP dtmFile2P, WCharCP patchFileP, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, long loadOption, long patchOption, long numLatPts, double xinc, double yinc, double xreg, double yreg); 
BENTLEYDTM_EXPORT                      int bcdtmPatch_surfaceToSurfaceIsoPatchDtmObjects (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DTM_LAT_OBJ **latticePP, DTM_LAT_OBJ **fromLatticePP, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, long loadOption, long patchOption, long numlatPts, double xinc, double yinc, double xreg, double yreg); 

///////// bcdtmPolyContour/////////
BENTLEYDTM_EXPORT                      int bcdtmPolyContour_plotContoursFromDtmObject (BC_DTM_OBJ *dtmP, long plotRangeContours, long plotSingleContours, double contourInterval, double contourRegistration, double contourMinimum, double contourMaximum, double contourValue[], long numContourValues, DPoint3d *fencePtsP, long numFencePts, DTMFeatureCallback loadFunctionP, void *userP);

///////// bcdtmPolygon/////////
BENTLEYDTM_Public                      int bcdtmPolygon_allocateMemoryPolygonObject (DTM_POLYGON_OBJ *Poly); 
BENTLEYDTM_Public                      int bcdtmPolygon_allocateMemoryTagObject (TAGOBJ *Tag); 
BENTLEYDTM_Public                      int bcdtmPolygon_copyPolygonObjectPolygonToPointArrayPolygon (DTM_POLYGON_OBJ *Poly, long Ofs, DPoint3d **PolyPts, long *NumPolyPts); 
BENTLEYDTM_Public                      int bcdtmPolygon_copyPolygonObjectToPolygonObject (DTM_POLYGON_OBJ *Poly1, DTM_POLYGON_OBJ *Poly2); 
BENTLEYDTM_Public                      int bcdtmPolygon_countNumberOfNonDtmPolygonFeaturesForPointDtmObject (BC_DTM_OBJ *dtmP, long point, long *numFeaturesP);
BENTLEYDTM_Public                      int bcdtmPolygon_createPolygonObject (DTM_POLYGON_OBJ **polyObjP); 
BENTLEYDTM_Public                      int bcdtmPolygon_createTagObject (TAGOBJ **Tag); 
BENTLEYDTM_Public                      int bcdtmPolygon_deleteAllPolygonObjects (void); 
BENTLEYDTM_Public                      int bcdtmPolygon_deletePolygonObject (DTM_POLYGON_OBJ **Poly); 
BENTLEYDTM_Public                      int bcdtmPolygon_deleteTagObject (TAGOBJ **Tag); 
BENTLEYDTM_Public                      int bcdtmPolygon_extractPolygonsDtmObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ **polygonPP, TAGOBJ **tagPP); 
BENTLEYDTM_Public                      int bcdtmPolygon_freeMemoryPolygonObject (DTM_POLYGON_OBJ *Poly); 
BENTLEYDTM_Public                      int bcdtmPolygon_freeMemoryTagObject (TAGOBJ *Tag); 
BENTLEYDTM_Public                      int bcdtmPolygon_getIntersectPolygonsDtmObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ *polyP); 
BENTLEYDTM_Private                     int bcdtmPolygon_getNextPointForUserTagDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag UTAG, long point, long *nextPoint); 
BENTLEYDTM_Public                      int bcdtmPolygon_getTagListFromTagObject (TAGOBJ *Tag, long TagOfs, long **TagList, long *NumTagValues, long *Utag1, long *Utag2, long *Utag3, long *Utag4); 
BENTLEYDTM_Public                      int bcdtmPolygon_incrementMemoryPolygonObject (DTM_POLYGON_OBJ *Poly); 
BENTLEYDTM_Public                      int bcdtmPolygon_incrementMemoryTagObject (TAGOBJ *Tag); 
BENTLEYDTM_Public                      int bcdtmPolygon_intersectPointArrayPolygons (DPoint3d *poly1PtsP, long numPoly1Pts, DPoint3d *poly2PtsP, long numPoly2Pts, long *intersectResult, DTM_POLYGON_OBJ **polyPP, double ppTol, double p2lTol); 
BENTLEYDTM_Public                      int bcdtmPolygon_intersectPointArrayPolygonWithPolgyonObject (DPoint3d *Poly, long NumPolyPts, DTM_POLYGON_OBJ *Poly1, double Pptol, double Pltol, long *IntersectFlag, DTM_POLYGON_OBJ **Poly2); 
BENTLEYDTM_Public                      int bcdtmPolygon_intersectPolygonAndTinHullDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *userPolyPtsP, long numUserPolyPts, DTM_POLYGON_OBJ **polyPP, long *intersectFlagP);
BENTLEYDTM_Public                      int bcdtmPolygon_intersectPolygonAndTinHullsDtmObjects (BC_DTM_OBJ *dtm1P, BC_DTM_OBJ *dtm2P, DPoint3d *userPolyPtsP, long numUserPolyPts, DTM_POLYGON_OBJ **polyPP, long *intersectFlagP);
BENTLEYDTM_Public                      int bcdtmPolygon_intersectPolygonObjectPolygons (DTM_POLYGON_OBJ *Poly, DTM_POLYGON_OBJ **IntPoly, TAGOBJ **IntTag); 
BENTLEYDTM_Public                      int bcdtmPolygon_intersectPolygons (DPoint3d *poly1PtsP, long numPoly1Pts, DPoint3d *poly2PtsP, long numPoly2Pts, long *intersectResult, DTM_POLYGON_OBJ **polyPP, double ppTol, double plTol); 
BENTLEYDTM_Private                     int bcdtmPolygon_intersectPolygonWithPolgyonObject (DPoint3d *polyPtsP, long numPolyPts, DTM_POLYGON_OBJ *poly1P, double ppTol, double plistPTol, long *intersectResultP, DTM_POLYGON_OBJ **poly2PP); 
BENTLEYDTM_Public                      int bcdtmPolygon_storeDtmObjectTptrPolygonInPolygonObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ *polyP, long startPnt, long userTag);
BENTLEYDTM_Public                      int bcdtmPolygon_storePointArrayPolygonInPolygonObject (DTM_POLYGON_OBJ *Poly, DPoint3d *Poly3D, long NumPolyPts, long UserTag); 
BENTLEYDTM_Public                      int bcdtmPolygon_storePolygonTag (long **TagList, long TagFlag, long TagValue, long *Tagne, long *Tagme, long Tagminc); 
BENTLEYDTM_Public                      int bcdtmPolygon_storeTagListInTagObject (TAGOBJ *Tag, long *TagList, long NumTagValues, long Utag1, long Utag2, long Utag3, long Utag4); 
BENTLEYDTM_Public                      int bcdtmPolygon_storeTptrPolygonInPolygonObjectDtmObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ *polyP, long startPnt, long userTag);
BENTLEYDTM_Public                      int bcdtmPolygon_testForValidPolygonObject (DTM_POLYGON_OBJ *Poly); 
BENTLEYDTM_Public                      int bcdtmPolygon_testForValidTagObject (TAGOBJ *Tag); 

///////// bcdtmQuadTreeTile/////////
BENTLEYDTM_Private                     int bcdtmQuadTreeTile_createQuadTreeChildNodes (long tileNumber, DTM_QUAD_TREE_TILE **quadTreeTilesPP, long *numQuadTreeTilesP, long  memQuadTreeTiles);
BENTLEYDTM_EXPORT                      int bcdtmQuadTreeTile_pointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long minTilePoints, DTM_QUAD_TREE_TILE **pointTilesPP, long *numPointTilesP);
BENTLEYDTM_Public                      int bcdtmQuadTreeTile_pointsInDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, long minTilePoints, DTM_QUAD_TREE_TILE **pointTilesPP, long *numPointTilesP);
BENTLEYDTM_Private                     int bcdtmQuadTreeTile_sortAndTilePointsDtmObject (BC_DTM_OBJ *dtmP, DTM_QUAD_TREE_TILE *quadTreeTileP, long minTilePoints, DTM_QUAD_TREE_TILE **quadTreeTilesPP, long *numQuadTreeTilesP, long memQuadTreeTiles);
BENTLEYDTM_Private                     int bcdtmQuadTreeTile_sortAndTileTaggedPointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, DTM_QUAD_TREE_TILE *quadTreeTileP, long minTilePoints, DTM_QUAD_TREE_TILE **quadTreeTilesPP, long *numQuadTreeTilesP, long memQuadTreeTiles);
BENTLEYDTM_Public                      int bcdtmQuadTreeTile_taggedPointsInDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long minTilePoints, DTM_QUAD_TREE_TILE **quadTreeTilesPP, long *numQuadTreeTilesP) ;


///////// DRange1d/////////
BENTLEYDTM_EXPORT                      int bcdtmRange_triangleShadeMeshForQVCacheFromDtmObject(BC_DTM_OBJ *dtmP, bool useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, DRange3d& range);

///////// bcdtmRead/////////
BENTLEYDTM_EXPORT                      int bcdtmRead_atFilePositionDtmObject (BC_DTM_OBJ **dtmPP, FILE *dtmFP, long filePosition); 
BENTLEYDTM_EXPORT                      int bcdtmRead_binaryFileP3D (WCharCP FileName, DPoint3d **DataPts, long *numPts); 
BENTLEYDTM_Public                      int bcdtmRead_dtmObject (BC_DTM_OBJ *dtmP, FILE *dtmFP); 
BENTLEYDTM_EXPORT                      int bcdtmRead_fromFileDtmObject (BC_DTM_OBJ **dtmPP, WCharCP dtmFileNameP); 
BENTLEYDTM_EXPORT                      int bcdtmRead_geopakDatFileToDtmObject (BC_DTM_OBJ **dtmPP, WCharCP datFileNameP); 
BENTLEYDTM_EXPORT                      int bcdtmRead_openAndReadAtFilePositionDtmObject (BC_DTM_OBJ **dtmPP, WCharCP fileNameP, double filePosition);
BENTLEYDTM_Public                      int bcdtmRead_version100DtmObject (BC_DTM_OBJ *dtmP, FILE *dtmFP);
BENTLEYDTM_Private                     int bcdtmRead_xyzASCIIFileToDtmObject (BC_DTM_OBJ *dtmP, WCharCP xyzFile); 
BENTLEYDTM_Private                     int bcdtmRead_xyzASCIIFileToPointArray (WCharCP xyzFileP, DPoint3d **ptsPP, long *numPtsP, long memIniPts, long memIncPts); 
BENTLEYDTM_Private                     int bcdtmRead_xyzBinaryFileToDtmObject (BC_DTM_OBJ *dtmP, WCharCP xyzFile); 
BENTLEYDTM_Private                     int bcdtmRead_xyzBinaryFileToPointArray (WCharCP xyzFileP, DPoint3d **ptsPP, long *numPtsP, long memIniPts, long memIncPts); 
BENTLEYDTM_EXPORT                      int bcdtmRead_xyzFileToDtmObject (BC_DTM_OBJ **dtmPP, WCharCP xyzFileName); 
BENTLEYDTM_EXPORT                      int bcdtmRead_xyzFileToPointArray (WCharCP xyzFileNameP, DPoint3d **ptsPP, long *numPtsP); 

///////// bcdtmReadStream/////////
BENTLEYDTM_Public                      int bcdtmReadStream_atFilePositionDtmObject (BC_DTM_OBJ **dtmPP, Bentley::TerrainModel::IBcDtmStream* dtmStreamP, long filePosition);
BENTLEYDTM_Public                      int bcdtmReadStream_dtmObject (BC_DTM_OBJ *dtmP, Bentley::TerrainModel::IBcDtmStream* dtmStreamP);
BENTLEYDTM_Public                      int bcdtmReadStream_version100DtmObject (BC_DTM_OBJ *dtmP, Bentley::TerrainModel::IBcDtmStream* dtmStreamP);
BENTLEYDTM_Public                      int bcdtmReadStream_version200DtmObject (BC_DTM_OBJ *dtmP, Bentley::TerrainModel::IBcDtmStream* dtmStreamP);

///////// bcdtmReport/////////
BENTLEYDTM_Private                     int bcdtmReport_buildFeatureIntersectionTableDtmObject (BC_DTM_OBJ *dtmP, const DTMFeatureType featureListP[], long  numFeatureList, DTM_STRING_INTERSECT_TABLE **intTablePP, long *numIntTableP);
BENTLEYDTM_EXPORT                      int bcdtmReport_crossingFeaturesDtmObject (BC_DTM_OBJ *dtmP, const DTMFeatureType featureListP[], long numFeatureList, DTMCrossingFeaturesCallback browseFunctionP, void* userP);
BENTLEYDTM_EXPORT                      int bcdtmReport_duplicatePointErrorsDtmObject (BC_DTM_OBJ *dtmP, DTMDuplicatePointsCallback browseFunctionP, void* userP);
BENTLEYDTM_Private                     int bcdtmReport_intersectCrossingFeaturesDtmObject (BC_DTM_OBJ *dtmP, const DTMFeatureType featureListP[], long numFeatureList, DTMCrossingFeaturesCallback browseFunctionP, void* userP);
BENTLEYDTM_Private                     int bcdtmReport_intersectionTableCompareFunction (const DTM_STRING_INTERSECT_TABLE *int1P, const DTM_STRING_INTERSECT_TABLE *int2P);

///////// bcdtmScanContextLoad/////////
BENTLEYDTM_EXPORT                      int bcdtmScanContextLoad_createScanContextForDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long maxSpots, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, BC_DTM_SCAN_CONTEXT **dtmScanContextPP);
BENTLEYDTM_EXPORT                      int bcdtmScanContextLoad_deleteScanContext (BC_DTM_SCAN_CONTEXT **dtmScanContextPP);
BENTLEYDTM_EXPORT                      int bcdtmScanContextLoad_scanForDtmFeatureTypeOccurrenceDtmObject (BC_DTM_SCAN_CONTEXT *dtmScanContextP, long *featureFoundP, DTMFeatureType *dtmFeatureTypeP, DTMUserTag *userTagP, DTMFeatureId *userFeatureIdP, DTM_POINT_ARRAY ***pointArraysPPP, long *numPointArraysP);

///////// bcdtmScanLoad/////////
BENTLEYDTM_EXPORT                      int bcdtmScanLoad_nextDtmFeatureOccurrenceForDtmFeatureIdFromDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureId userFeatureId, long firstCall, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, long *featureFoundP, BC_DTM_USER_FEATURE *scanFeatureP);
BENTLEYDTM_EXPORT                      int bcdtmScanLoad_nextDtmFeatureOccurrenceForUserTagFromDtmObject (BC_DTM_OBJ *dtmP, DTMUserTag userTag, long firstCall, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, long *featureFoundP, BC_DTM_USER_FEATURE *scanFeatureP);
BENTLEYDTM_EXPORT                      int bcdtmScanLoad_nextDtmFeatureTypeOccurrenceDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long firstCall, long useFence, DTMFenceType fenceType, DTMFenceOption fenceOption, DPoint3d *fencePtsP, long numFencePts, long *featureFoundP, BC_DTM_USER_FEATURE *scanFeatureP); 

///////// bcdtmSite/////////
BENTLEYDTM_EXPORT                      int bcdtmSite_calculateRangeAnglesForOrthogonalToDtmObject (BC_DTM_OBJ *dtmP, double lastX, double lastY, double pntX, double pntY, long dtmPnt1, long dtmPnt2, double *rangeStartAngleP, double *rangeEndAngleP);
BENTLEYDTM_Private                     int bcdtmSite_checkForValidOrthogonalProjectionDtmObject (BC_DTM_OBJ *dtmP, long   startPnt1, long   startPnt2, double startX, double startY, long   testPnt1, long   testPnt2, double testX, double testY, long *validProjectionP);
BENTLEYDTM_Private                     int bcdtmSite_checkForValidOrthogonalToDrapeLineDtmObject (BC_DTM_OBJ *dtmP, long lastPnt1, long lastPnt2, double lastX, double lastY, long testPnt1, long testPnt2, double testX, double testY, long *validDrapeLineP);
BENTLEYDTM_Private                     int bcdtmSite_checkIfDrapeLineIntersectsTinHullDtmObject (BC_DTM_OBJ *dtmP, long   sBrkPnt1, long   sBrkPnt2, double startX, double startY, double endX, double endY, long  *intersectHullP);
BENTLEYDTM_EXPORT                      int bcdtmSite_cleanBreakTopologyDtmObject (BC_DTM_OBJ *dataP, double snapTolerance, DTM_FEATURE **featurePP, long *numFeatureP);
BENTLEYDTM_Public                      int bcdtmSite_cleanTptrListDtmObject (BC_DTM_OBJ *dtmP, long startPnt); 
BENTLEYDTM_EXPORT                      int bcdtmSite_createDisplayDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ **displayDtmPP, BC_DTM_OBJ *dataP, long displayDtmOption);
BENTLEYDTM_Private                     int bcdtmSite_drapeAngleScanForOrthogonalBreakLineIntersectionDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double rangeAngleStart, double rangeAngleEnd, double deviationAngle, long   sBrkPnt1, long   sBrkPnt2, long   *brkFndP, long   *brkTypeP, long   *brkPnt1P, long   *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP);
BENTLEYDTM_Private                     int bcdtmSite_drapeProjectAtAngleToNextBreakLineDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double projectAngle, double deviationAngle, long   sBrkPnt1, long   sBrkPnt2, long   *brkFndP, long   *brkTypeP, long   *brkPnt1P, long   *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP);
BENTLEYDTM_Private                     int bcdtmSite_findClosestBreakLineEndPointWithinDeviationAngleDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double projectAngle, double deviationAngle, long   sBrkPnt1, long   sBrkPnt2, long   *brkFndP, long   *brkTypeP, long   *brkPnt1P, long   *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP);
BENTLEYDTM_Private                     int bcdtmSite_findClosestBreakLineIntersectionDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double endX, double endY, long startPnt, long endPnt, long *findTypeP, long *dtmFeatureP, long *brkPnt1P, long *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP);
BENTLEYDTM_Private                     int bcdtmSite_findClosestBreakLineIntersectionForProjectAngleDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double projectAngle, double deviationAngle, long   sBrkPnt1, long   sBrkPnt2, long   *brkFndP, long   *brkTypeP, long   *brkPnt1P, long   *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP);
BENTLEYDTM_Public                      int bcdtmSite_findClosestOrthogonalBreakLineDtmObject (BC_DTM_OBJ *dtmP, double pointX, double pointY, long scanOption, long *findTypeP, long *brkPnt1P, long *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP);
BENTLEYDTM_EXPORT                      int bcdtmSite_findClosestOrthogonalBreakLineForUserTagsDtmObject (BC_DTM_OBJ *dtmP, double pointX, double pointY, DTMUserTag *userTagsP, long numUserTags, long *findTypeP, long *brkPnt1P, long *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP, bvector<DTMTinPointFeatures>& brkFeatures);
BENTLEYDTM_Private                     int bcdtmSite_findClosestOrthogonalBreakLineIntersectionDtmObject (BC_DTM_OBJ *dtmP, double startX, double startY, double rangeAngleStart, double rangeAngleEnd, double deviationAngle, long   sBrkPnt1, long   sBrkPnt2, long   *brkFndP, long   *brkTypeP, long   *brkPnt1P, long   *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP);
BENTLEYDTM_Public                      int bcdtmSite_findClosestOrthogonalBreakLineWithPositiveUserTagDtmObject (BC_DTM_OBJ *dtmP, double pointX, double pointY, long *findTypeP, long *brkPnt1P, long *brkPnt2P, double *brkPntXP, double *brkPntYP, double *brkPntZP, double *brkDistanceP);
BENTLEYDTM_Private                     int bcdtmSite_findNextClosestOrthogonalBreakLineDtmObject (BC_DTM_OBJ *dtmP, unsigned char *linesP, long brkPnt1, long brkPnt2, double brkPntX, double brkPntY, long checkReflection, double lastBrkPntX, double lastBrkPntY, long *findTypeP, long *dtmFeatureP, long *nextBrkPnt1P, long *nextBrkPnt2P, double *nextBrkPntXP, double *nextBrkPntYP, double *nextBrkPntZP, double *brkDistanceP);
BENTLEYDTM_EXPORT                      int bcdtmSite_getHullSurroundingBreakLinesDtmObject (BC_DTM_OBJ *dataP, DPoint3d **hullPtsPP, long *numHullPtsP);
BENTLEYDTM_Public                      int bcdtmSite_internalStringIntoDtmObject (BC_DTM_OBJ *dtmP, long drapeOption, DPoint3d *stringPtsP, long numStringPts, long *startPntP, long *knotDetectedP);
BENTLEYDTM_Public                      int bcdtmSite_lineBetweenPointsDtmObject (BC_DTM_OBJ *dtmP, long firstPoint, long lastPoint, long drapeOption, long *knotPointP); 
BENTLEYDTM_Private                     int bcdtmSite_markInternalFeatureLinesDtmObject (BC_DTM_OBJ *dtmP, unsigned char **featureLinePP);
BENTLEYDTM_Private                     int bcdtmSite_modifyTinHullToBreakLinesDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmSite_projectAtAngleFromPointToBreakLineDtmObject (BC_DTM_OBJ *dtmP, double xPnt, double yPnt, long brkPnt1, long brkPnt2, double projectAngle, double deviationAngle, long *breakFoundP, long *breakTypeP, double *xBreakP, double *yBreakP, double *zBreakP, double *dBreakP, long *dtmPnt1P, long *dtmPnt2P,bvector<DTMTinPointFeatures>& breakFeatures);
BENTLEYDTM_EXPORT                      int bcdtmSite_projectOrthogonalToBreakLineFromPointDtmObject (BC_DTM_OBJ *dtmP, double xPnt, double yPnt, long brkPnt1, long brkPnt2, double rangeAngleStart, double rangeAngleEnd, double deviationAngle, long *breakFoundP, long *breakTypeP, double *xBreakP, double *yBreakP, double *zBreakP, double *dBreakP, long *dtmPnt1P, long *dtmPnt2P, bvector<DTMTinPointFeatures>&  breakFeaturesPP);
BENTLEYDTM_Public                      int bcdtmSite_resolveIslandsDtmObject (BC_DTM_OBJ *islandP);
BENTLEYDTM_Public                      int bcdtmSite_resolveVoidsDtmObject (BC_DTM_OBJ *voidsP);
BENTLEYDTM_Public                      int bcdtmSite_resolveVoidsWithinIslandsDtmObject (BC_DTM_OBJ *dataP, BC_DTM_OBJ *voidsP);
BENTLEYDTM_EXPORT                      int bcdtmSite_snapToClosestBreakLineDtmObject (BC_DTM_OBJ  *dtmP, double  xPnt, double  yPnt, long   *snapFoundP, long   *snapTypeP, double  *xSnapP, double  *ySnapP, double  *zSnapP, double  *dSnapP, long   *dtmPnt1P, long *dtmPnt2P, bvector<DTMTinPointFeatures>& snapFeaturesPP);
BENTLEYDTM_EXPORT                      int bcdtmSite_snapToClosestBreakLineWithPositiveUserTagDtmObject (BC_DTM_OBJ *dtmP, double xPnt, double yPnt, long *snapFoundP, long *snapTypeP, double *xSnapP, double *ySnapP, double *zSnapP, double *dSnapP, long *dtmPnt1P, long *dtmPnt2P, DTMTinPointFeatures **snapFeaturesPP);
BENTLEYDTM_EXPORT                      int bcdtmSite_snapToThenOrthogonalFromBreakLineDtmObject (BC_DTM_OBJ *dtmP, double xPnt, double yPnt, DTM_POINT_ARRAY  ***drapeArraysPPP, long   *numDrapeArraysP);
BENTLEYDTM_EXPORT                      int bcdtmSite_snapToThenOrthogonalToBreakLineDtmObject (BC_DTM_OBJ *dtmP, double xPnt, double yPnt, DTM_POINT_ARRAY  ***drapeArraysPPP, long   *numDrapeArraysP);
BENTLEYDTM_Private                     int bcdtmSite_testForAnAngleProjectionExternalToTinHullDtmObject (BC_DTM_OBJ *dtmP, long dtmPnt1, long dtmPnt2, double projectAngle, long *internalFlagP);
BENTLEYDTM_EXPORT                      int bcdtmSite_testForDtmFeaturesInternalToTinHullDtmObject (BC_DTM_OBJ  *dtmP, long *internalFeaturesP); 
BENTLEYDTM_Private                     int bcdtmSite_testForOrthogonalToProjectionExternalToTinHullDtmObject (BC_DTM_OBJ *dtmP, long   dtmPnt1, long   dtmPnt2, double rangeAngleStart, double rangeAngleEnd, long *internalFlagP);
BENTLEYDTM_EXPORT                      int bcdtmSite_writeAllDtmFeatureTypeToDtmFeatureArrayDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, DTM_FEATURE **featurePP, long *numFeatureP);

///////// bcdtmSlope/////////
BENTLEYDTM_EXPORT                      int bcdtmSlope_calculateSlopeAreaDtmFile (WCharCP dtmFileP, DPoint3d *slopePtsP, long numSlopePts, DTMFeatureCallback callBackFunctionP, double *flatAreaP, double *slopeAreaP, DTM_POINT_ARRAY ***slopePolygonsPPP, long *numSlopePolygonsP);
BENTLEYDTM_EXPORT                      int bcdtmSlope_calculateSlopeAreaDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *slopePtsP, long numSlopePts, DTMFeatureCallback callBackFunctionP, double *flatAreaP, double *slopeAreaP, DTM_POINT_ARRAY ***slopePolygonsPPP, long *numSlopePolygonsP);

///////// bcdtmSort/////////
BENTLEYDTM_Public                     void bcdtmSort_clustersPointArray (DPoint3d *ptsP, long numPts); 
BENTLEYDTM_Public                     void bcdtmSort_clustersPointArrayWithTag (DPoint3d *ptsP, long *tagP, long numPts); 
BENTLEYDTM_Private                    void bcdtmSort_mergeSortClustersPointArray (DPoint3d *ptsP, long numPts, int axis); 
BENTLEYDTM_Private                    void bcdtmSort_mergeSortClustersPointArrayWithTag (DPoint3d *ptsP, long *tagP, long numPts, int axis); 
BENTLEYDTM_Private                    void bcdtmSort_mergeSortPointsIntoTilesDtmObject (BC_DTM_OBJ *dtmP, long maxTilePts, long startPoint, long numPoints, int axis);
BENTLEYDTM_Private                    void bcdtmSort_mergeSortTaggedPointsInTileDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long median, long axis); 
BENTLEYDTM_Private                    void bcdtmSort_mergeSortTaggedPointsIntoTilesDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, int axis); 
BENTLEYDTM_Private                    void bcdtmSort_mergeSortTileTaggedPointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long maxTilePts, long startPoint, long numPoints, int axis);
BENTLEYDTM_Private                    void bcdtmSort_pointArrayCluster (DPoint3d *ptsP, long numPts, long median, long axis); 
BENTLEYDTM_Private                    void bcdtmSort_pointArrayClusterWithTag (DPoint3d *ptsP, long *tagP, long numPts, long median, long axis); 
BENTLEYDTM_EXPORT                      int bcdtmSort_pointsIntoTilesDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, long maxTilePts, long **tileOffsetPP, long **numTilePtsPP, long *numTilesP);
BENTLEYDTM_Public                     void bcdtmSort_qsortPointArray (DPoint3d *ptsP, long numPts, long axis); 
BENTLEYDTM_Private                     int bcdtmSort_qsortPointArrayXaxisCompareFunction (const DPoint3d *p3d1P, const DPoint3d *p3d2P); 
BENTLEYDTM_Private                     int bcdtmSort_qsortPointArrayYaxisCompareFunction (const DPoint3d *p3d1P, const DPoint3d *p3d2P); 
BENTLEYDTM_Public                      int bcdtmSort_removeDuplicatesPointArray (DPoint3d **ptsPP, long *numPtsP, long *numDupPtsP); 
BENTLEYDTM_Public                      int bcdtmSort_removeDuplicatesWithinTolerancePointArray (DPoint3d **ptsPP, long *numPtsP, double ppTol, long *numDupPtsP); 
BENTLEYDTM_EXPORT                      int bcdtmSort_taggedPointsIntoTilesDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long maxTilePts, long **tileOffsetPP, long **numTilePtsPP, long *numTilesP);
BENTLEYDTM_Public                     void bcdtmSort_taggedPointsIntoTilesForTriangulationDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints); 
BENTLEYDTM_EXPORT                      int bcdtmSort_tilePointArray (DPoint3d *ptsP, long numPts, double tileLength, DTM_POINT_ARRAY_TILE **tilesPP, long *numTilesP); 
BENTLEYDTM_Private                    void bcdtmSort_tilePointsDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, long median, long axis);
BENTLEYDTM_Private                    void bcdtmSort_tileTaggedPointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long median, long axis);

///////// bcdtmStockPile/////////
BENTLEYDTM_EXPORT                      int bcdtmStockPile_createPointStockPileDtmObject (BC_DTM_OBJ *dtmP, DPoint3d headCoordinates, double stockPileSlope, long mergeOption, BC_DTM_OBJ **stockPileDtmPP, BC_DTM_OBJ **mergedDtmPP, double *volumeP);
BENTLEYDTM_Private                     int bcdtmStockPile_createPointStockPileToGroundSurfaceDtmObject (BC_DTM_OBJ *dtmP, DPoint3d headCoordinates, double stockPileSlope, BC_DTM_OBJ **stockPileDtmPP, double *volumeP);
BENTLEYDTM_EXPORT                      int bcdtmStockPile_createStringStockPileDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *headCoordinatesP, long numHeadCoordinates, double stockPileSlope, long mergeOption, BC_DTM_OBJ **stockPileDtmPP, BC_DTM_OBJ **mergedDtmPP, double *volumeP);
BENTLEYDTM_Private                     int bcdtmStockPile_createStringStockPileToGroundSurfaceDtmObject (BC_DTM_OBJ *dtmP, DPoint3d *headCoordinatesP, long numHeadCoordinates, double stockPileSlope, BC_DTM_OBJ **stockPileDtmPP, double *volumeP);

///////// bcdtmStream/////////
BENTLEYDTM_EXPORT                      int bcdtmStream_createFromFILE (FILE* fP, Bentley::TerrainModel::IBcDtmStream** dtmStreamPP);
BENTLEYDTM_EXPORT                      int bcdtmStream_destroy (Bentley::TerrainModel::IBcDtmStream** dtmStreamPP);
BENTLEYDTM_EXPORT                   size_t bcdtmStream_fread (void* dest, size_t elementSize, size_t count, Bentley::TerrainModel::IBcDtmStream* stream);
BENTLEYDTM_EXPORT                      int bcdtmStream_fseek (Bentley::TerrainModel::IBcDtmStream* stream, long offset, int origin);
BENTLEYDTM_EXPORT                      int bcdtmStream_ftell (Bentley::TerrainModel::IBcDtmStream* stream);
BENTLEYDTM_EXPORT                   size_t bcdtmStream_fwrite (void* source, size_t elementSize, size_t count, Bentley::TerrainModel::IBcDtmStream* stream);

///////// bcdtmString/////////
BENTLEYDTM_Private                     int bcdtmString_addActiveStringLine (DTM_STRING_INTERSECT_TABLE **activeIntTableP, long *numActiveIntTable, long *memActiveIntTable, DTM_STRING_INTERSECT_TABLE *intP); 
BENTLEYDTM_Public                      int bcdtmString_buildFeatureIntersectionTableDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType *featureListP, long numFeatureList, DTM_STRING_INTERSECT_TABLE **intTablePP, long *numIntTableP);
BENTLEYDTM_Private                     int bcdtmString_buildLineStringIntersectionTable2D (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, DTM_STRING_INTERSECT_TABLE **intTablePP, long *numIntTableP); 
BENTLEYDTM_Private                     int bcdtmString_checkForClosingIntersectLines (DTM_STRING_INTERSECT_TABLE *activeLineP, DTM_STRING_INTERSECT_TABLE *scanLineP); 
BENTLEYDTM_Private                     int bcdtmString_checkForConnectingIntersectLineEndPoints (DTM_STRING_INTERSECT_TABLE *activeLineP, DTM_STRING_INTERSECT_TABLE *scanLineP); 
BENTLEYDTM_Private                     int bcdtmString_deleteActiveStringLines (DTM_STRING_INTERSECT_TABLE *activeIntTableP, long *numActiveIntTable, DTM_STRING_INTERSECT_TABLE *intTableP); 
BENTLEYDTM_EXPORT                      int bcdtmString_detectStringIntersections2D (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, long intersectType, DTM_INTERSECT_POINT **intPointsPP, long *numIntPointsP); 
BENTLEYDTM_Private                     int bcdtmString_determineActiveStringLineIntersections (long intersectType, DTM_STRING_INTERSECT_TABLE *activeIntTableP, long numActiveIntTable, DTM_INTERSECT_POINT **intPtsP, long *numIntPtsP, long *memIntPtsP, long memIntPtsInc); 
BENTLEYDTM_Public                      int bcdtmString_getBoundingCubeForArrayOfStrings (DTM_POINT_ARRAY **pointArrayPP, long numPointArray, double *xMinP, double *yMinP, double *zMinP, double *xMaxP, double *yMaxP, double *zMaxP); 
BENTLEYDTM_Public                      int bcdtmString_getBoundingCubeForString (DPoint3d *stringPointsP, long numStringPoints, double *xMinP, double *yMinP, double *zMinP, double *xMaxP, double *yMaxP, double *zMaxP); 
BENTLEYDTM_Public                   double bcdtmString_getStringLength2D (DPoint3d *stringPointsP, long numStringPoints, double *stringLengthP); 
BENTLEYDTM_Public                      int bcdtmString_intersectDtmFeaturesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType *featureListP, long  numFeatureList);
BENTLEYDTM_Private                     int bcdtmString_intersectionTableCompareFunction (const DTM_STRING_INTERSECT_TABLE *int1P, const DTM_STRING_INTERSECT_TABLE *int2P); 
BENTLEYDTM_Public                      int bcdtmString_intersectPointsCompareFunction (const DTM_INTERSECT_POINT *intPnt1P, const DTM_INTERSECT_POINT *intPnt2P); 
BENTLEYDTM_Public                      int bcdtmString_intersectPointsCoordinateCompareFunction (const DTM_INTERSECT_POINT *intPnt1P, const DTM_INTERSECT_POINT *intPnt2P); 
BENTLEYDTM_Private                     int bcdtmString_lineEndPointsCompareFunction (const void *void1P, const void *void2P); 
BENTLEYDTM_EXPORT                      int bcdtmString_makeCloseEndPointsOfArrayOfLineStringsCoincident2D (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, double pptol); 
BENTLEYDTM_EXPORT                      int bcdtmString_printArrayOfLineStringsToFile (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, WCharCP fileNameP); 
BENTLEYDTM_Public                      int bcdtmString_removeDuplicatePoints2D (DPoint3d *stringPointsP, long *numStringPointsP, double pptol); 
BENTLEYDTM_EXPORT                      int bcdtmString_roundArrayOfLineStrings3D (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, long numDecPlaces); 
BENTLEYDTM_EXPORT                      int bcdtmString_roundArrayOfLineStringsToPointTolerance3D (DTM_POINT_ARRAY **lineStringsPP, long numLineStrings, double pptol); 
BENTLEYDTM_Public                      int bcdtmString_roundLineStringCoordinates3D (DPoint3d *stringPointsP, long numStringPoints, long numDecPlaces); 
BENTLEYDTM_Public                      int bcdtmString_scanForStringLineIntersections2D (long intersectType, DTM_STRING_INTERSECT_TABLE *intTableP, long numIntTable, DTM_INTERSECT_POINT **intPtsPP, long *numIntPtsP, long *memIntPtsP, long memIntPtsInc); 
BENTLEYDTM_Public                      int bcdtmString_testForClosedString2D (DPoint3d *stringPointsP, long numStringPoints, long *closeFlagP); 
BENTLEYDTM_Public                      int bcdtmString_testIfStringCanBeClosed2D (DPoint3d *stringPointsP, long numStringPoints, int *stringCloseP); 

///////// bcdtmTheme/////////
BENTLEYDTM_Private                     int bcdtmTheme_getLatticeLineCoordinatesLatticeObject (DTM_LAT_OBJ *latticeP, long I, long J, long Dirn, double *X1, double *Y1, double *Z1, double *X2, double *Y2, double *Z2); 
BENTLEYDTM_Public                      int bcdtmTheme_getLineOffsetDtmObject (BC_DTM_OBJ *dtmP, long *offsetP, long pnt1, long pnt2); 
BENTLEYDTM_Private                     int bcdtmTheme_getNextCellClk (long I1, long J1, long *Dirn, long Nxl, long Nyl, long *I2, long *J2); 
BENTLEYDTM_Private                     int bcdtmTheme_loadCellHillShadeFromLatticeObject (DTM_LAT_OBJ *latticeP, long greyScaleRange, double altitudeDegrees, double azimuthDegrees, DTMFeatureCallback loadFunctionP, long useFence, BC_DTM_OBJ *clipDtmP, void *userP);
BENTLEYDTM_Private                     int bcdtmTheme_loadCellThemesFromLatticeObject (DTM_LAT_OBJ *latticeP, long themeOption, DRange1d *themeRangesP, long numThemeRanges, DTMFeatureCallback loadFunctionP, long useFence, BC_DTM_OBJ *clipDtmP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmTheme_loadHillShadeThemeFromDtmObject (BC_DTM_OBJ *dtmP, long  greyScaleRange, double altitudeDegrees, double azimuthDegrees, long useFence, DPoint3d *fencePtsP, long numFencePts, int (*loadFunctionP) (), void *userP);
BENTLEYDTM_EXPORT                      int bcdtmTheme_loadHillShadeThemeFromLatticeObject (DTM_LAT_OBJ *latticeP, long  greyScaleRange, double altitudeDegrees, double azimuthDegrees, long useFence, DPoint3d *fencePtsP, long numFencePts, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmTheme_loadPolygonThemesFromDtmObject (BC_DTM_OBJ *dtmP, long themeOption, DRange1d *themeRangesP, long numThemeRanges, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_Private                     int bcdtmTheme_loadPolygonThemesFromLatticeObject (DTM_LAT_OBJ *latticeP, long themeOption, DRange1d *themeRangesP, long numThemeRanges, DTMFeatureCallback loadFunctionP, long useFence, BC_DTM_OBJ *clipDtmP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmTheme_loadThemeFromDtmFile (WCharCP dtmFileP, long polyOption, long themeOption, DRange1d *themeRangesP, long numThemeRanges, DTMFeatureCallback loadFunctionP, long useFence, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmTheme_loadThemeFromDtmObject (BC_DTM_OBJ *dtmP, long polyOption, long themeOption, DRange1d *themeRangesP, long numThemeRanges, DTMFeatureCallback loadFunctionP, long useFence, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmTheme_loadThemeFromLatticeFile (WCharCP latticeFileP, long polyOption, long themeOption, DRange1d *themeRangesP, long numThemeRanges, DTMFeatureCallback loadFunctionP, long useFence, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmTheme_loadThemeFromLatticeObject (DTM_LAT_OBJ *latticeP, long polyOption, long themeOption, DRange1d *themeRangesP, long numThemeRanges, DTMFeatureCallback loadFunctionP, long useFence, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmTheme_loadTriangleAttributesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureCallback loadFunctionP, long useFence, DPoint3d *fencePtsP, long numFencePts, void *userP); 
BENTLEYDTM_Private                     int bcdtmTheme_loadTriangleHillShadeThemeFromDtmObject (BC_DTM_OBJ *dtmP, long greyScaleRange, double altitudeDegrees, double azimuthDegrees, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_Private                     int bcdtmTheme_loadTriangleThemesFromDtmObject (BC_DTM_OBJ *dtmP, long themeOption, DRange1d *themeRangesP, long numThemeRanges, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_Public                      int bcdtmTheme_nullThemePolygonLatticeObject (DTM_LAT_OBJ *latticeP, char *latThemeP, long I, long J, char Cv, char Nv, long Nxl, long Nyl); 

///////// bcdtmTile/////////
BENTLEYDTM_Private                    void bcdtmTile_medianSortPointsDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, long median, long axis);
BENTLEYDTM_Private                    void bcdtmTile_medianSortTaggedPointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long median, long axis);
BENTLEYDTM_EXPORT                      int bcdtmTile_pointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long minTilePoints, DTM_POINT_TILE **pointTilesPP, long *numPointTilesP);
BENTLEYDTM_Public                      int bcdtmTile_pointsInDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, long minTilePoints, DTM_POINT_TILE **pointTilesPP, long *numPointTilesP);
BENTLEYDTM_Public            unsigned long bcdtmTile_randomNumber (unsigned long size);
BENTLEYDTM_Private                     int bcdtmTile_sortAndTilePointsDtmObject (BC_DTM_OBJ *dtmP, long startPoint, long numPoints, long minTilePoints, long axis, DTM_POINT_TILE *pointTilesP, long *numPointTilesP, long *lastStartPointP, long memPointTiles);
BENTLEYDTM_Private                     int bcdtmTile_sortAndTileTaggedPointsDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long minTilePoints, long axis, DTM_POINT_TILE *pointTilesP, long *numPointTilesP, long *lastStartPointP, long memPointTiles);
BENTLEYDTM_Public                      int bcdtmTile_taggedPointsInDtmObject (BC_DTM_OBJ *dtmP, long *tagP, long startPoint, long numPoints, long numTilePoints, DTM_POINT_TILE **pointTilesPP, long *numPointTilesP);

///////// bcdtmTin/////////
BENTLEYDTM_Private                     int bcdtmTin_addInteriorPointToSingleTriangleVoidsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmTin_assignDirectionToBoundaryLinesFromHullPointDtmObject (BC_DTM_OBJ *dtmP, long numTinFeatures, long *numAssignedP); 
BENTLEYDTM_Private                     int bcdtmTin_assignDirectionToBoundaryLinesFromTwoHullPointsDtmObject (BC_DTM_OBJ *dtmP, long numTinFeatures, long *numAssignedP); 
BENTLEYDTM_Private                    long bcdtmTin_bottomMostPointDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Private                     int bcdtmTin_checkForIntersectionWithInsertedVoidsAndIslandsDtmObject (BC_DTM_OBJ *dtmP, long firstPoint, long *closeFlagP, long *intersectResultP);
BENTLEYDTM_Public                      int bcdtmTin_checkForTriangulationTermination (BC_DTM_OBJ  *dtmP);
BENTLEYDTM_EXPORT                      int bcdtmTin_clearTriangulationCheckStopCallBackFunction (BC_DTM_OBJ  *dtmP);
BENTLEYDTM_Public                      int bcdtmTin_clipDtmFeaturesToVoidsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                     int bcdtmTin_clipHullToBoundaryLinesDtmObject (BC_DTM_OBJ *dtmP, long numTinFeatures); 
BENTLEYDTM_Private                     int bcdtmTin_clipTinToBoundaryLinesDtmObject (BC_DTM_OBJ *dtmP, double maxSide); 
BENTLEYDTM_Public                      int bcdtmTin_clipTinToBoundaryPolygonDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmTin_clipTinToDrapeBoundaryPolygonDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmTin_clipVoidLinesFromDtmFeatureDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature);
BENTLEYDTM_Public                      int bcdtmTin_compactCircularListDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmTin_compactFeatureListDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmTin_compactFeatureTableDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmTin_compactPointAndNodeTablesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Private                     int bcdtmTin_connectLinesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long numConnectLines); 
BENTLEYDTM_Private                     int bcdtmTin_countNumberOfDtmFeatureTypeOccurrencesDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long *numOccurencesP); 
BENTLEYDTM_Public                      int bcdtmTin_createTinDtmObject (BC_DTM_OBJ *dtmP, long  edgeOption, double maxSide, long numGraphicBreaks, long numContourLines, long numSoftBreaks, long numHardBreaks, long numVoids, long numIslands, long numHoles, long numBreakVoids, long numDrapeVoids, long numGroupSpots, long numPolygons, long numHulls, long numDrapeHulls, long numHullLines);
BENTLEYDTM_Private                     int bcdtmTin_delaunayTriangulateDtmObject (BC_DTM_OBJ *dtmP, long iofs, long ns, long axis, long *lpnt, long *rpnt, long *bpnt, long *tpnt, long *icol); 
BENTLEYDTM_Private                     int bcdtmTin_getLcTangentDtmObject (BC_DTM_OBJ *dtmP, long p1l, long p1r, long p2l, long p2r, long colinear1, long colinear2, long *left, long *right); 
BENTLEYDTM_Private                     int bcdtmTin_getPointerAndOffsetToNextDtmFeatureTypeOccurrenceDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType, long firstCall, BC_DTM_FEATURE **dtmFeaturePP, long *dtmFeatureNumP); 
BENTLEYDTM_Public                      int bcdtmTin_getSwapTriangleDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long lastPnt, long *P1, long *P2, long *P3); 
BENTLEYDTM_Private                     int bcdtmTin_getUcTangentDtmObject (BC_DTM_OBJ *dtmP, long p1l, long p1r, long p2l, long p2r, long col1, long col2, long *l, long *r); 
BENTLEYDTM_Private                     int bcdtmTin_inCircleTestDtmObject (BC_DTM_OBJ *dtmP, long maxMinTest, long P1, long P2, long P3, long P4); 
BENTLEYDTM_Private                     int bcdtmTin_insertBoundaryLinesDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *dataP); 
BENTLEYDTM_Private                     int bcdtmTin_insertDtmFeatureTypeIntoDtmObject (BC_DTM_OBJ *dtmP, DTMFeatureType dtmFeatureType);
BENTLEYDTM_Private                    long bcdtmTin_leftMostPointDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_EXPORT                      int bcdtmTin_markInternalVoidPointsDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Public                      int bcdtmTin_maxMinTestDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2, long p3, long p4); 
BENTLEYDTM_EXPORT                      int bcdtmTin_maxsideRemoveExternalTrianglesDtmObject (BC_DTM_OBJ *dtmP, double maxSide);
BENTLEYDTM_Private                     int bcdtmTin_mergeTrianglesDtmObject (BC_DTM_OBJ *dtmP, long p1l, long p1r, long colinear1, long p2l, long p2r, long colinear2, long axis, long *colinearP); 
BENTLEYDTM_Private                     int bcdtmTin_multiThreadTriangulateDtmObject (BC_DTM_OBJ *dtmP, long *colinearPtsP);
BENTLEYDTM_Public                      int bcdtmTin_precisionRemoveEdgeSliversDtmObject (BC_DTM_OBJ *dtmP, double plTol); 
BENTLEYDTM_Private                     int bcdtmTin_processConnectedLinesDtmObject (BC_DTM_OBJ *dtmP, long numGraphicBreaks, long numHardBreaks, long numSoftBreaks, long numContourLines); 
BENTLEYDTM_Private                     int bcdtmTin_reconstructSortOrderDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Public                      int bcdtmTin_removeExternalMaxSideTrianglesDtmObject (BC_DTM_OBJ *dtmP, double maxSide); 
BENTLEYDTM_Public                      int bcdtmTin_removeExternalSliverTrianglesDtmObject (BC_DTM_OBJ *dtmP); 
BENTLEYDTM_Private                     int bcdtmTin_removeHullLinesWithBoundaryVextexDtmObject (BC_DTM_OBJ *dtmP, long numTinFeatures, long *numRemovedP); 
BENTLEYDTM_Private                     int bcdtmTin_removeSliversPriorToBoundaryLineClipDtmObject (BC_DTM_OBJ *dtmP, long *numRemovedP); 
BENTLEYDTM_Private                     int bcdtmTin_removeTrianglesExternalToBoundaryLineDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long *numRemovedP); 
BENTLEYDTM_Public                      int bcdtmTin_resortTinStructureDtmObject (BC_DTM_OBJ *dtmP);
BENTLEYDTM_Private                    long bcdtmTin_rightMostPointDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Public                      int bcdtmTin_setConvexHullDtmObject (BC_DTM_OBJ *dtmP, long p1, long p2); 
BENTLEYDTM_EXPORT                      int bcdtmTin_setTriangulationCheckStopCallBackFunction (BC_DTM_OBJ *dtmP, int (*checkStopCallBackP) (DTMFeatureType dtmFeatureType));
BENTLEYDTM_Public                      int bcdtmTin_swapTinLinesThatIntersectConnectLineDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long lastPnt, long *lineConnectedP); 
BENTLEYDTM_Private                     int bcdtmTin_testIfHullLineCanBeRemovedDtmObject (BC_DTM_OBJ *dtmP, long dtmFeature, long startPnt, long nextPnt, long *removeFlagP); 
BENTLEYDTM_Private                    long bcdtmTin_topMostPointDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2); 
BENTLEYDTM_Private                     int bcdtmTin_triangulateDtmObject (BC_DTM_OBJ *dtmP, long *colinearPtsP); 
BENTLEYDTM_Private                     int bcdtmTin_validateDrapeVoidDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_FEATURE *dtmFeatureP, DPoint3d *hullPtsP, long numHullPts, long *drapeVoidValidatedP, DPoint3d  **drapeVoidPtsPP, long *numDrapeVoidPtsP);
BENTLEYDTM_Private                     int bcdtmTin_validatePolygonalOffsetFeatureDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_FEATURE *dtmFeatureP, long *validateResultP);
BENTLEYDTM_Private                     int bcdtmTin_insertDtmFeatureTypeIntoDtmObjectNew(BC_DTM_OBJ *dtmP,DTMFeatureType dtmFeatureType) ;

///////// bcdtmTinVolume/////////
BENTLEYDTM_Private                     int bcdtmTinVolume_calculatePrismoidalVolumesForTriangleDtmObject (BC_DTM_OBJ *dtmP, VOLRANGETAB *volRangeTabP, long numRanges, long startPnt, DPoint3d *trgPtsP, double &cutP, double &fillP, double &cutAreaP, double &fillAreaP, double &voidAreaP);
BENTLEYDTM_Private                     int bcdtmTinVolume_calculateRangeVolumes (double cutVolume, double fillVolume, VOLRANGETAB *rangeTableP, long numRanges, double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double Z3, double SZ1, double SZ2, double SZ3); 
BENTLEYDTM_Public                      int bcdtmTinVolume_calculateSurfaceToSurfaceVolumeForTriangleDtmObject (BC_DTM_OBJ *dtmP, long Ndp, VOLRANGETAB *rangeTableP, long numRanges, long Spnt, DPoint3d *TrgPts, double *cutP, double *fillP, double *areaP); 
BENTLEYDTM_Public                      int bcdtmTinVolume_calculateSurfaceToSurfaceVolumeForTriangleTinObjectNew (BC_DTM_OBJ *dtmP, VOLRANGETAB *rangeTableP, long numRanges, long Spnt, DPoint3d *TrgPts, double *cutP, double *fillP, double *areaP); 
BENTLEYDTM_Public                      int bcdtmTinVolume_calculateVolumeBalance (double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double Z3, double SZ1, double SZ2, double SZ3, double *balanceP); 
BENTLEYDTM_Public                      int bcdtmTinVolume_calculateVolumesForMarkedInternalTptrPolygonPointsDtmObject (BC_DTM_OBJ *dtmP, long Spnt, long Mark, long *NumUnMarked, VOLRANGETAB *rangeTableP, long numRanges, double Xmin, double Ymin, double Zmin, double *cutP, double *fillP, double *areaP); 
BENTLEYDTM_Public                      int bcdtmTinVolume_calculateVolumesForPointDtmObject (BC_DTM_OBJ *dtmP, long P1, VOLRANGETAB *rangeTableP, long numRanges, double Xmin, double Ymin, double Zmin, double *cutP, double *fillP, double *areaP); 
BENTLEYDTM_Private                     int bcdtmTinVolume_calculateVolumeSurfaceToPlaneDtmObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ *polyP, long intersectFlag, VOLRANGETAB *rangeTableP, long numRanges, double elevation, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &areaP);
BENTLEYDTM_Private                     int bcdtmTinVolume_calculateVolumeSurfaceToPlaneDtmObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ *polyP, long intersectFlag, VOLRANGETAB *rangeTableP, long numRanges, double elevation, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &cutAreaP, double &fillAreaP);
BENTLEYDTM_Public                      int bcdtmTinVolume_calculateVolumeSurfaceToSurfaceDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DTM_POLYGON_OBJ *polygonP, VOLRANGETAB *rangeTableP, long numRanges, DTMFeatureCallback loadFunctionP, void *userP, double &cutVolumeP, double &fillVolumeP, double &balanceVolumeP, double &cutAreaP, double & fillAreaP);
BENTLEYDTM_Public                      int bcdtmTinVolume_createSptrListOfInternalAndTptrPolygonPointsDtmObject (BC_DTM_OBJ *dtmP, long startPnt, long *firstPntP); 
BENTLEYDTM_Private                     int bcdtmTinVolume_getIntersectPointDtmObject (BC_DTM_OBJ *dtmP, long firstPnt, long lastPnt, long indexPnt, long *dtmFeatureLineP, long *pnt1P, long *pnt2P, long *pnt3P, double *xP, double *yP); 
BENTLEYDTM_Private                     int bcdtmTinVolume_insertInternalTriangleIntoDtmObject (BC_DTM_OBJ *dtmP, long drapeFlag, DPoint3d *trgPtsP, long numTrgPts, long *startPntP);
BENTLEYDTM_Private                     int bcdtmTinVolume_insertLineBetweenPointsDtmObject (BC_DTM_OBJ *dtmP, long firstPnt, long lastPnt, long drapeFlag); 
BENTLEYDTM_Public                      int bcdtmTinVolume_interpolateZOnPlaneOfTriangle (long CoefficientFlag, DPoint3d *TrgPts, double x, double y, double *z); 
BENTLEYDTM_Public                      int bcdtmTinVolume_intersectZLines (double P1, double P2, double S1, double S2, double *z); 
BENTLEYDTM_Public                      int bcdtmTinVolume_markInternalTptrPolygonPointsDtmObject (BC_DTM_OBJ *dtmP, long Spnt, long Mark, long *NumMarked); 
BENTLEYDTM_Private                     int bcdtmTinVolume_prismoidalVolume (double elevation, double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double Z3, double *cutP, double *fillP); 
BENTLEYDTM_Private                     int bcdtmTinVolume_prismToFlatPlane (double elevation, double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double Z3, double *cutP, double *fillP, double *areaP);
BENTLEYDTM_Private                     int bcdtmTinVolume_prismToFlatPlane (double elevation, double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double Z3, double &cutP, double &fillP, double &cutAreaP, double &fillAreaP);
BENTLEYDTM_Public                      int bcdtmTinVolume_prismToFlatPlaneDtmObject (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double elevation, double &cutP, double &fillP, double &cutAreaP, double &fillAreaP);
BENTLEYDTM_Private                     int bcdtmTinVolume_storePointInDtmObject (BC_DTM_OBJ *dtmP, long drapeFlag, double x, double y, double z, long *pntNumP); 
BENTLEYDTM_EXPORT                      int bcdtmTinVolume_surfaceToElevationDtmFile (WCharCP dtmFileP, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, double elevation, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &areaP); 
BENTLEYDTM_EXPORT                      int bcdtmTinVolume_surfaceToElevationDtmObject (BC_DTM_OBJ *dtmP, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, double elevation, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &cutAreaP, double& fillAreaP);
BENTLEYDTM_EXPORT                      int bcdtmTinVolume_surfaceToElevationDtmObject (BC_DTM_OBJ *dtmP, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, double elevation, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &areaP);
BENTLEYDTM_EXPORT                      int bcdtmTinVolume_surfaceToSurfaceBalanceDtmFiles (WCharCP fromDtmFileP, WCharCP toDtmFileP, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, void *userP, double *fromAreaP, double *toAreaP, double *balanceP);
BENTLEYDTM_EXPORT                      int bcdtmTinVolume_surfaceToSurfaceBalanceDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, void *userP, double *fromAreaP, double *toAreaP, double *balanceP); 
BENTLEYDTM_EXPORT                      int bcdtmTinVolume_surfaceToSurfaceDtmFiles (WCharCP fromDtmFileP, WCharCP toDtmFileP, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, void *userP, double *cutP, double *fillP, double *balanceP, double *areaP); 
BENTLEYDTM_EXPORT                      int bcdtmTinVolume_surfaceToSurfaceDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &areaP);
BENTLEYDTM_EXPORT                      int bcdtmTinVolume_surfaceToSurfaceDtmObjects (BC_DTM_OBJ *fromDtmP, BC_DTM_OBJ *toDtmP, VOLRANGETAB *rangeTableP, long numRanges, DPoint3d *polygonPtsP, long numPolygonPts, DTMFeatureCallback loadFunctionP, void *userP, double &cutP, double &fillP, double &balanceP, double &cutAreaP, double &fillAreaP);
BENTLEYDTM_Private                     int bcdtmTinVolume_surfaceToSurfaceVolumeForTriangleDtmObject (BC_DTM_OBJ *dtmP, long trgNum, VOLRANGETAB *volRangeTableP, long numRanges, DPoint3d *trgPtsP, long numTrgPts, double &cutVolumeP, double &fillVolumeP, double &cutAreaP, double& fillAreaP, double &voidAreaP);
BENTLEYDTM_Public                      int bcdtmTinVolume_unmarkInternalTptrPolygonPointsDtmObject (BC_DTM_OBJ *dtmP, long Spnt, long Mark, long *NumUnMarked); 

///////// bcdtmUtility/////////
BENTLEYDTM_EXPORT                      int bcdtmUtility_boreHoleApp00DtmObject (BC_DTM_OBJ *groundDtmP, BC_DTM_OBJ *materialDtmP);
BENTLEYDTM_EXPORT                      int bcdtmUtility_convertMbsToWcs (char *mbsP, wchar_t **wcsPP);
BENTLEYDTM_EXPORT                      int bcdtmUtility_convertWcsToMbs (WCharCP wcsP, char **mbsPP); 
BENTLEYDTM_Public                      int bcdtmUtility_copyTinDtmFeatureToPolygonObjectDtmObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ *polyP, long dtmFeature, DTMUserTag userTag);
BENTLEYDTM_Public                      int bcdtmUtility_copyTinDtmFeatureTypeToPolygonObjectDtmObject (BC_DTM_OBJ *dtmP, DTM_POLYGON_OBJ *polyP, DTMFeatureType dtmFeatureType, DTMUserTag userTag);
BENTLEYDTM_EXPORT                      int bcdtmUtility_destroyCurrentDtmObject (void);
BENTLEYDTM_EXPORT                      int bcdtmUtility_getBoundingCubeDtmObject (BC_DTM_OBJ *dtmP, double *xMinP, double *yMinP, double *zMinP, double *xMaxP, double *yMaxP, double *zMaxP, double *xRangeP, double *yRangeP, double *zRangeP); 
BENTLEYDTM_EXPORT                      int bcdtmUtility_getCurrentDtmObject (BC_DTM_OBJ **dtmP, WCharCP dtmFileP);
BENTLEYDTM_EXPORT                      int bcdtmUtility_getDtmStateDtmObject (BC_DTM_OBJ *dtmP, DTMState *dtmStateP);
BENTLEYDTM_EXPORT                      int bcdtmUtility_getLastDtmErrorMessage (long *errorStatusP, long *errorNumberP, char **errorMessagePP);
BENTLEYDTM_EXPORT                      int bcdtmUtility_getStatisticsDtmObject (BC_DTM_OBJ *dtmP, DTMState& dtmState, long& numPoints, long& numTinLines, long& numTriangles, long& clistSize, long& flistSize, long& numDtmFeatures, long& numBreaks, long& numContourLines, long& numVoids, long& numIslands, long& numHoles, long& numGroupSpots, bool& hasHull, long& dtmMemorySize); 
BENTLEYDTM_EXPORT                      int bcdtmUtility_setCurrentDtmObject (BC_DTM_OBJ *dtmP, WCharCP dtmFileP); 
BENTLEYDTM_EXPORT                      int bcdtmUtility_setGeopakActive (void);
BENTLEYDTM_EXPORT                      int bcdtmUtility_testForAndSetCurrentDtmObject (BC_DTM_OBJ **dtmPP, WCharCP dtmFileP); 
BENTLEYDTM_Public                      int bcdtmUtility_writeStatisticsDtmObject (BC_DTM_OBJ *dtmP); 

///////// bcdtmUtl/////////
BENTLEYDTM_Public                   double bcdtmUtl_adjustValueDown (double Val, double Vreg, double Vinc); 
BENTLEYDTM_Public                   double bcdtmUtl_adjustValueUp (double Val, double Vreg, double Vinc); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_checkInteger (char *istr); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_checkReal (char *istr); 
BENTLEYDTM_Public                      int bcdtmUtl_copy3DTo3D (DPoint3d *Points3D, long NumPoints, DPoint3d **NewPoints3D); 
BENTLEYDTM_Public                      int bcdtmUtl_decodeDataRecord (char *inbuf, long *fc, double *x, double *y, double *z); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_decodeXYZRecord (char *inbuf, double *x, double *y, double *z); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_detectDataFileType (WCharCP fileName, long *fileType, long *fileEntries, long *fileDecPlaces); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_detectXYZFileType (WCharCP fileName, long *fileType, long *fileEntries); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_freeMemory (void **Pointer); 
BENTLEYDTM_Public                      int bcdtmUtl_getDateAndTime (char *dstr, char *tstr); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_getNextString (char **sptr, char *string); 
BENTLEYDTM_Public                   double bcdtmUtl_getTrgMax (double x[]); 
BENTLEYDTM_Public                   double bcdtmUtl_getTrgMin (double x[]); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_mallocMemory (void **Pointer, long MemoryAmount); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_setCurrentDataFileName (WCharCP DataFile); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_setCurrentLatticeFileName (WCharCP LatticeFile); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_setCurrentLatticeObject (DTM_LAT_OBJ *Lattice, WCharCP LatticeFile); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_setCurrentTinFileName (WCharCP TinFile); 
BENTLEYDTM_EXPORT                      int bcdtmUtl_testForAndSetCurrentLatticeObject (DTM_LAT_OBJ **Lattice, WCharCP LatticeFile); 
BENTLEYDTM_Public                      int bcdtmUtl_writeStatisticsLatticeObject (DTM_LAT_OBJ *Lattice); 

///////// bcdtmVisibility/////////
BENTLEYDTM_Private                     int bcdtmVisibility_addHorizonLineToActiveList (long **activeHorLinesPP, long *numActiveHorLinesP, long *memActiveHorLinesP, long horLineOffset); 
BENTLEYDTM_Private                     int bcdtmVisibility_addHorizonListEntiesToHorizonIndexList (long **horIndexPP, long *numHorIndexP, long *memHorIndexP, long *horListP, long numHorList); 
BENTLEYDTM_Private                     int bcdtmVisibility_buildDistanceIndexFromHorizonTable (DTM_HORIZON_LINE *horLinesP, long numHorLines, DTM_HORIZON_DISTANCE **horDistPP, long *numHorDistP); 
BENTLEYDTM_Private                     int bcdtmVisibility_buildHorizonLineIndexFromHorizonLineTable (DTM_HORIZON_LINE *horLinesP, long numHorLines, DTM_HORIZON_LINE_INDEX **horLinesIndexPP, long *numHorLinesIndexP, long **horLinesIndexListP, long *numHorLinesIndexListP, long *memHorLinesIndexListP); 
BENTLEYDTM_Private                     int bcdtmVisibility_buildHorizonTableFromDtmObject (BC_DTM_OBJ *dataDtmP, double Xe, double Ye, DTM_HORIZON_LINE **horLinesPP, long *numHorLinesP, long *memHorLinesP); 
BENTLEYDTM_Private                     int bcdtmVisibility_buildVisibilityTablesForDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze); 
BENTLEYDTM_Private                     int bcdtmVisibility_calculateHorizonLineIntercept (DTM_HORIZON_LINE *hLineP, double Xe, double Ye, double Angle, double Radius, double *x, double *y, double *z); 
BENTLEYDTM_Private                     int bcdtmVisibility_calculateHorizonLineTriangleEdgeIntersection (BC_DTM_OBJ *dtmP, DTMDirection direction, long P1, long P2, long P3, double X1, double Y1, double X2, double Y2, double *X3, double *Y3); 
BENTLEYDTM_Private                     int bcdtmVisibility_calculateIntersectionLineBetweenPlanes (double Xval, double Zmin, double Zmax, double A0, double B0, double C0, double D0, double A1, double B1, double C1, double D1, double *X1, double *Y1, double *Z1, double *X2, double *Y2, double *Z2); 
BENTLEYDTM_Private                     int bcdtmVisibility_calculateRegionVisibilityBreakLinesDtmObject (BC_DTM_OBJ *dtmP, BC_DTM_OBJ *dtmDataP, long P1, long P2, long P3, long numHorLines, DTM_HORIZON_LINE_INDEX *horLineIndexP, long numHorLineIndex, long *horLineIndexListP); 
BENTLEYDTM_Private                     int bcdtmVisibility_checkAngleSequenceVisibilityLine (DTM_HORIZON_LINE *horLinesP, long numHorLines, long normalFlag, double angle); 
BENTLEYDTM_Private                     int bcdtmVisibility_checkHorizonLineIntersectsTriangle (BC_DTM_OBJ *dtmP, long P1, long P2, long P3, double X1, double Y1, double X2, double Y2); 
BENTLEYDTM_Private                     int bcdtmVisibility_checkLengthVisibilityLine (DTM_HORIZON_LINE *horLinesP, long numHorLines, double length); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_createVisibilityLatticeDtmObject (BC_DTM_OBJ *dtmP, DTM_LAT_OBJ **latticePP, long numLatticePts, double Xe, double Ye, double Ze, double zOffset);
BENTLEYDTM_Private                     int bcdtmVisibility_determineIfHorizonLineIsCovered (double Xe, double Ye, DTM_HORIZON_LINE *hLine1P, DTM_HORIZON_LINE *hLine2P); 
BENTLEYDTM_Private                     int bcdtmVisibility_determineLineVisibilityUsingVisibilityTables (DTM_HORIZON_LINE *horLinesP, long numHorLines, DTM_HORIZON_LINE_INDEX *horLinesIndexP, long numHorLinesIndex, long *horIndexListP, double Xe, double Ye, double Ze, double X1, double Y1, double Z1, double X2, double Y2, double Z2, long *lineVisibilityP);
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineLineVisibiltyDtmFile (WCharCP dtmFileP, double Xe, double Ye, double Ze, double X1, double Y1, double Z1, double X2, double Y2, double Z2, long *isVisibleP, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineLineVisibiltyDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, double X1, double Y1, double Z1, double X2, double Y2, double Z2, long *isVisibleP, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determinePointVisibilityDtmFile (WCharCP dtmFileP, double Xe, double Ye, double Ze, double Xp, double Yp, double Zp, long *IsVisible); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determinePointVisibilityDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, double Xp, double Yp, double Zp, long *isVisibleP); 
BENTLEYDTM_Private                     int bcdtmVisibility_determinePointVisibilityUsingVisibilityTables (DTM_HORIZON_LINE *horLinesP, long numHorLines, DTM_HORIZON_LINE_INDEX *horLinesIndexP, long numHorLinesIndex, long *horLinesIndexListP, double Xe, double Ye, double Ze, double x, double y, double z, long *visibilityP); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineRadialViewShedsDtmFile (WCharCP dtmFileP, double Xe, double Ye, double Ze, long viewShedOption, long numberRadials, double radialIncrement, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineRadialViewShedsDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, long viewShedOption, long numberRadials, double radialIncrement, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineRadialVisibilityDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, double Xp, double Yp, double Zp, int (*loadFunctionP) (), void *userP);
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineRegionViewShedsDtmFile (WCharCP dtmFileP, DTMFeatureCallback loadFunctionP, double Xe, double Ye, double Ze, void *userP); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineRegionViewShedsDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_Private                     int bcdtmVisibility_determineVisibilityDirectionOfTriangleDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, long P1, long P2, long P3, long *visibilityDirectionP); 
BENTLEYDTM_Private                     int bcdtmVisibility_determineVisibilityOfEdge (double Xe, double Ye, double Ze, double X1, double Y1, double Z1, double X2, double Y2, double Z2, double X3, double Y3, double Z3, double X4, double Y4, double Z4, long *Visibility, DPoint3d Point[]); 
BENTLEYDTM_Private                     int bcdtmVisibility_determineVisibilityOfPoint (double Xe, double Ye, double Ze, double X1, double Y1, double Z1, double X2, double Y2, double Z2, double x, double y, double z, long *visibilityP); 
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineVisibilityTinLinesDtmFile (WCharCP dtmFileP, double Xe, double Ye, double Ze, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineVisibilityTinLinesDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineVisibilityTinPointsDtmFile (WCharCP dtmFileP, double Xe, double Ye, double Ze, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_EXPORT                      int bcdtmVisibility_determineVisibilityTinPointsDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, DTMFeatureCallback loadFunctionP, void *userP);
BENTLEYDTM_Private                     int bcdtmVisibility_distanceIndexCompareFunction (const void *Cp1, const void *Cp2); 
BENTLEYDTM_Private                     int bcdtmVisibility_findHorizonLine (DTM_HORIZON_LINE *horLinesP, long numHorLines, double x, double y, long *horLineOffsetP); 
BENTLEYDTM_Private                     int bcdtmVisibility_findHorizonLineEntryListUsingHorizonLineIndex (DTM_HORIZON_LINE_INDEX *horLineIndexP, long numHorLineIndex, long *horLineIndexListP, double angle, long *horLineOffsetP); 
BENTLEYDTM_Private                     int bcdtmVisibility_findHorizonLineOffsetUsingAngleIndex (void *angleIndexP, long numAngleIndex, double angleLow, double angleHigh, long *hLineOffsetP); 
BENTLEYDTM_Private                     int bcdtmVisibility_freeHorizonLineArrays (void); 
BENTLEYDTM_Private                     int bcdtmVisibility_freeLosVertices (void); 
BENTLEYDTM_Public                      int bcdtmVisibility_freeMemory (void); 
BENTLEYDTM_Private                     int bcdtmVisibility_fudgeLineVisibility (long *Vline); 
BENTLEYDTM_Private                     int bcdtmVisibility_getLastVisibleSectionOfSurfaceLineBetweenEyeAndHorizonLineDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, double Xh, double Yh, double Zh, double *Xp, double *Yp, double *Zp); 
BENTLEYDTM_Private                     int bcdtmVisibility_horizonLineIndexCompareFunction (const void *Cp1, const void *Cp2); 
BENTLEYDTM_Private                     int bcdtmVisibility_horizonPointsAngleCompareFunction (const void *Cp1, const void *Cp2); 
BENTLEYDTM_Private                  double bcdtmVisibility_interpolateZOnLineOfSight (double Xe, double Ye, double Ze, double Xp, double Yp, double Zp, double x, double y); 
BENTLEYDTM_Private                     int bcdtmVisibility_polygoniseAndLoadRegionVisibilityFromDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, DTM_HORIZON_LINE_INDEX *horLinesIndexP, long numHorLinesIndex, long *horIndexListP, DTMFeatureCallback loadFunctionP, void *userP); 
BENTLEYDTM_Private                     int bcdtmVisibility_refineTinForRegionVisibilityDtmObject (BC_DTM_OBJ *dtmP, double Xe, double Ye, double Ze, DTM_HORIZON_LINE_INDEX *horLineIndexP, long numHorLineIndex, long *horIndexListP); 
BENTLEYDTM_Private                     int bcdtmVisibility_removeHorizonLineFromActiveList (long *activeHorLinesP, long *numActiveHorLinesP, long horLineOffset); 
BENTLEYDTM_Private                     int bcdtmVisibility_removeInvisibleHorizonLines (DTM_HORIZON_LINE **horLinesPP, long *numHorLinesP, DTM_HORIZON_LINE_INDEX **horLinesIndexPP, long *numHorLinesIndexP, long **horIndexListPP, long *numHorIndexListP, long *memHorIndexListP, double Xe, double Ye, double Ze); 
BENTLEYDTM_Private                     int bcdtmVisibility_removeTotallyInvisibleHorizonLines (DTM_HORIZON_LINE **horLinesPP, long *numHorLinesP, double Xe, double Ye, double Ze); 
BENTLEYDTM_Private                     int bcdtmVisibility_storeLineInHorizonTable (DTM_HORIZON_LINE **horLinesPP, long *numHorLinesP, long *memHorLinesP, double Ang1, double Ang2, double D1, double D2, double X1, double Y1, double Z1, double X2, double Y2, double Z2); 
BENTLEYDTM_Private                     int bcdtmVisibility_storePointInHorizonTable (DTM_HORIZON_LINE **horLinesPP, long *numHorLinesP, long *memHorLinesP, double Ang1, double Ang2, double D1, double D2, double X1, double Y1, double Z1, double X2, double Y2, double Z2);
BENTLEYDTM_Private                     int bcdtmVisibility_storeVertice (long actionFlag, long visibility, double x, double y, double z); 
BENTLEYDTM_Private                     int bcdtmVisibility_testForCoveringHorizonLineOfTriangle (DTM_HORIZON_LINE *hLineP, double Xe, double Ye, double minAngle, double maxAngle, double X1, double Y1, double X2, double Y2, double X3, double Y3, long *coverFlagP); 
BENTLEYDTM_Private                     int bcdtmVisibility_writeHorizonLines (DTM_HORIZON_LINE *horPtsP, long numHorPts); 
BENTLEYDTM_Private                     int bcdtmVisibility_writeVisibilityPoints (long *visFlagP, DPoint3d *visPtsP, long numVisPts); 

///////// bcdtmWrite/////////
BENTLEYDTM_EXPORT                      int bcdtmWrite_asciiGeopakDatFileFromDtmObject (BC_DTM_OBJ *dtmP, WCharCP datFileNameP, long numDecPts);
BENTLEYDTM_EXPORT                      int bcdtmWrite_atFilePositionDtmObject (BC_DTM_OBJ *dtmP, FILE *dtmFP, long filePosition); 
BENTLEYDTM_EXPORT                      int bcdtmWrite_atFilePositionGeopakObjectDtmObject (BC_DTM_OBJ *dtmP, FILE *dtmFP, long filePosition);
BENTLEYDTM_Public                      int bcdtmWrite_binaryFileP3D (WCharCP FileName, DPoint3d *DataPts, long numPts); 
BENTLEYDTM_EXPORT                      int bcdtmWrite_checkDtmFeatureFile (WCharCP dtmFileNameP);
BENTLEYDTM_EXPORT                      int bcdtmWrite_contoursToDtmFeatureFileDtmFile (WCharCP dtmFileNameP, WCharCP dtmFeatureFileNameP, long fileOption, double contourInterval);
BENTLEYDTM_EXPORT                      int bcdtmWrite_contoursToDtmFeatureFileDtmObject (BC_DTM_OBJ *dtmP, WCharCP dtmFeatureFileNameP, long fileOption, double contourInterval);
BENTLEYDTM_Public                      int bcdtmWrite_dataFileFromP3DArray (WCharCP FileName, DPoint3d *DataPts, long numPts, DTMFeatureType dtmFeatureType); 
BENTLEYDTM_EXPORT                      int bcdtmWrite_dtmFeatureTypeToDtmFeatureFileDtmFile (WCharCP dtmFileNameP, WCharCP dtmFeatureFileNameP, DTMFeatureType dtmFeatureType, long fileOption);
BENTLEYDTM_EXPORT                      int bcdtmWrite_dtmFeatureTypeToDtmFeatureFileDtmObject (BC_DTM_OBJ *dtmP, WCharCP dtmFeatureFileNameP, DTMFeatureType dtmFeatureType, long fileOption);
BENTLEYDTM_EXPORT                      int bcdtmWrite_geopakDatFileFromDtmObject (BC_DTM_OBJ *dtmP, WCharCP datFileNameP);
BENTLEYDTM_EXPORT                      int bcdtmWrite_latticeObject (DTM_LAT_OBJ *Lattice, WCharCP latticeFileName); 
BENTLEYDTM_Private                     int bcdtmWrite_loadDtmFeatureFunction (DTMFeatureType dtmFeatureType, DTMUserTag dtmUserTag, DTMFeatureId dtmFeatureId, DPoint3d *featurePtsP, size_t numFeaturePts, void *userP);
BENTLEYDTM_Public                      int bcdtmWrite_logMessage (long Status, char *DtmMessage, ...); 
BENTLEYDTM_EXPORT                      int bcdtmWrite_message (long MessageType, long MessageLevel, long MessageNumber, char *DtmMessage, ...); 
BENTLEYDTM_EXPORT                      int bcdtmWrite_toFileDtmObject (BC_DTM_OBJ *dtmP, WCharCP dtmFileNameP); 
BENTLEYDTM_EXPORT                      int bcdtmWrite_toFileLatticeObject (DTM_LAT_OBJ *Lattice, WCharCP LatticeFileName); 
BENTLEYDTM_Public                      int bcdtmWrite_writeAtFilePositionGeopakTinObjectDtmObject (BC_DTM_OBJ *dtmP, FILE* dtmFP, long filePosition);
BENTLEYDTM_Private                     int bcdtmWrite_xyzASCIIFileToDtmFeatureFile (WCharCP xyzFileNameP, WCharCP dtmFileNameP, long  maxPointSize);
BENTLEYDTM_Private                     int bcdtmWrite_xyzBinaryFileToDtmFeatureFile (WCharCP xyzFileNameP, WCharCP dtmFileNameP, long  maxPointSize);
BENTLEYDTM_EXPORT                      int bcdtmWrite_xyzFileToDtmFeatureFile (WCharCP xyzFileNameP, WCharCP dtmFileNameP);

///////// bcdtmWriteStream/////////
BENTLEYDTM_EXPORT                      int bcdtmWriteStream_atFilePositionDtmObject (BC_DTM_OBJ *dtmP, Bentley::TerrainModel::IBcDtmStream* dtmStreamP, long filePosition); 
BENTLEYDTM_EXPORT                      int bcdtmWriteStream_atFilePositionGeopakObjectDtmObject (BC_DTM_OBJ *dtmP, Bentley::TerrainModel::IBcDtmStream* dtmStreamP, long filePosition);
BENTLEYDTM_Private                     int bcdtmWriteStream_writeAtFilePositionGeopakDatObjectDtmObject (BC_DTM_OBJ *dtmP, Bentley::TerrainModel::IBcDtmStream* dtmStreamP, long filePosition);
BENTLEYDTM_Public                      int bcdtmWriteStream_writeAtFilePositionGeopakTinObjectDtmObject (BC_DTM_OBJ *dtmP, Bentley::TerrainModel::IBcDtmStream* dtmStreamP, long filePosition);

///////// dtmSideSlope/////////
//BENTLEYDTM_Private                     int dtmSideSlope_addActiveStringLine (DTM_STR_INT_TAB **ActIntTable, long *ActIntTableNe, long *ActIntTableMe, DTM_STR_INT_TAB *Pint); 
//BENTLEYDTM_Public                      int dtmSideSlope_adjustSlopesAndAnglesForCalculationMethod (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, long SideSlopeDirection, long CornerOption); 
//BENTLEYDTM_Public                      int dtmSideSlope_assignRadialTypesToSideSlopeTablePoints (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, long SideSlopeDirection); 
//BENTLEYDTM_Public                      int dtmSideSlope_assignSlopesAndAnglesToRadials (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, long SideSlopeDirection, DTM_SLOPE_TABLE *SlopeTable, long SlopeTableSize); 
//BENTLEYDTM_Private                     int dtmSideSlope_breakPointArrayAtKnots (DPoint3d *pointsP, long numPoints, DTM_STR_INT_PTS *knotPtsP, long numKnotPts, DTM_P3D_LINE_STRING **stringsPP, long *numStringsP); 
//BENTLEYDTM_Private                     int dtmSideSlope_buildD3dLineStringIntersectionTable (DTM_P3D_LINE_STRING* *lineStrings, long numLineStrings, DTM_STR_INT_TAB **intTable, long *intTableSize); 
//BENTLEYDTM_Public                      int dtmSideSlope_buildRadialBaseLineIntersectionTable (long SideSlopeElementType, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, DTM_STR_INT_TAB **IntTable, long *IntTableNe); 
//BENTLEYDTM_Public                      int dtmSideSlope_buildRadialEdgeIntersectionTable (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, long sideSlopeElementType, DTM_STR_INT_TAB **IntTable, long *IntTableNe); 
//BENTLEYDTM_Public                      int dtmSideSlope_buildRadialIntersectionTable (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, DTM_STR_INT_TAB **IntTable, long *IntTableNe); 
//BENTLEYDTM_Public                      int dtmSideSlope_buildRadialParallelEdgeIntersectionTable (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, DPoint3d *ParallelPts, long NumParallelPts, DTM_STR_INT_TAB **IntTable, long *IntTableNe); 
//BENTLEYDTM_Public                      int dtmSideSlope_buildSlopeToeIntersectionTable (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, DTM_STR_INT_TAB **IntTable, long *IntTableNe); 
//BENTLEYDTM_Public                      int dtmSideSlope_calculateAngleAndSlopeForCornerRadial (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, DTM_SIDE_SLOPE_TABLE *Radial, long SideSlopeDirection, long *PlaneSolution); 
//BENTLEYDTM_Public                      int dtmSideSlope_calculateAngleAndSlopeForEdgeRadial (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, DTM_SIDE_SLOPE_TABLE *Radial, long SideSlopeDirection, long *PlaneSolution); 
//BENTLEYDTM_Public                      int dtmSideSlope_calculatePlanarAngleAndSlopeForCornerRadial (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeDirection, DTM_SIDE_SLOPE_TABLE *PriorRadial, DTM_SIDE_SLOPE_TABLE *Radial, DTM_SIDE_SLOPE_TABLE *NextRadial, double *Angle, double *Slope); 
//BENTLEYDTM_Public                      int dtmSideSlope_calculatePlanarAngleAndSlopeForEdgeRadial (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeDirection, DTM_SIDE_SLOPE_TABLE *PriorRadial, DTM_SIDE_SLOPE_TABLE *Radial, DTM_SIDE_SLOPE_TABLE *NextRadial, long *PlaneSolution, double *Angle, double *Slope); 
//BENTLEYDTM_Public                      int dtmSideSlope_calculatePlaneCoefficientsForEdgeRadial (DTM_SIDE_SLOPE_TABLE *Radial1, DTM_SIDE_SLOPE_TABLE *Radial2, long SideSlopeDirection, long *PlaneSolution, double *A, double *B, double *C, double *D); 
//BENTLEYDTM_Public                      int dtmSideSlope_calculateXYAngleBetweenPlanes (double *Angle, double A0, double B0, double C0, double A1, double B1, double C1); 
//BENTLEYDTM_Public                      int dtmSideSlope_checkForInterectionOfSlopeToeWithRadialOrPadEdge (DTM_OVERLAP_RADIAL_TABLE *OvlPts, DTM_OVERLAP_RADIAL_TABLE *Ovl1, DTM_OVERLAP_RADIAL_TABLE *Ovl2, DTM_STR_INT_TAB *IntTable, long IntTableNe, long *IntFlag); 
//BENTLEYDTM_Public                      int dtmSideSlope_checkForKnotsInSideSlopeElement (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, long *KnotFlag); 
//BENTLEYDTM_Public                      int dtmSideSlope_checkForPriorTruncationOfTruncatingRadial (DTM_OVERLAP_RADIAL_TABLE *OvlPts, DTM_STR_INT_PTS *RadIntPts, long RadStartOfs, long RadEndOfs); 
//BENTLEYDTM_Public                      int dtmSideSlope_checkForSolution (long SideSlopeDirection, long RadialType, double Angle, double PriorAngle, double NextAngle, long *SolutionFound); 
//BENTLEYDTM_Private                     int dtmSideSlope_checkIfLinesIntersect (double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4); 
//BENTLEYDTM_EXPORT                      int dtmSideSlope_copyParallel3D (DPoint3d *pointsP, long numPoints, double offset, double slope, long copyMode, double cornerStrokeTolerance, DPoint3d **parallelPtsPP, long *numParallelPtsP); 
//BENTLEYDTM_Private                     int dtmSideSlope_copyParallelSideSlopeElement (DTM_SIDE_SLOPE_TABLE *sideSlopeTableP, long sideSlopeTableSize, long sideSlopeDirection, long cornerOption, double cornerStrokeTolerance, BC_DTM_OBJ* **dataObjectsPPP, long *numberOfDataObjectsP); 
//BENTLEYDTM_Private                     int dtmSideSlope_copyParallelSideSlopeElementToPointArray (DTM_SIDE_SLOPE_TABLE *sideSlopeTableP, long sideSlopeTableSize, long sideSlopeDirection, long cornerOption, double cornerStrokeTolerance, DPoint3d **paraElmemPolyPtsPP, long *numParaElmemPolyPtsP); 
//BENTLEYDTM_Private                     int dtmSideSlope_copySideSlopeElementPointsToPointArray (DTM_SIDE_SLOPE_TABLE *sideSlopeTableP, long sideSlopeTableSize, DPoint3d **elemPtsPP, long *numElemPtsP);
//BENTLEYDTM_Public                      int dtmSideSlope_copySideSlopeRadialStartPointsToPointArray (long sideSlopeElementType, DTM_OVERLAP_RADIAL_TABLE *sideSlopeRadialsP, long numSideSlopeRadials, DPoint3d **elemPtsPP, long *numElemPtsP); 
//BENTLEYDTM_Public                      int dtmSideSlope_copySideSlopeRadialToePointsToPointArray (long sideSlopeElementType, long toePointOption, DTM_OVERLAP_RADIAL_TABLE *sideSlopeRadialsP, long numSideSlopeRadials, DPoint3d **elemPtsPP, long *numElemPtsP); 
//BENTLEYDTM_Public                      int dtmSideSlope_countNumberOfDtmFeaturesAtPointDtmObject (BC_DTM_OBJ *Tin, long P, long *Count); 
//BENTLEYDTM_Public                      int dtmSideSlope_countNumberOfDtmFeatureTypeForTinPointDtmObject (BC_DTM_OBJ *Tin, long TinPoint, DTMFeatureType dtmFeatureType, long *NumberOfFeatures); 
//BENTLEYDTM_Public                      int dtmSideSlope_createRadialOverlapTable (long sideSlopeElementType, DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, DTM_OVERLAP_RADIAL_TABLE **Radials, long *NumRadials); 
//BENTLEYDTM_Public                      int dtmSideSlope_createSideSlopes (DTM_SIDE_SLOPE_TABLE **SideSlopeTable, long *SideSlopeTableSize, long SideSlopeDirection, DTM_SLOPE_TABLE *SlopeTable, long SlopeTableSize, long CornerOption, long StrokeCorners, double CornerStrokeTolerance, double Pptol); 
//BENTLEYDTM_Public                      int dtmSideSlope_createSideSlopesForActiveRadials (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, long SideSlopeDirection, DTM_SLOPE_TABLE *SlopeTable, long SlopeTableSize, long CornerOption, long StrokeCorners, double CornerStrokeTolerance, double Pptol, DPoint3d *ParallelEdgePts, long NumParallelEdgePts, DTMUserTag UserRadialTag, DTMUserTag UserElementTag, BC_DTM_OBJ* **DataObjects, long *NumberOfDataObjects); 
//BENTLEYDTM_EXPORT                      int dtmSideSlope_createSideSlopesForSideSlopeTableDtmObject (DTM_SIDE_SLOPE_TABLE **SideSlopeTable, long *SideSlopeTableSize, long SideSlopeDirection, DTM_SLOPE_TABLE *SlopeTable, long SlopeTableSize, long CornerOption, long StrokeCorners, double CornerStrokeTolerance, double Pptol, DPoint3d *ParallelEdgePts, long NumParallelEdgePts, DTMUserTag UserRadialTag, DTMUserTag UserElementTag, BC_DTM_OBJ* **DataObjects, long *NumberOfDataObjects); 
//BENTLEYDTM_Private                     int dtmSideSlope_deleteActiveStringLines (DTM_STR_INT_TAB *ActIntTable, long *ActIntTableNe, DTM_STR_INT_TAB *Pint); 
//BENTLEYDTM_Public                      int dtmSideSlope_deleteDuplicateSideSlopeElementPoints (DTM_SIDE_SLOPE_TABLE *Points, long *numPts, double Pptol); 
//BENTLEYDTM_Private                     int dtmSideSlope_detectAndFixBreaksInSlopeToes (BC_DTM_OBJ *tinP); 
//BENTLEYDTM_Private                     int dtmSideSlope_detectKnotsPointArray (DPoint3d *lineString, long sizeLineString, DTM_STR_INT_PTS **knotPoints, long *numKnotPoints); 
//BENTLEYDTM_Private                     int dtmSideSlope_detectStringIntersections (DTM_P3D_LINE_STRING* *lineStrings, long numLineStrings, DTM_STR_INT_PTS **intPoints, long *numIntPoints); 
//BENTLEYDTM_Public                      int dtmSideSlope_determineActiveRadialBaseLineIntersections (DTM_STR_INT_TAB *ActIntTable, long ActIntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Private                     int dtmSideSlope_determineActiveStringLineIntersections (DTM_STR_INT_TAB *ActIntTable, long ActIntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_determineRadialEdgeIntersections (DTM_STR_INT_TAB *ActIntTable, long ActIntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_determineRadialIntersections (DTM_STR_INT_TAB *ActIntTable, long ActIntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_determineRadialParallelEdgeIntersections (DTM_STR_INT_TAB *ActIntTable, long ActIntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_determineSlopeToeIntersections (DTM_STR_INT_TAB *ActIntTable, long ActIntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_extendHorizontalLimitForCornerRadials (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, long SideSlopeDirection); 
//BENTLEYDTM_Public                      int dtmSideSlope_extendRadialsAtTransistionPoints (long SideSlopeElementType, DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, double RadialExtension); 
//BENTLEYDTM_Public                      int dtmSideSlope_extractBenchesFromSlopeToesAndStoreInSeparateDataObjects (BC_DTM_OBJ *Tin, BC_DTM_OBJ *SideSlopes, BC_DTM_OBJ* **DataObjects, long *NumberOfDataObjects); 
//BENTLEYDTM_Private                     int dtmSideSlope_findFirstIntersectionWithSideSlopeRadial (DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts, long direction, double slopeToe1X, double slopeToe1Y, double slopeToe1Z, double slopeToe2X, double slopeToe2Y, double slopeToe2Z, DTM_OVERLAP_RADIAL_TABLE *startP, DTM_OVERLAP_RADIAL_TABLE *endP, long *intersectionFoundP, double *intXP, double *intYP, double *intZP); 
//BENTLEYDTM_Public                      int dtmSideSlope_findFirstNextNonTruncatedPadToePoint (long sideSlopeElementType, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_OVERLAP_RADIAL_TABLE *Ovl, DTM_OVERLAP_RADIAL_TABLE **Ovn); 
//BENTLEYDTM_Private                     int dtmSideSlope_findFirstNonTruncatedRadial (DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts, long padType, DTM_OVERLAP_RADIAL_TABLE *ovlP, DTM_OVERLAP_RADIAL_TABLE **ovnPP); 
//BENTLEYDTM_Public                      int dtmSideSlope_findFirstPriorNonTruncatedPadToePoint (long sideSlopeElementType, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_OVERLAP_RADIAL_TABLE *Ovl, DTM_OVERLAP_RADIAL_TABLE **Ovp); 
//BENTLEYDTM_Private                  double dtmSideSlope_getAngle (double x1, double y1, double x2, double y2); 
//BENTLEYDTM_Private                     int dtmSideSlope_getBoundaryPolygonAndSlopeToesForClosedSideSlopeElementDataObject (BC_DTM_OBJ *sideSlopesP, long sideSlopeElementType, long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials); 
//BENTLEYDTM_Private                     int dtmSideSlope_getBoundaryPolygonAndSlopeToesForOpenSideSlopeElementDataObject (BC_DTM_OBJ *sideSlopesP, long sideSlopeElementType, long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials); 
//BENTLEYDTM_Private                     int dtmSideSlope_getExternalSlopeToesForClosedSideSlopeElementDataObject (BC_DTM_OBJ *sideSlopesP, long sideSlopeElementType, long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials); 
//BENTLEYDTM_Private                     int dtmSideSlope_getInternalSlopeToesForClosedSideSlopeElementDataObject (BC_DTM_OBJ *sideSlopesP, long sideSlopeElementType, long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials); 
//BENTLEYDTM_Public                      int dtmSideSlope_getNextInterceptDtmObject (BC_DTM_OBJ *Tin, double Px, double Py, long *Ptype, double Ex, double Ey, long *P1, long *P2, long *P3, double *Nx, double *Ny, double *Nz); 
//BENTLEYDTM_Private                     int dtmSideSlope_getPolygonDirection (DPoint3d *polyPtsP, long numPolyPts, long *directionP, double *areaP); 
//BENTLEYDTM_Public                      int dtmSideSlope_getPolygonFromClosedSideSlopeElementToes (DTMDirection direction, DTM_OVERLAP_RADIAL_TABLE **sideSlopeRadialsPP, long *numSideSlopeRadialsP, DPoint3d **hullPtsPP, long *numHullPtsP); 
//BENTLEYDTM_Public                      int dtmSideSlope_getPolygonFromClosedSideSlopeElementToesOld (DTMDirection direction, DTM_OVERLAP_RADIAL_TABLE *sideSlopeRadialsP, long numSideSlopeRadials, DPoint3d **hullPtsPP, long *numHullPtsP); 
//BENTLEYDTM_Public                      int dtmSideSlope_getPolygonFromOpenSideSlopeElementToes (long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials, DPoint3d **hullPtsPP, long *numHullPtsP, BC_DTM_OBJ **tinPP); 
//BENTLEYDTM_Private                     int dtmSideSlope_getReflexRadialAngleAndSlopeForLimit (DTM_SIDE_SLOPE_TABLE *sideSlopeTableP, long sideSlopeTableSize, DTM_SIDE_SLOPE_TABLE *radialP, long sideSlopeDirection, double *radialSlopesP, double *angleP, double *slopeP, double *horRatioP); 
//BENTLEYDTM_Public                      int dtmSideSlope_getSideSlopeElementDirection (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, DTMDirection* direction, double *Area); 
//BENTLEYDTM_Private                     int dtmSideSlope_insertIntersectionPointsIntoLineStrings (DTM_P3D_LINE_STRING* *lineStrings, DTM_STR_INT_PTS *intPoints, long numIntPoints); 
//BENTLEYDTM_Private                     int dtmSideSlope_insertKnots (DPoint3d *lineString, long sizeLineString, DTM_STR_INT_PTS **knotPoints, long *numKnotPoints); 
//BENTLEYDTM_Public                      int dtmSideSlope_insertNormalRadialsAtConcaveCorners (DTM_SIDE_SLOPE_TABLE **sideSlopeTablePP, long *sideSlopeTableSizeP, double p2pTol); 
//BENTLEYDTM_Public                      int dtmSideSlope_insertNormalRadialsAtConvexCorners (DTM_SIDE_SLOPE_TABLE **SideSlopeTable, long *SideSlopeTableSize); 
//BENTLEYDTM_Private                     int dtmSideSlope_insertStringIntersections (DTM_P3D_LINE_STRING* *lineStrings, long numLineStrings, DTM_STR_INT_PTS **intPoints, long *numIntPoints); 
//BENTLEYDTM_Public                      int dtmSideSlope_insertTransitionVerticesForSlopeToObject (DTM_SIDE_SLOPE_TABLE **SideSlopeTable, long *SideSlopeTableSize, double Pptol); 
//BENTLEYDTM_Public                      int dtmSideSlope_insertVerticesAtCutFillTransitions (DTM_SIDE_SLOPE_TABLE **SideSlopeTable, long *SideSlopeTableSize, double Pptol); 
//BENTLEYDTM_Public                      int dtmSideSlope_insertVerticesAtElevationTransitions (DTM_SIDE_SLOPE_TABLE **SideSlopeTable, long *SideSlopeTableSize); 
//BENTLEYDTM_Private                     int dtmSideSlope_intersectionPointsCompareFunction (const DTM_STR_INT_PTS *Tp1, const DTM_STR_INT_PTS *Tp2); 
//BENTLEYDTM_Private                     int dtmSideSlope_intersectionTableCompareFunction (const DTM_STR_INT_TAB *Tp1, const DTM_STR_INT_TAB *Tp2); 
//BENTLEYDTM_Public                      int dtmSideSlope_intersectRadialsWithSurface (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, long Status); 
//BENTLEYDTM_Public                      int dtmSideSlope_intersectSideSlopeRadials (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, long sideSlopeElementType, long *RadialIntersectFlag); 
//BENTLEYDTM_Public                      int dtmSideSlope_intersectSideSlopeRadialsWithBaseLines (long sideSlopeElementType, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts); 
//BENTLEYDTM_EXPORT                      int dtmSideSlope_intersectSurfaceDtmObject (BC_DTM_OBJ *Tin, double Sx, double Sy, double Sz, double Angle, double Slope, long SideSlopeFlag, double EndValue, double *Lx, double *Ly, double *Lz, long *StartFlag, long *EndFlag); 
//BENTLEYDTM_Private                  double dtmSideSlope_lengthOfNonKnotSection (DPoint3d *linePtsP, long *knotFlagP, long *l1P, long *l2P); 
//BENTLEYDTM_Private                     int dtmSideSlope_limitFindFirstNonTruncatedSlopeToe (DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts, long padType, DTM_OVERLAP_RADIAL_TABLE *radP, DTM_OVERLAP_RADIAL_TABLE *ovlP, DTM_OVERLAP_RADIAL_TABLE *ovnP, long *intersectionFoundP, double *xIntP, double *yIntP, double *zIntP); 
//BENTLEYDTM_Public                      int dtmSideSlope_markInactiveDeltaVerticalRadials (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize); 
//BENTLEYDTM_Private                     int dtmSideSlope_markTruncatedRadials (DTM_OVERLAP_RADIAL_TABLE *radialTableP, long radialTableSize); 
//BENTLEYDTM_Private                  double dtmSideSlope_normalDistanceToLine (double X1, double Y1, double X2, double Y2, double x, double y); 
//BENTLEYDTM_Private                     int dtmSideSlope_normalIntersectLines (double X1, double Y1, double X2, double Y2, double X3, double Y3, double X4, double Y4, double *Xi, double *Yi); 
//BENTLEYDTM_Private                     int dtmSideSlope_normalisePointArray (DPoint3d *pointsP, long numPts); 
//BENTLEYDTM_Private                     int dtmSideSlope_offsetCopyPointArray3D (DPoint3d *pointsP, long numPoints, double offset, double slope, long copyMode, double cornerStrokeTolerance, DPoint3d **parallelPtsPP, long *numParallelPtsP); 
//BENTLEYDTM_Private                     int dtmSideSlope_projectVectorStartToHullDtmObject (BC_DTM_OBJ *tinP, double Sx, double Sy, double Sz, double xyAngle, double slope, double *Hx, double *Hy, double *Hz); 
//BENTLEYDTM_Public                      int dtmSideSlope_pullSideSlopePointsOntoTin (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize); 
//BENTLEYDTM_Public                      int dtmSideSlope_radialRadialIntersectionPointsCompareFunction (const DTM_STR_INT_PTS *Tp1, const DTM_STR_INT_PTS *Tp2); 
//BENTLEYDTM_Private                     int dtmSideSlope_remove3DKnotsFromLineString (DPoint3d **linePtsPP, long *numLinePtsP, DTM_STR_INT_PTS *intPtsP, long numIntPts); 
//BENTLEYDTM_Public                      int dtmSideSlope_removeActiveIntersectionPointsForRadialFromOffset (long Radial, DTM_STR_INT_PTS *IntPts, long NumIntPts, long Offset, long *IntIndex); 
//BENTLEYDTM_Public                      int dtmSideSlope_removeAdjacentRadialsToConvexRadials (long sideSlopeElementType, DTM_OVERLAP_RADIAL_TABLE *radialsP, long *numRadialsP, double tolerance, long *numRemovedP); 
//BENTLEYDTM_Public                      int dtmSideSlope_removeAdjacentSideSlopeRadialsWithinTolerance (DTM_OVERLAP_RADIAL_TABLE *Radials, long *NumRadials, double Tolerance); 
//BENTLEYDTM_Private                     int dtmSideSlope_removeBreakLineSegmentAtTinPointDtmObject (BC_DTM_OBJ *Tin, long P); 
//BENTLEYDTM_Private                     int dtmSideSlope_removeBreakLineSegmentDtmObject (BC_DTM_OBJ *tinP, long pnt1, long pnt2); 
//BENTLEYDTM_Private                     int dtmSideSlope_removeDanglingBreaksDtmObject (BC_DTM_OBJ *Tin); 
//BENTLEYDTM_Private                     int dtmSideSlope_removeDuplicatesPointArray (DPoint3d *lineString, long *sizeLineString, double pptol); 
//BENTLEYDTM_Private                     int dtmSideSlope_removeExternalLoopsFromBoundaryDtmObject (BC_DTM_OBJ *tinP); 
//BENTLEYDTM_Private                     int dtmSideSlope_removeKnots (DPoint3d **linePtsPP, long *numLinePtsP, DTM_STR_INT_PTS **knotPtsPP, long *numKnotPtsP); 
//BENTLEYDTM_Private                     int dtmSideSlope_removeLimitDanglingBreaksDtmObject (BC_DTM_OBJ *tinP); 
//BENTLEYDTM_Public                      int dtmSideSlope_removeType2RadialsCoincicidentWithType1 (DTM_OVERLAP_RADIAL_TABLE **sideSlopeRadialsPP, long *numSideSlopeRadialsP); 
//BENTLEYDTM_Public                      int dtmSideSlope_reorderSideSlopeRadials (DTM_OVERLAP_RADIAL_TABLE *radialsP, long numRadials, DTM_OVERLAP_RADIAL_TABLE *firstRadialP); 
//BENTLEYDTM_Public                      int dtmSideSlope_reorderSideSlopeTable (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize); 
//BENTLEYDTM_Public                      int dtmSideSlope_resolveOverlappingSideSlopeRadials (DTM_SIDE_SLOPE_TABLE *RightSideSlopeTable, long RightSideSlopeTableSize, DTM_SIDE_SLOPE_TABLE *LeftSideSlopeTable, long LeftSideSlopeTableSize, DPoint3d *ParallelEdgePts, long NumParallelEdgePts, long SideDirection, double CornerTolerance, double RadialExtension, DTMUserTag RadialTag, DTMUserTag ElementTag, double Pptol, double Pltol, BC_DTM_OBJ *SideSlopes); 
//BENTLEYDTM_Public                      int dtmSideSlope_reverseOrderOfSideSlopeRadials (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts); 
//BENTLEYDTM_Private                     int dtmSideSlope_reversePolygonDirection (DPoint3d *polyPtsP, long numPolyPts); 
//BENTLEYDTM_Public                      int dtmSideSlope_reverseSideSlopeTableDirection (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize); 
//BENTLEYDTM_Public                      int dtmSideSlope_scanForRadialBaseLineIntersections (DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_scanForRadialEdgeIntersections (DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_scanForRadialIntersections (DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_scanForRadialParallelEdgeIntersections (DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_scanForSlopeToeIntersections (DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Private                     int dtmSideSlope_scanForStringLineIntersections (DTM_STR_INT_TAB *IntTable, long IntTableNe, DTM_STR_INT_PTS **IntPts, long *IntPtsNe, long *IntPtsMe, long IntPtsMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_setElevationOfIntersectedSideSlopeRadials (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts); 
//BENTLEYDTM_Private                     int dtmSideSlope_setForceSlopeForSegmentsNotOnTin (DTM_SIDE_SLOPE_TABLE *sideSlopeTableP, long sideSlopeTableSize); 
//BENTLEYDTM_Private                     int dtmSideSlope_setForceSlopeForVerticesNotOnTin (DTM_SIDE_SLOPE_TABLE *sideSlopeTableP, long sideSlopeTableSize, long sideSlopeDirection, long closeFlag); 
//BENTLEYDTM_Public                     void dtmSideSlope_setIntersectedSideSlopeRadialElevation (DTM_OVERLAP_RADIAL_TABLE *Ovl, DTM_OVERLAP_RADIAL_TABLE *Ovl1, DTM_OVERLAP_RADIAL_TABLE *Ovl2); 
//BENTLEYDTM_Private                     int dtmSideSlope_sideOf (double x1, double y1, double x2, double y2, double x3, double y3); 
//BENTLEYDTM_Private                     int dtmSideSlope_storePoint (double x, double y, double z, DPoint3d **pointsPP, long *numPtsP, long *memPtsP, long memPtsInc); 
//BENTLEYDTM_Public                      int dtmSideSlope_storeRadialBaseLineInRadialBaseLineIntersectionTable (long Ofs1, long Ofs2, long Type, long direction, double X1, double Y1, double Z1, double X2, double Y2, double Z2, DTM_STR_INT_TAB **IntTable, long *IntTableNe, long *IntTableMe, long IntTableMinc); 
//BENTLEYDTM_Public                      int dtmSideSlope_strokeConvexCorners (DTM_SIDE_SLOPE_TABLE **SideSlopeTable, long *SideSlopeTableSize, long SideSlopeDirection, long CornerOption, double CornerStrokeTolerance); 
//BENTLEYDTM_Public                      int dtmSideSlope_truncateElementRadialsWithElementEndRadials (long SideDirection, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts); 
//BENTLEYDTM_Public                      int dtmSideSlope_truncateIntersectedSideSlopeRadials (long direction, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts); 
//BENTLEYDTM_Public                      int dtmSideSlope_truncateRadialsInsideTruncatedSlopeToe (DTM_OVERLAP_RADIAL_TABLE *radialsP, long numRadials, long sideSlopeElementType); 
//BENTLEYDTM_Public                      int dtmSideSlope_truncateRadialsUsingIntersectionPoints (long sideSlopeElementType, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, DTM_STR_INT_PTS *IntPts, long NumIntPts); 
//BENTLEYDTM_Private                     int dtmSideSlope_truncateRadialsWithToePointsInsideSlopeToe (DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts, long direction); 
//BENTLEYDTM_Public                      int dtmSideSlope_truncateSideSlopeRadial (DTM_OVERLAP_RADIAL_TABLE *OvlPts, DTM_OVERLAP_RADIAL_TABLE *Ovl1, DTM_OVERLAP_RADIAL_TABLE *Ovl2, DTM_OVERLAP_RADIAL_TABLE *Ovl3, long Flag); 
//BENTLEYDTM_Public                      int dtmSideSlope_truncateSideSlopeRadialsAtPadEdge (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, long sideSlopeElementType); 
//BENTLEYDTM_Public                      int dtmSideSlope_truncateSideSlopeRadialsAtParallelBoundaryEdge (DPoint3d *PadPts, long NumPadPts, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long *NumOvlPts); 
//BENTLEYDTM_Public                      int dtmSideSlope_truncateTruncatingRadials (DTM_OVERLAP_RADIAL_TABLE *radialsP, long numRadials); 
//BENTLEYDTM_Public                      int dtmSideSlope_validateSideSlopeElement (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long *SideSlopeTableSize, double Pptol); 
//BENTLEYDTM_Private                     int dtmSideSlope_writeClosedSideSlopeElementBoundaryPolygonToDataObject (DTM_OVERLAP_RADIAL_TABLE *RghtRadials, long NumRghtRadials, DTM_OVERLAP_RADIAL_TABLE *LeftRadials, long NumLeftRadials, long SideDirection, BC_DTM_OBJ *SideSlopes, double Pptol, double Pltol); 
//BENTLEYDTM_Public                      int dtmSideSlope_writeElementToBinaryDTMFile (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, WCharCP DataFileP); 
//BENTLEYDTM_Private                     int dtmSideSlope_writeInternalPadHolesToDataObject (BC_DTM_OBJ *Tin, BC_DTM_OBJ *Data, long HoleDirection); 
//BENTLEYDTM_Private                     int dtmSideSlope_writeLimitInternalPadHolesToDataObject (BC_DTM_OBJ *Tin, BC_DTM_OBJ *Data, long HoleDirection); 
//BENTLEYDTM_Private                     int dtmSideSlope_writeLimitSlopeToesToDataObject (long sideSlopeType, BC_DTM_OBJ *dataP, DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts); 
//BENTLEYDTM_Private                     int dtmSideSlope_writeLimitSlopeToesToDataObjectOld (long sideSlopeType, BC_DTM_OBJ *dataP, DTM_OVERLAP_RADIAL_TABLE *ovlPtsP, long numOvlPts); 
//BENTLEYDTM_Private                     int dtmSideSlope_writeOpenSideSlopeElementBoundaryPolygonToDataObject (DTM_OVERLAP_RADIAL_TABLE *RghtRadials, long NumRghtRadials, DTM_OVERLAP_RADIAL_TABLE *LeftRadials, long NumLeftRadials, long SideDirection, BC_DTM_OBJ *SideSlopes, double Pptol, double Pltol); 
//BENTLEYDTM_Private                     int dtmSideSlope_writeOpenSideSlopeElementNoneTruncatedSlopeToesToDataObject (BC_DTM_OBJ *sideSlopesP, long sideSlopeDirection, DTM_OVERLAP_RADIAL_TABLE *rightRadialsP, long numRightRadials, DTM_OVERLAP_RADIAL_TABLE *leftRadialsP, long numLeftRadials); 
//BENTLEYDTM_Public                      int dtmSideSlope_writeOverlapRadialTableToBinaryDTMFile (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, WCharCP DataFileP); 
//BENTLEYDTM_Public                      int dtmSideSlope_writeOverlapRadialTableToDTMLogFile (DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts, char *Message); 
//BENTLEYDTM_Public                      int dtmSideSlope_writePadSideSlopeHolesToDataObject (DTM_OVERLAP_RADIAL_TABLE *LeftRadials, long NumLeftRadials, BC_DTM_OBJ *SideSlopes, double Pptol, double Pltol); 
//BENTLEYDTM_Public                      int dtmSideSlope_writeRadialsToBinaryDTMFile (DTM_SIDE_SLOPE_TABLE *SideSlopeTable, long SideSlopeTableSize, long WriteElement, WCharCP DataFileP); 
//BENTLEYDTM_Public                      int dtmSideSlope_writeSideSlopeRadialsToDataObject (long SideSlopeElementType, long SideDirection, DTM_OVERLAP_RADIAL_TABLE *RghtRadials, long NumRghtRadials, DTM_OVERLAP_RADIAL_TABLE *LeftRadials, long NumLeftRadials, DTMUserTag UserRadialTag, DTMUserTag UserElementTag, BC_DTM_OBJ *SideSlopes); 
//BENTLEYDTM_Private                     int dtmSideSlope_writeSlopeToesToDataObject (long sideSlopeElementType, BC_DTM_OBJ *Data, DTM_OVERLAP_RADIAL_TABLE *OvlPts, long NumOvlPts); 

// Allow easier code access to get the pointer to section memory.

inline DPoint3dP bcdtmMemory_getPointerP3D (BC_DTM_OBJ* dtm, DTMMemPnt num) { return (DPoint3d*)bcdtmMemory_getPointer (dtm, num); }
inline long* bcdtmMemory_getPointerOffset (BC_DTM_OBJ* dtm, DTMMemPnt num) { return (long*)bcdtmMemory_getPointer (dtm, num); }

#ifdef DEBUGMEM
DTMMemPnt bcdtmMemory_allocateDebug (BC_DTM_OBJ *dtmP, size_t size, char* file, int line);
DTMMemPnt bcdtmMemory_reallocateDebug (BC_DTM_OBJ *dtmP, DTMMemPnt partitionNumber, size_t size, char* file, int line);
void bcdtmMemory_freeDebug (BC_DTM_OBJ *dtmP, DTMMemPnt partitionNumber, char* file, int line);
#define bcdtmMemory_allocate (a, b) bcdtmMemory_allocateDebug (a, b, __FILE__, __LINE__)
#define bcdtmMemory_reallocate (a, b, c) bcdtmMemory_reallocateDebug (a, b, c, __FILE__, __LINE__)
#define bcdtmMemory_free (a, b) bcdtmMemory_freeDebug (a, b, __FILE__, __LINE__)
#endif

#ifdef XM
#include "dtm2dfnsXM.h"
#endif
#endif

