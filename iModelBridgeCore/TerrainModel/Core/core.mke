#------------------------------------------------------------------------------------
#
#     $Source: Core/core.mke $
#
#   $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------

baseDir         = $(_MakeFilePath)
PolicyFile      = $(SrcRoot)TerrainModel/privmki/AssertTerrainModelPolicy.mki
SolutionPolicyMki=$(baseDir)Core.mki

%include  mdl.mki

DLM_OBJECT_DEST       = $(terrainModelCoreObj)
DLM_NAME              = TerrainModelCore
ASSEMBLY_STRONGNAME   = 1

DependsOnHeadersCPP =\
$(TerrainModelCoreAPISrc)IDTM.h \
$(TerrainModelCoreAPISrc)bcDTM.h \
$(TerrainModelCoreAPISrc)bcDTMBaseDef.h \
$(TerrainModelCoreAPISrc)bcDTMClass.h \
$(TerrainModelCoreAPISrc)TMTransformHelper.h \
$(TerrainModelCoreAPISrc)DTMIterators.h \
$(TerrainModelCoreAPISrc)TMEditor.h \
$(baseDir)CPPWrappers\bcDTMImpl.h

DependsOnHeaders = \
$(TerrainModelCoreAPISrc)dtmdefs.h \
$(TerrainModelCoreAPISrc)PartitionArray.h 

#---------------------------------------------------------
#  Set up for signing
#---------------------------------------------------------
%ifdef todo_signing
RIGHTSCOMPLIANT = true
%include    $(SrcTerrainModel)privmki/TerrainModelSignatureDefaults.mki

%if !defined (MSJ_SKIP_SIGNRSCS) && !defined (DLM_NO_SIGN)
    %include signrightscompliantdefs.mki
    %include signrscsdefs.mki
%endif
%endif
#----------------------------------------------------------------------
#       Location for objects
#----------------------------------------------------------------------
o =% $(DLM_OBJECT_DEST)

always:
    !~@mkdir $(o)

#----------------------------------------------------------------------
#       Inform user of compile options
#----------------------------------------------------------------------
always:
        |  Compiler options: $(cDefs)$(cDefsPost) $(copt)
        |  -------- --------

MultiCompileDepends=$(_MakeFileSpec)
%include MultiCppCompileRule.mki

$(o)dtmIterators$(oext) : $(baseDir)CPPWrappers\dtmIterators.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)DTM$(oext) : $(baseDir)CPPWrappers\DTM.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)TMEditor$(oext) : $(baseDir)CPPWrappers\TMEditor.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMStream$(oext) : $(baseDir)2d\bcDTMStream.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMMemory$(oext) : $(baseDir)2d\bcDTMMemory.cpp	 $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMClass$(oext) : $(baseDir)CPPWrappers\bcDTMClass.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMDrapedLineClass$(oext) : $(baseDir)CPPWrappers\bcDTMDrapedLineClass.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMFeatureClass$(oext) : $(baseDir)CPPWrappers\bcDTMFeatureClass.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMFeatureEnumeratorClass$(oext) : $(baseDir)CPPWrappers\bcDTMFeatureEnumeratorClass.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMFeatureMapClass$(oext) : $(baseDir)CPPWrappers\bcDTMFeatureMapClass.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMInputClass$(oext) : $(baseDir)CPPWrappers\bcDTMInputClass.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcDTMMesh$(oext) : $(baseDir)CPPWrappers\bcDTMMesh.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)dtmio$(oext) : $(baseDir)2d\dtmio.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmBtree$(oext) : $(baseDir)2d\bcdtmBtree.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmCheck$(oext) : $(baseDir)2d\bcdtmCheck.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmClean$(oext) : $(baseDir)2d\bcdtmClean.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmClip$(oext) : $(baseDir)2d\bcdtmClip.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmClip1$(oext) : $(baseDir)2d\bcdtmClip1.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmConnect$(oext) : $(baseDir)2d\bcdtmConnect.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmData$(oext) : $(baseDir)2d\bcdtmData.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmDelta$(oext) : $(baseDir)2d\bcdtmDelta.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmDrape$(oext) : $(baseDir)2d\bcdtmDrape.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmEdit$(oext) : $(baseDir)2d\bcdtmEdit.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmEditDraw$(oext) : $(baseDir)2d\bcdtmEditDraw.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmFilter$(oext) : $(baseDir)2d\bcdtmFilter.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmFnd$(oext) : $(baseDir)2d\bcdtmFnd.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmGeopak$(oext) : $(baseDir)2d\bcdtmGeopak.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmGrade$(oext) : $(baseDir)2d\bcdtmGrade.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmInsert$(oext) : $(baseDir)2d\bcdtmInsert.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmInterpolate$(oext) : $(baseDir)2d\bcdtmInterpolate.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmIo$(oext) : $(baseDir)2d\bcdtmIo.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmJoin$(oext) : $(baseDir)2d\bcdtmJoin.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLattice$(oext) : $(baseDir)2d\bcdtmLattice.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLatticeVolume$(oext) : $(baseDir)2d\bcdtmLatticeVolume.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLidarFilter$(oext) : $(baseDir)2d\bcdtmLidarFilter.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmList$(oext) : $(baseDir)2d\bcdtmList.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLoadContours$(oext) : $(baseDir)2d\bcdtmLoadContours.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLoadFeatures$(oext) : $(baseDir)2d\bcdtmLoadFeatures.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLoadMesh$(oext) : $(baseDir)2d\bcdtmLoadMesh.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLos$(oext) : $(baseDir)2d\bcdtmLos.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmMark$(oext) : $(baseDir)2d\bcdtmMark.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmMath$(oext) : $(baseDir)2d\bcdtmMath.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmMem$(oext) : $(baseDir)2d\bcdtmMem.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmMerge$(oext) : $(baseDir)2d\bcdtmMerge.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmNgp$(oext) : $(baseDir)2d\bcdtmNgp.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmObj$(oext) : $(baseDir)2d\bcdtmObj.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmPatch$(oext) : $(baseDir)2d\bcdtmPatch.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmPolyContour$(oext) : $(baseDir)2d\bcdtmPolyContour.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmPolygon$(oext) : $(baseDir)2d\bcdtmPolygon.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmReport$(oext) : $(baseDir)2d\bcdtmReport.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmSideSlope$(oext) : $(baseDir)2d\bcdtmSideSlope.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmSite$(oext) : $(baseDir)2d\bcdtmSite.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmSlope$(oext) : $(baseDir)2d\bcdtmSlope.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmSort$(oext) : $(baseDir)2d\bcdtmSort.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmTheme$(oext) : $(baseDir)2d\bcdtmTheme.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmTile$(oext) : $(baseDir)2d\bcdtmTile.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmTin$(oext) : $(baseDir)2d\bcdtmTin.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmTinVolume$(oext) : $(baseDir)2d\bcdtmTinVolume.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmTrg$(oext) : $(baseDir)2d\bcdtmTrg.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmcleanup$(oext) : $(baseDir)2d\bcdtmcleanup.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmUtility$(oext) : $(baseDir)2d\bcdtmUtility.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLoadTriangles$(oext) : $(baseDir)2d\bcdtmLoadTriangles.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmLoadRegions$(oext) : $(baseDir)2d\bcdtmLoadRegions.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmStockPile$(oext) : $(baseDir)2d\bcdtmStockPile.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtm3DModel$(oext) : $(baseDir)2d\bcdtm3DModel.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmExport$(oext) : $(baseDir)2d\bcdtmExport.cpp $(DependsOnHeaders) ${MultiCompileDepends}

# New Modules

$(o)bcdtmFlags$(oext) : $(baseDir)2d\bcdtmFlags.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmString$(oext) : $(baseDir)2d\bcdtmString.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmGeopakIO$(oext) : $(baseDir)2d\bcdtmGeopakIO.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmInitialise$(oext) : $(baseDir)2d\bcdtmInitialise.cpp $(DependsOnHeaders) ${MultiCompileDepends}

$(o)bcdtmDllMain$(oext) : $(baseDir)2d\bcdtmDllMain.cpp $(DependsOnHeaders) ${MultiCompileDepends}


%include MultiCppCompileGo.mki

CoreFileObjectList =% $(MultiCompileObjectList)

# Drainage files

nameToDefine = __BENTLEYTMDRAINAGE_BUILD__
%include cdefapnd.mki

#cuser + -wd4189

%include MultiCppCompileRule.mki

$(o)bcdtmDrainage$(oext)          : $(baseDir)..\Drainage\bcdtmDrainage.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcdtmDrainageCatchment$(oext) : $(baseDir)..\Drainage\bcdtmDrainageCatchment.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcdtmDrainageFeatures$(oext)  : $(baseDir)..\Drainage\bcdtmDrainageFeatures.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcdtmDrainageList$(oext)      : $(baseDir)..\Drainage\bcdtmDrainageList.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcdtmDrainagePond$(oext)      : $(baseDir)..\Drainage\bcdtmDrainagePond.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcdtmDrainageTables$(oext)    : $(baseDir)..\Drainage\bcdtmDrainageTables.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcdtmDrainageTrace$(oext)     : $(baseDir)..\Drainage\bcdtmDrainageTrace.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}

$(o)bcdtmDrainageUtility$(oext)   : $(baseDir)..\Drainage\bcdtmDrainageUtility.cpp $(DependsOnHeaders) $(DependsOnHeadersCPP) ${MultiCompileDepends}


%include MultiCppCompileGo.mki

#----------------------------------------------------------------------
#   Link the mixed assembly
#----------------------------------------------------------------------
DLM_NAME                    = $(appName)
DLM_DEST                    = $(o)
DLM_OBJECT_FILES            = $(MultiCompileObjectList) $(CoreFileObjectList)
DLM_EXPORT_DEST             = $(o)
DLM_NOINITFUNC          = 1
DLM_NOMSBUILTINS        = 1
DLM_NO_DEF              = 1
DLM_NO_DLS              = 1
DLM_NOENTRY             = 1

LINKER_LIBRARIES = $(ContextSubpartsLibs)$(libprefix)BentleyGeom$(libext)

DLM_CONTEXT_LOCATION        = $(ContextDeliveryDir)/
DLM_LIB_CONTEXT_LOCATION    = $(ContextDeliveryDir)/
DLM_CREATE_LIB_CONTEXT_LINK = 1

%include $(sharedMki)LinkLibrary.mki
