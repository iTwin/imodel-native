<!--====================================================================================+
|
* Copyright (c) Bentley Systems, Incorporated. All rights reserved.
* See COPYRIGHT.md in the repository root for full copyright notice.
+=====================================================================================-->
<!--
***********************************************************************************************
***********************************************************************************************
-->

<Project InitialTargets="InternalMicroStationPropertiesInitialTarget" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <Target Name="InternalMicroStationPropertiesInitialTarget" DependsOnTargets="CheckForRequiredProperties">
        <Message Importance="high" Text="[== Importing Internal.MicroStation.properties ==]" Condition="''!='$(TraceImports)'"/>
    </Target>

    <Target Name="CheckForRequiredProperties">
        <Error Condition="''=='$(BM-PRODUCT_NAME)' and ''=='$(AssemblyProductAttribute)'" Text="Either BM-PRODUCT_NAME or AssemblyProductAttribute must be defined."/>
    </Target>

    <!-- Import the public part of MicroStation build policy. -->
    <Import Project="$(SrcRoot)MstnPlatform\msbuild\Bentley.MicroStation.properties" />

    <!-- Turn on the features of our platform System layer that we want for MicroStation. The only reason for the Condition on the below
         property definitions is to allow an override at the .csproj level which could come in handy from time to time. -->
    <PropertyGroup>
        <GenerateAssemblyInfoSourceFromProperties Condition="''=='$(GenerateAssemblyInfoSourceFromProperties)'">true</GenerateAssemblyInfoSourceFromProperties>
        <StrongNameAssembliesByDefault Condition="''=='$(StrongNameAssembliesByDefault)'">true</StrongNameAssembliesByDefault>
        <ApplyStrongNameSignaturePostLink Condition="''=='$(ApplyStrongNameSignaturePostLink)'">true</ApplyStrongNameSignaturePostLink>
        <InjectVersion Condition="''=='$(InjectVersion)'">true</InjectVersion>
        <ProduceTranskitConfigFile Condition="''=='$(ProduceTranskitConfigFile)'">true</ProduceTranskitConfigFile>
    </PropertyGroup>

    <PropertyGroup>
        <AssemblyProductAttribute Condition="''=='$(AssemblyProductAttribute)'">$(BM-PRODUCT_NAME)</AssemblyProductAttribute>
    </PropertyGroup>


    <!-- Define the following BM- prefixed properties without the prefix. -->
    <PropertyGroup>

        <nunitBinDir Condition="''=='$(nunitBinDir)' and ''!='$(BM-nunitBinDir)'">$(BM-nunitBinDir)</nunitBinDir>
        <nunitHostPath Condition="''=='$(nunitHostPath)' and ''!='$(BM-nunitHostPath)'">$(BM-nunitHostPath)</nunitHostPath>

        <AssemblyNoTranskit Condition="''=='$(AssemblyNoTranskit)' and ''!='$(BM-ASSEMBLY_NO_TRANSKIT)'">true</AssemblyNoTranskit>
        <MstnTranskitListDirectory Condition="''=='$(MstnTranskitListDirectory)' and ''!='$(BM-MstnTranskitListDirectory)'">$(BM-MstnTranskitListDirectory)</MstnTranskitListDirectory>
        <MstnTranskitName Condition="''=='$(MstnTranskitName)' and ''!='$(BM-MstnTranskitName)'">$(BM-MstnTranskitName)</MstnTranskitName>
        <MstnBuildingFullTranskit Condition="''=='$(MstnBuildingFullTranskit)' and ''!='$(BM-MstnBuildingFullTranskit)'">$(BM-MstnBuildingFullTranskit)</MstnBuildingFullTranskit>

        <build Condition="''=='$(build)' and ''!='$(BM-build)'">$(BM-build)</build>

        <platformResources_ProductNames_FileBaseName Condition="''=='$(platformResources_ProductNames_FileBaseName)' and ''!=$(BM-platformResources_ProductNames_FileBaseName)">$(BM-platformResources_ProductNames_FileBaseName)</platformResources_ProductNames_FileBaseName>
        <MS_APPCONFIG Condition="''=='$(MS_APPCONFIG)' and ''!='$(BM-MS_APPCONFIG)'">$(BM-MS_APPCONFIG)</MS_APPCONFIG>

    </PropertyGroup>


</Project>

