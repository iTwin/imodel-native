#------------------------------------------------------------------------------------------------------
# PointoolsVortexAPI_DLL.mke
# Builds PointoolsVortexAPI_DLL x86 and x64.
# This is a main file that includes PointoolsVortexAPI_DLL.mki which is auto generated using abmake.py
#------------------------------------------------------------------------------------------------------

%include PointoolsVortexAPI_Version.mki

PolicyFile=$(SrcRoot)Pointools/PointoolsCommon/AssertPolicy.mki

NOSTRICT=1
warnLevel = -W1

%ifndef debug
OPTIMIZE_FOR_SPEED=1
%endif

%if debug
#DEBUG_RUNTIME = 1
%endif

NO_LEAN_AND_MEAN=1
BUILD_NO_STACK_CHECK=1

#----------------------------------------------------------------------------------------
#   Get output directories ready to put built *.obj and *.exe files in.
#----------------------------------------------------------------------------------------

PointoolsVortexAPISrc=$(SrcRoot)Pointools/PointoolsVortexAPI/
PointoolsVortexAPIOut=$(OutputRootDir)Build/Pointools/PointoolsVortexAPI_$(VSOutputSubfolder)/

PointoolsVortexAPIShaderSrc=$(SrcRoot)Pointools/PointoolsVortexAPI/shaders/
PointoolsVortexAPIShaderSrcEnc=$(PointoolsVortexAPIOut)shaders/

BuildContext        = $(OutputRootDir)BuildContexts/PointoolsVortexAPI_$(VSOutputSubfolder)
ContextDeliveryDir  = $(BuildContext)Delivery/
o                   = $(PointoolsVortexAPIOut)/

BuildContextIncPath = $(OutputRootDir)BuildContexts/PointoolsLibs_$(VSOutputSubfolder)/VendorAPI/
BuildContextLibPath = $(OutputRootDir)BuildContexts/PointoolsLibs_$(VSOutputSubfolder)/Delivery/

BuildContextSubpartLibPath = $(BuildContext)SubParts\Libs
BuildContextSubpartAssemblyPath = $(BuildContext)SubParts\Assemblies

appName = PointoolsVortexAPI
baseDir = ${_MakeFilePath}/
privateInc = $(baseDir)


%include mdl.mki

o  = $(PointoolsVortexAPIOut)

always:
    ~mkdir $(o)

always:
    ~mkdir $(PointoolsVortexAPIShaderSrcEnc)

%message ------------------------------------------------------------------------
%message |
%message | Pointools Vortex API Build
%message |
%message | $(TARGET_PROCESSOR_ARCHITECTURE)
%if Debug
%message | Debug
%else
%message | Non Debug
%endif
%message |
%message ------------------------------------------------------------------------


#----------------------------------------------------------------------
# Preprocessor definitions
#----------------------------------------------------------------------

#CCompOpts + -showIncludes

CCompOpts + -D"_VC80_UPGRADE=0x0710"
CCompOpts + -D"_WINDLL"
CCompOpts + -Gm								# Enable minimal rebuild
CCompOpts + -EHsc							# Exception handling
CCompOpts + -Gd								# Calling convention (__cdecl except for C++ or __stdcall or __fastcall)
CCompOpts + -TP								# Force source file types to C++

CCompOpts + -D"UNICODE"
CCompOpts + -D"_UNICODE"
#CCompOpts + -D"WIN64"

ASSEMBLY_NO_STRONGNAME = 1


%if debug
#CCompOpts + -RTC1
%endif

%if debug
CCompOpts + -MD
%else
CCompOpts + -MD
%endif



#----------------------------------------------------------------------
# Private Include dirs
#----------------------------------------------------------------------

cIncs +% -I"${BuildContextIncPath}"
cIncs +% -I"${PointoolsVortex}\include"
cIncs +% -I"${BuildContextIncPath}\Boost_1_4_3"


#----------------------------------------------------------------------
# Encrypt GPU Shaders (Uses enc-shaders.exe part)
#----------------------------------------------------------------------

# Add include path to output folder where shaders have been encrypted to cpp files
cIncs +% -I"${PointoolsVortexAPIShaderSrcEnc}"

$(BuildContextSrc)pshader.vert.cpp: $(PointoolsVortexAPIShaderSrc)pshader.vert
	$(ContextDeliveryDir)enc-shaders.exe $(PointoolsVortexAPIShaderSrc) $(PointoolsVortexAPIShaderSrcEnc)

$(BuildContextSrc)pshader.frag.cpp: $(PointoolsVortexAPIShaderSrc)pshader.frag
	$(ContextDeliveryDir)enc-shaders.exe $(PointoolsVortexAPIShaderSrc)  $(PointoolsVortexAPIShaderSrcEnc)


#----------------------------------------------------------------------
# Include PointoolsVortexAPI_DLL.mki which is auto generated by abmake.py
# for either x86 or x64. PointoolsVortexAPI_DLL.mki is output in Build.
#----------------------------------------------------------------------

%include $(PointoolsVortexAPIOut)PointoolsVortexAPI_DLL.mki



#----------------------------------------------------------------------
#   Link
#----------------------------------------------------------------------

DLM_NAME                   = $(appName)
#DLS_NAME                  = $(appName)
DLM_OBJECT_DEST            = $(o)
DLM_DEST                   = $(o)
DLM_OBJECT_FILES           = $(dlmObjs)
DLM_SPECIAL_LINKOPT        + -LIBPATH:$(BuildContextLibPath)
DLM_SPECIAL_LINKOPT        + -LIBPATH:$(BuildContextSubpartLibPath)
DLM_SPECIAL_LINKOPT        + $(dlmLibs)
#DLM_NO_DELAYLOAD          = 1
DLM_NO_DLS                 = 1
DLM_NO_DEF                 = 1
DLM_SPECIAL_LINKOPT        + -def:$(baseDir)api.def

DLM_NOMSBUILTINS           = 1

DLM_NOENTRY				   = 1

LINKER_LIBRARIES_DELAYLOADED	= Bentley.liclib.lib

ASSEMBLY_NAME              = $(appName)
ASSEMBLY_TITLE             = $(appName)
ASSEMBLY_DESCRIPTION	   = $(appName)


%include dlmlink.mki


#----------------------------------------------------------------------
# Create sym links for delivery
#----------------------------------------------------------------------

VendorAPIDir    = $(OutBuildContexts)PointoolsVortexAPI_$(VSOutputSubfolder)/VendorAPI/PointoolsVortexAPI_DLL/


always:
    @CreateSymLinks.py -f"$(VendorAPIDir)\vortexLicense.c"="${SrcRoot}\Pointools\PointoolsVortexAPI\lic\vortexLicense.c"

always:
    @CreateSymLinks.py   -f"$(VendorAPIDir)\PTAPI\PointoolsVortexAPI_import.cpp=${SrcRoot}\Pointools\PointoolsVortexAPI\src\ptapi\PointoolsVortexAPI_import.cpp"
    @CreateSymLinks.py   -f"$(VendorAPIDir)\PTAPI\PointoolsVortexAPI_import.h=${SrcRoot}\Pointools\PointoolsVortexAPI\include\ptapi\PointoolsVortexAPI_import.h"
    @CreateSymLinks.py   -f"$(VendorAPIDir)\PTAPI\PointoolsVortexAPI_ResultCodes.h=${SrcRoot}\Pointools\PointoolsVortexAPI\include\ptapi\PointoolsVortexAPI_ResultCodes.h"

always:
    @CreateSymLinks.py   -f"$(VendorAPIDir)\VortexObjects\IClashNode.h=${SrcRoot}\Pointools\PointoolsVortexAPI\include\vortexobjects\IClashNode.h"
    @CreateSymLinks.py   -f"$(VendorAPIDir)\VortexObjects\IClashObject.h=${SrcRoot}\Pointools\PointoolsVortexAPI\include\vortexobjects\IClashObject.h"
    @CreateSymLinks.py   -f"$(VendorAPIDir)\VortexObjects\IClashObjectManager.h=${SrcRoot}\Pointools\PointoolsVortexAPI\include\vortexobjects\IClashObjectManager.h"
    @CreateSymLinks.py   -f"$(VendorAPIDir)\VortexObjects\IClashTree.h=${SrcRoot}\Pointools\PointoolsVortexAPI\include\vortexobjects\IClashTree.h"
    @CreateSymLinks.py   -f"$(VendorAPIDir)\VortexObjects\VortexObjects_import.h=${SrcRoot}\Pointools\PointoolsVortexAPI\include\vortexobjects\VortexObjects_import.h"

always:
    @CreateSymLinks.py -f"$(ContextDeliveryDir)\PointoolsVortexAPI.lib=$(o)PointoolsVortexAPI.lib"

#always:
#   @CreateSymLinks.py -f"$(ContextDeliveryDir)\PointoolsVortexAPI.pdb=$(o)PointoolsVortexAPI.pdb"
  
always:
    @CreateSymLinks.py -f"$(ContextDeliveryDir)\PointoolsVortexAPI.dll=$(o)PointoolsVortexAPI.dll"


