#--------------------------------------------------------------------------------------+
#
#     $Source: PublicApi/ImagePP/h/ktplatform.mki $
#
#  $Copyright: (c) 2013 Bentley Systems, Incorporated. All rights reserved. $
#
#+--------------------------------------------------------------------------------------

#**********************************************************************************
# Common MakeFile include in all makefile
#**********************************************************************************
#
%ifndef KT_DEST
KT_DEST = ${HOME}
%endif

%include ${KT_DEST}/dev/h/ktoption.mki

%ifdef __HMR_PROFILE
        CLinkOpts + -__HMR_PROFILE -MAP
%endif

#----------------------------------------------------------
#       Define directories
#----------------------------------------------------------
    KT_BASEINC_DIR  = ${KT_DEV_DIR}/h
    KT_MODULEINC_DIR  = ${KT_DEV_DIR}/all/h

    KT_BASEOBJ_DIR  = ${KT_DEV_DIR}/all/obj
    KT_BASELIB_DIR  = ${KT_DEV_DIR}/all/lib

#----------------------------------------------------------
#       Define compile Macros
#----------------------------------------------------------

%if unix
    #--------- Unix Macros -------------------------------
    #+++++++++ Compilation +++++++++++++++++++++++++++++++
    KT_LinkCmd            = ld
    KT_ArchCmd            = ar
    KT_ArchOpts       = r
    KT_CCompOpts      + -D__HMR_UNIX
    KT_CPPCompOpts    + -D__HMR_UNIX
    %ifdef __HMR_DEBUG
        KT_CCompOpts    +  -g  -D__HMR_DEBUG
        KT_CPPCompOpts  +  -g  -D__HMR_DEBUG
    %endif

    KT_LOCALINC_DIR  = /usr/toolkit
#    KT_LOCALINC_DIR  = /usr/tmp/stlv3

    #+++++++++ OS Command +++++++++++++++++++++++++++++++
    KT_FileDeleteCmd  = rm
    KT_FileMoveCmd    = mv
    KT_FileCopyCmd    = cp
    KT_MkDirCmd       = mkdir
    KT_ObjExt         = .o
    KT_ExeExt         =

    #+++++++++ Sparc Specific +++++++++++++++++++++++++++++++
    %if sparc
        KT_CCompCmd     = cc
        KT_CPPCompCmd   = CC
        KT_CCompOpts    +  -c -D__HMR_SPARC
        KT_CPPCompOpts  +  -c -D__HMR_SPARC


        %if sunsvr4
                KT_CCompOpts    + -D__HMR_SOLARIS
                KT_CPPCompOpts  +  -D__HMR_SOLARIS -DOS_SOLARIS_2_5 -DOS_NEW_CHECK -DOS_STL_ASSERT -DOS_SUNOS
        %endif
        KT_EXTLIB_DIR = sparc

    #+++++++++ HP700 Specific +++++++++++++++++++++++++++++++
    %elif hp700
        KT_CCompCmd     = c89
        KT_CPPCompCmd   = CC
        KT_CCompOpts    +  -c +z -D__HMR_HP700 -D__HMR_HPUX -D__STDC__ -D_HPUX_SOURCE
        KT_CPPCompOpts  +  -c +z -D__HMR_HP700 -D__HMR_HPUX -D__STDC__ -D_HPUX_SOURCE

        KT_EXTLIB_DIR = hp700

    #+++++++++ SGIMIPS Specific +++++++++++++++++++++++++++++++
    %elif sgimips
        KT_CCompCmd     = cc
        KT_CPPCompCmd   = CC
        %if !R3000
            #To compile for Indigo and Indy achitecture use -n32 -mips3
            #To compile for o2 use -n32 -mips4
            KT_MIPSArchOpt = -32
        %endif
        KT_CCompOpts    +  -c $(KT_MIPSArchOpt) -xansi -signed  -D__HMR_SGIMIPS -D__HMR_IRIX
        KT_CPPCompOpts  +  -c $(KT_MIPSArchOpt) -xansi -signed -exceptions -ptused -ptv -prelink -woff 3262 -woff 3672 -D__HMR_SGIMIPS -D__HMR_IRIX -DOS_IRIX_6_3 -DOS_NEW_CHECK  -DOS_NO_WSTRING

        KT_EXTLIB_DIR = sgimips

    %endif
%elif winNT
    #--------- winNT Macros ------------------------------
    deleteCmd           = del
    mkdirCmd        = mkdir
    copyCmd                 = copy
%if BOUNDCHECKER5
    CLinkCmd            = nmlink
%elif BOUNDCHECKER4
    CLinkCmd            = bclink
%else
    CLinkCmd            = link
%endif
    CLibCmd                 = lib
    AsmCmd                  = masm386
    oext                    = .obj
    exeext                  = .exe

    %if _X86_
        winNTx86        =   1
            x86COpts    =   -G3d -D_X86_=1 -Di386=1
        %if BOUNDCHECKER5
                CCompCmd        =   nmcl
        %elif BOUNDCHECKER4
                CCompCmd        =   bcompile
        %else
                CCompCmd        =   cl
        %endif
            CCompOpts   +   $(x86COpts) 
            dllEntry    =   @12
            ntCPU               =   i386
            i18nlib             =   $(ingri18n)\ingri18n.lib
    #----------------------------------------------------------
    #       Extlib directory
    #----------------------------------------------------------
    KT_EXTLIB_DIR = nt

    %elif _ALPHA_
        winNTAlpha      =   1
            CCompCmd    =   claxp
            alphaCOpts  =   -DALPHA=1 -D_ALPHA_=1 -D__stdcall=
            CCompOpts   +   $(alphaCOpts) 
            dllEntry    =
            ntCPU               =   Alpha_AXP
    #----------------------------------------------------------
    #       Extlib directory
    #----------------------------------------------------------
    KT_EXTLIB_DIR = alphant
   %endif

    ntLib   = $(MSTOOLS)/lib

    CDllOpts            = -entry:LibMain$(dllEntry)
    CLibs           = $(ntLib)\gdi32.lib $(ntLib)\user32.lib $(ntLib)\kernel32.lib \
                      $(ntLib)\msvcrt.lib $(ntLib)\libc.lib

    %if    guiApp
        CLinkOpts       + -subsystem:windows -entry:WinMainCRTStartup
    %else
        CLinkOpts       + -subsystem:console -entry:mainCRTStartup
    %endif

    %if    debughc
        %if BOUNDCHECKER5
                CCompOpts       + -Z7 -Od
        %elif BOUNDCHECKER4
                CCompOpts       + -Z7 -Od
        %else
                CCompOpts       + -Zi -Od
        %endif
        CLinkOpts       + -debug:full -debugtype:cv
    %endif

    CCompOpts       + -D__HMR_WinNT
    compOpts        + -d__HMR_WinNT
    rcompOpts       + -d__HMR_WinNT
%endif

KT_OBJ_DIR = ${KT_BASEOBJ_DIR}/${KT_EXTLIB_DIR}

#************************************************************
#       Inference Rules
#************************************************************

#************************************************************
#   .c.o Compiling C sources for external programs
#************************************************************
.c.$(KT_ObjExt):
        $(KT_CCompCmd) $(KT_CCompOpts) -I${KT_LOCALINC_DIR} -I${KT_BASEINC_DIR} -I${KT_MODULEINC_DIR} $%$*.c

#************************************************************
#   .cpp.o Compiling C++ sources for external programs
#************************************************************
%ifdef unix
.cpp.o:
%elif defined(winNT)
.cpp.obj
%endif
        $(KT_CPPCompCmd) $(KT_CPPCompOpts) -I${KT_LOCALINC_DIR} -I$(KT_BASEINC_DIR) -I$(KT_MODULEINC_DIR) $%$*.cpp
        @$(KT_FileMoveCmd) $*.o $@
        ~time
#************************************************************
#   Directory creation rule.
#
#   If directory/exists.ext doesn't exist, create the directory and
#   create the file within the directory.
#************************************************************
.mkdir.mkdir:
    |*** creating dir $%$*
    -$(KT_MkDirCmd) $%$*

#************************************************************
#   Librairie for external programs
#************************************************************
.$(KT_ObjExt).lib:
    $(KT_ArchCmd) $(KT_ArchOpts) $@ $?


