#----------------------------------------------------------------------------------------
#
#  $Source: ScalableMesh_DgnDb06.mki $
#
#  $Copyright: (c) 2019 Bentley Systems, Incorporated. All rights reserved. $
#
#----------------------------------------------------------------------------------------


# DLM_NAME, LIB_NAME, and CCompPDBName must all be the same.
# If we define appName and use it for DLM_NAME, MultiCppCompileRule.mki will use it for CCompPDBName, and linkLibrary.mki will use DLM_NAME for LIB_NAME.
# PreCompiledHeader.mki uses CCompPDBName
appName     = ScalableMesh
DLM_NAME    = $(appName)
LIB_NAME    = $(appName)
CCompPDBName = $(appName)

#This is because GMP and MPFR don't use vendor prefixes in the CGAL files
dirToSearch=$(OutputRootDir)BuildContexts/CGAL/VendorAPI/GMP
%include cincapnd.mki

#----------------------------------------------------------
# Preprocessor definition.
#----------------------------------------------------------
nameToDefine = __BENTLEYSTM_BUILD__
%include cdefapnd.mki

nameToDefine = __BENTLEYSTMIMPORT_BUILD__
%include cdefapnd.mki

nameToDefine = NO_IODEFS
%include cdefapnd.mki

#
#  Defining NOMINMAX keeps windef.h from defining min/max macros. This is necessary to be able to use
#  the std::min and std::max function templates. It might be nice to hoist this up to the power platform
#  build policy level.
#
nameToDefine = NOMINMAX
%include cdefapnd.mki

%ifdef SCALABLE_MESH_ATP_COMPILE
    nameToDefine=SCALABLE_MESH_ATP
    %include cdefapnd.mki
%endif

%ifndef NDEBUG
nameToDefine=INDEX_DUMPING_ACTIVATED
%include cdefapnd.mki
%endif

#nameToDefine=ACTIVATE_TEXTURE_DUMP
#%include cdefapnd.mki

#nameToDefine=DGNDB06_API
#%include cdefapnd.mki

#nameToDefine=NEED_SAVE_AS_IN_IMPORT_DLL
#%include cdefapnd.mki


%ifdef DHDEBUG
nameToDefine = DHDEBUG
%include cdefapnd.mki
%endif
