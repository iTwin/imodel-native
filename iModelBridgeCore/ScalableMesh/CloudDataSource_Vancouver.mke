#----------------------------------------------------------------------
#
#     $Source: CloudDataSource_Vancouver.mke $
#
#  $Copyright: (c) 2019 Bentley Systems, Incorporated. All rights reserved. $
#
#----------------------------------------------------------------------
baseDir         = $(_MakeFilePath)
PolicyFile      = $(SrcRoot)imodel02/iModelBridgeCore/ScalableMesh/mki/AssertScalableMeshPolicy.mki

#BUILD_USING_VS2013=1
VANCOUVER=1
OPTIMIZE_FOR_SPEED=1

%include  mdl.mki
%include $(baseDir)mki/ScalableMeshPolicy.mki
%include $(baseDir)CloudDataSource/CloudDataSourcePolicy.mki


CCompOpts + $(PublicApiIncludes)
CCompOpts + $(VendorApiIncludes)

%if defined(VANCOUVER)
CCompOpts + -DVANCOUVER_API
%endif

#consoleAppUnicode = 1

includeDir=$(SrcRoot)imodel02/iModelBridgeCore/ScalableMesh/CloudDataSource/include/
dirToSearch=$(includeDir)
%include cincapnd.mki

#dirToSearch=$(BuildContext)VendorAPI/wastorage/
#%include cincapnd.mki
#
#dirToSearch=$(BuildContext)VendorAPI/cpprestsdk/
#%include cincapnd.mki

#----------------------------------------------------------------------
#   Build precompiled header
#----------------------------------------------------------------------
appName = CloudDataSource
o = $(OutputRootDir)Build/ScalableMesh/$(appName)/
always:
    ~mkdir $(o)

SrcDir=$(SrcRoot)imodel02/iModelBridgeCore/ScalableMesh/CloudDataSource/

always:
    ~linkdir "$(BuildContext)VendorAPI/CloudDataSource=$(includeDir)"

CCompOpts + -DUNICODE -D__CLOUD_DATA_SOURCE_BUILD__

#warnLevel = -W3

MultiCompileDepends=$(_MakeFileSpec) 
%include MultiCppCompileRule.mki

$(o)ActivitySemaphore$(oext) : $(SrcDir)ActivitySemaphore.cpp ${MultiCompileDepends}

$(o)DataSource$(oext) : $(SrcDir)DataSource.cpp ${MultiCompileDepends}

$(o)DataSourceAccount$(oext) : $(SrcDir)DataSourceAccount.cpp ${MultiCompileDepends}

$(o)DataSourceAccountAzure$(oext) : $(SrcDir)DataSourceAccountAzure.cpp ${MultiCompileDepends}

$(o)DataSourceAccountWSG$(oext) : $(SrcDir)DataSourceAccountWSG.cpp ${MultiCompileDepends}

$(o)DataSourceAccountCURL$(oext) : $(SrcDir)DataSourceAccountCURL.cpp ${MultiCompileDepends}

$(o)DataSourceAccountCached$(oext) : $(SrcDir)DataSourceAccountCached.cpp ${MultiCompileDepends}

$(o)DataSourceAccountFile$(oext) : $(SrcDir)DataSourceAccountFile.cpp ${MultiCompileDepends}

$(o)DataSourceAzure$(oext) : $(SrcDir)DataSourceAzure.cpp ${MultiCompileDepends}

$(o)DataSourceWSG$(oext) : $(SrcDir)DataSourceWSG.cpp ${MultiCompileDepends}

$(o)DataSourceCURL$(oext) : $(SrcDir)DataSourceCURL.cpp ${MultiCompileDepends}

$(o)DataSourceBuffer$(oext) : $(SrcDir)DataSourceBuffer.cpp ${MultiCompileDepends}

$(o)DataSourceBuffered$(oext) : $(SrcDir)DataSourceBuffered.cpp ${MultiCompileDepends}

$(o)DataSourceCached$(oext) : $(SrcDir)DataSourceCached.cpp ${MultiCompileDepends}

$(o)DataSourceCloud$(oext) : $(SrcDir)DataSourceCloud.cpp ${MultiCompileDepends}

$(o)DataSourceFile$(oext) : $(SrcDir)DataSourceFile.cpp ${MultiCompileDepends}

$(o)DataSourceLocator$(oext) : $(SrcDir)DataSourceLocator.cpp ${MultiCompileDepends}

$(o)DataSourceManager$(oext) : $(SrcDir)DataSourceManager.cpp ${MultiCompileDepends}

$(o)DataSourceManagerTest$(oext) : $(SrcDir)DataSourceManagerTest.cpp ${MultiCompileDepends}

$(o)DataSourceService$(oext) : $(SrcDir)DataSourceService.cpp ${MultiCompileDepends}

$(o)DataSourceServiceAzure$(oext) : $(SrcDir)DataSourceServiceAzure.cpp ${MultiCompileDepends}

$(o)DataSourceServiceWSG$(oext) : $(SrcDir)DataSourceServiceWSG.cpp ${MultiCompileDepends}

$(o)DataSourceServiceCURL$(oext) : $(SrcDir)DataSourceServiceCURL.cpp ${MultiCompileDepends}

$(o)DataSourceServiceFile$(oext) : $(SrcDir)DataSourceServiceFile.cpp ${MultiCompileDepends}

$(o)DataSourceServiceManager$(oext) : $(SrcDir)DataSourceServiceManager.cpp ${MultiCompileDepends}

$(o)DataSourceTransferScheduler$(oext) : $(SrcDir)DataSourceTransferScheduler.cpp ${MultiCompileDepends}

$(o)DataSourceURL$(oext) : $(SrcDir)DataSourceURL.cpp ${MultiCompileDepends}

$(o)PerformanceTimer$(oext) : $(SrcDir)PerformanceTimer.cpp ${MultiCompileDepends}

%include MultiCppCompileGo.mki

certDir             = $(bsiCerts)

#----------------------------------------------------------------------
#   dependencies of the subsystem.
#----------------------------------------------------------------------
DLM_OBJECT_FILES            = $(MultiCompileObjectList)
DLM_EXPORT_OBJS             = $(MultiCompileObjectList)

#----------------------------------------------------------------------
#   Link the executable
#----------------------------------------------------------------------

LINKER_LIBRARIES_DELAYLOADED  = \
    $(ContextSubpartsLibs)BeCurl.lib \
    $(ContextSubpartsLibs)$(BeJsonCppLib) \
    $(ContextSubpartsLibs)BeOpenSSL.lib \
#    $(ContextSubpartsLibs)wastorage.lib 

#--------------------------------------------------------------------------------------
#   Create the library
#--------------------------------------------------------------------------------------
%include $(sharedMki)linkLibrary.mki

