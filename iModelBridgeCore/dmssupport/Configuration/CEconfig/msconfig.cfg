#----------------------------------------------------------------------
#
#  msconfig.cfg - Main MicroStation Configuration File
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#  See COPYRIGHT.md in the repository root for full copyright notice.
#---------------------------------------------------------------------------------------------

#======================================================================
#
#   >>>>> WARNING  WARNING  WARNING  WARNING  WARNING  WARNING  <<<<<
#
#  This contents of this file should not be changed! Any changes to the
#  configuration should be made in one of the files included by this
#  file. The comments below are intended to help decide where configuration
#  variables should be set or overridden.
#
#  This file is %included from mslocal.cfg
#
#======================================================================

#----------------------------------------------------------------------
# Configuration Variable Syntax
# 
# Configuration variables are name/value pairs.
# Values are assigned using '=', ':', '<', and '>'.
#
# '=' assigns the configuration variable name on the left to the value on the right.
#     If the configuration variable was previously defined, its value is replaced.,
# ':' assigns the configuration variable name on the left to the value on the right,
#     unless the configuration variable is already defined, in which case no action is taken.
# '+' appends the value to the right of the current value of the configuration variable.
# '<' prepends the value to the right to the current value of the configuration variable, treating
#       the configuration variable as a path and thus separating the values by a semicolon.
# '>' appends the value to the right to the current value of the configuration variable, treating
#       the configuration variable as a path and thus separating the values by a semicolon.
#
# Configuration variables can be set from the value of other configuration variables.
# The syntax ${OTHER_CFG_VAR} immediately evaluates the value of OTHER_CFG_VAR and uses it.
# The syntax $(OTHER_CFG_VAR) defers the evaluation of OTHER_CFG_VAR until the configuration 
#   variable that uses it is evaluated. In this case, $(OTHER_CFG_VAR) can be defined after
#   the configuration variable that uses it.
#----------------------------------------------------------------------

#----------------------------------------------------------------------
# Configuration Variable Levels are defined as follows:
#   Predefined variables (can't be defined in .cfg files)
#   0) System Level
#   1) Application Level
#   2) Organization Level
#   3) WorkSpace Level
#   4) WorkSet Level
#   5) Role Level
#   6) User Level
#
# In Version 08.21 or later, the current Configuration Variable Level can be set either by name or by numerical value
# i.e, %level System or %level 0. When set by name, case is not important. The Configuration Variable Level is generally
# controlled from msconfig.cfg (this file) and it is not necessary to change it within configuration files %included from here.
#----------------------------------------------------------------------

#----------------------------------------------------------------------
# Predefined Configuration Variables:
# The following variables are predefined:
#
#   _ROOTDIR                    Set to the directory in which MicroStation is installed.
#   _VERSION_x_xx               The _VERSION followed by the current major and minor version, defined but has no value.
#   _ENGINENAME                 Set to the name of the product.
#   _USTN_LocalUserAppDataPath  The directory that serves as a common repository for application-specific data that is used by the current, non-roaming user
#   _USTN_LocalUserTempPath     The Bentley subdirectory of the directory specified by the TEMP environment variable.
#   _USTN_UserAppDataPath       The directory that serves as a common repository for application-specific data for the current roaming user.
#   _USTN_CommonAppDataPath     The directory that serves as a common repository for application-specific data that is used by all users.
#----------------------------------------------------------------------

#----------------------------------------------------------------------
# The first set of variables is set at the system level.
# The directories that are set up here are all delivered with MicroStation.
# Changing these, or using this file with versions of MicroStation other
# than it was delivered with could cause unreliable operation.
#----------------------------------------------------------------------
%level System

#----------------------------------------------------------------------
# If MS is set using a system environment variable, and MSDIR is not
# previously defined, then use the value of MS to set MSDIR.
#----------------------------------------------------------------------
%if defined (MS)
    MSDIR   : ${MS}/
%endif

MSDIR                   : ${_ROOTDIR}/
MSLOCAL                 : $(MSDIR)
_USTN_BENTLEYROOT       : ${parentdevdir {MSDIR}}

#----------------------------------------------------------------------
# Set locations for user preference data.
# The default is to use a completely local (non-network) installation.
# If you want it to be possible for your MicroStation settings to be part of
# a Windows roaming user profile then consider overriding _USTN_HOMEROOT in your
# $(_USTN_CONFIGURATION)WorkSpaceSetup.cfg file with this setting for _USTN_HOMEROOT:
#
#       _USTN_HOMEROOT  : $(_USTN_UserAppDataPath)
#
#----------------------------------------------------------------------
_USTN_HOMEROOT          : $(_USTN_LocalUserAppDataPath)
_USTN_HOMEPREFS         : $(_USTN_HOMEROOT)prefs/

#----------------------------------------------------------------------
# Set directories for the system and application configuration files shipped with MicroStation
#----------------------------------------------------------------------
_USTN_SYSTEM            : $(MSDIR)config/system/
_USTN_APPL              : $(MSDIR)config/appl/

#----------------------------------------------------------------------
# Set Directories for the data files shipped with MicroStation.
#  Note: In MicroStation V8i, this data was put in $(_USTN_CONFIGURATION)system/ rather than the program delivery structure
#----------------------------------------------------------------------
_USTN_SYSTEMROOT        : $(MSDIR)System/
_USTN_GUIROOT           : $(_USTN_SYSTEMROOT)GUI/
_USTN_SYSTEMTABLES      : $(_USTN_SYSTEMROOT)tables/
_USTN_RASTERTABLE       : $(_USTN_SYSTEMTABLES)raster/
_USTN_RASTERGDALDATA    : $(MSDIR)Gdal_Data/

#----------------------------------------------------------------------
# Define Bentley required applications and file handlers.
#----------------------------------------------------------------------
_USTN_REQUIREDAPPS  : $(MSDIR)mdlsys/required/*.ma
_USTN_FILEHANDLERS  : $(MSDIR)mdlsys/filehandler/*.ma

#----------------------------------------------------------------------
# Include all the delivered system configuration files.
# These define System level configuration variables.
#----------------------------------------------------------------------
%include $(_USTN_SYSTEM)*.cfg level System

#----------------------------------------------------------------------
# Include all language-specific system configuration files. These files are delivered in separate directory as 
# specified by the language pack installer. A "language" is always specified, whereas a "country" is optional.  
# The load sequence below supports the ability for "language" definitions to be overridden by "language-country" 
# definitions.  However in a typical installation, only one of these directories will be present.
#----------------------------------------------------------------------
%include $(_USTN_SYSTEM)$(_USTN_LOCALE_LANGUAGE)/*.cfg level System
%include $(_USTN_SYSTEM)$(_USTN_LOCALE_LANGUAGE)-$(_USTN_LOCALE_COUNTRY)/*.cfg level System

#----------------------------------------------------------------------  */
# Include the delivered application configuration files.
# These define Application level configuration variables.
#----------------------------------------------------------------------
%include $(_USTN_APPL)*.cfg level Application

%level System
#----------------------------------------------------------------------
# The names of the user preference (.upf) and user configuration (.ucf) files,
# which are stored in the $(_USTN_HOMEPREFS) directory, are determined by _USTN_USERNAME.
#---------------------------------------------------------------------
_USTN_USERNAME          : Personal
_USTN_PREFNAMEBASE      : $(_USTN_HOMEPREFS)$(_USTN_USERNAME)

#----------------------------------------------------------------------
# Define the root directory for the Configuration data.
#----------------------------------------------------------------------
_USTN_CONFIGURATION     : ${_USTN_BENTLEYROOT}Configuration/

#----------------------------------------------------------------------
# The _USTN_ORGANIZATION is for configuration files and data used throughout the user organization.
#----------------------------------------------------------------------
_USTN_ORGANIZATION      : $(_USTN_CONFIGURATION)Organization/

#----------------------------------------------------------------------
# Set directory for WorkSpaces. This is the default directory where the workspace .cfg files are kept.
#  It can be changed in the WorkSpaceSetup.cfg file (see below).
#----------------------------------------------------------------------
_USTN_WORKSPACESROOT    : $(_USTN_CONFIGURATION)WorkSpaces/

#----------------------------------------------------------------------
# Set default locations for WorkSpace Standards and WorkSet.
#----------------------------------------------------------------------
_USTN_WORKSPACEROOT         : $(_USTN_WORKSPACESROOT)$(_USTN_WORKSPACENAME)/
_USTN_WORKSPACESTANDARDS    : $(_USTN_WORKSPACEROOT)Standards/

#----------------------------------------------------------------------
# Set variables for WorkSpace WorkSet directories.
# By default, _USTN_WORKSETSROOT for a given WorkSpace is a subdirectory of $(_USTN_WORKSPACESROOT)
# with a name equal to $(_USTN_WORKSPACENAME). _USTN_WORKSPACENAME is set in the WorkSpace .cfg file.
# The definition of $(_USTN_WORKSETSROOT) can be overridden in individual WorkSpace .cfg files.
#
# The root directory for all WorkSets for a particular WorkSpace can be changed by
# overriding _USTN_WORKSETSROOT in the WorkSpace .cfg file.
#
# The root directory for a particular WorkSet can be be changed by overriding _USTN_WORKSETROOT in individual WorkSet .cfg files.
#----------------------------------------------------------------------
_USTN_WORKSETSROOT      : $(_USTN_WORKSPACEROOT)WorkSets/

_USTN_WORKSETROOT       : $(_USTN_WORKSETSROOT)$(_USTN_WORKSETNAME)/
_USTN_WORKSETSTANDARDS  : $(_USTN_WORKSETROOT)Standards/
#_USTN_WORKSETSTANDARDS  : $(_USTN_SYSTEMROOT)
_USTN_WORKSETDGNS       : $(_USTN_WORKSETROOT)Dgn/

_USTN_OUT               : $(_USTN_WORKSETROOT)out/

#----------------------------------------------------------------------
# Set variables to identify WorkSpace template and WorkSet template.
#----------------------------------------------------------------------
_USTN_WORKSPACETEMPLATE : $(_USTN_WORKSPACESROOT)Template/WorkSpace.Template
_USTN_WORKSETTEMPLATE   : $(_USTN_WORKSPACESROOT)Template/WorkSet.Template
_USTN_WORKSETDGNWSTEMPLATE : $(_USTN_WORKSPACESROOT)Template/WorkSetTemplate.dgnws

#----------------------------------------------------------------------
# The names of the WorkSpace & WorkSet used as examples on the Welcome Screen. 
#----------------------------------------------------------------------
_USTN_EXAMPLEWORKSPACENAME  : Example
_USTN_EXAMPLEWORKSETNAME    : MetroStation

#----------------------------------------------------------------------
# Set variables to identify locations Extract, Package and Zip for Managed Application Settings.
#----------------------------------------------------------------------
_USTN_MASTEMP         : $(_USTN_LocalUserTempPath)/MASTemp/
_USTN_MASTEMP_EXTRACT : $(_USTN_MASTEMP)/Extract/
_USTN_MASTEMP_PACKAGE : $(_USTN_MASTEMP)/Package/
_USTN_MASTEMP_ZIP     : $(_USTN_MASTEMP)/Zip/

#----------------------------------------------------------------------
# Set variables to identify locations to download Issue resolution serive
# attachments file
#----------------------------------------------------------------------
_USTN_IRSTEMP         : $(_USTN_LocalUserTempPath)/IRSTemp/

#----------------------------------------------------------------------
# The ConfigurationSetup.cfg file, which is in the $(_USTN_INSTALLED_CONFIGURATION)
# directory, is a user-editable configuration file that controls the top-level
# Configuration directory to activate. The active Configuration directory is always
# represented by _USTN_CONFIGURATION. By default, it points to the installed 
# Configuration directory defined by _USTN_INSTALLED_CONFIGURATION. User can specify
# their own Configuration directory in ConfigurationSetup.cfg and redirect _USTN_CONFIGURATION
# to it.
#----------------------------------------------------------------------
%level System
%if exists ($(_USTN_INSTALLED_CONFIGURATION)ConfigurationSetup.cfg)
%  include $(_USTN_INSTALLED_CONFIGURATION)ConfigurationSetup.cfg
%endif

#----------------------------------------------------------------------
# The WorkSpaceSetup.cfg file, which is in the $(_USTN_WORKSPACESROOT) directory, 
# is a user-editable configuration file that controls how the user interface 
# labels the concept of a selectable "WorkSpace".
#
# A WorkSpace is used to group WorkSets. There can be multiple WorkSpaces,
# each which is represented by a configuration file in the $(_USTN_WORKSPACESROOT)
# directory. 
#
# MicroStation's UI allows the user to select a WorkSpace. The configuration
# variable _USTN_WORKSPACELABEL defines the label that the user sees in the UI.
# Some users will want to group WorkSets by Client. Others may group WorkSets
# by Department, Asset, Owner, or Contract. 
#
# Note: For administrators familiar with MicroStation V8i configuration files,
#  WorkSpace configuration files are similar in concept to the User ".ucf" files, 
#  except they don't have the side effects of User configuration files (setting 
#  a different user preference file, for example).
#
#----------------------------------------------------------------------
%level System
%if exists ($(_USTN_CONFIGURATION)WorkSpaceSetup.cfg)
%  include $(_USTN_CONFIGURATION)WorkSpaceSetup.cfg
%endif

#----------------------------------------------------------------------
# Include the Organization specific configuration files.
# The configuration files in the _USTN_ORGANIZATION directory are intended to
# set configuration variables that point to organization-wide standards
# such as level libraries, cell libraries, etc. Those settings can be
# augmented or overridden at the WorkSpace or WorkSet level.
#----------------------------------------------------------------------
%if exists ($(_USTN_ORGANIZATION)*.cfg)
%  include $(_USTN_ORGANIZATION)*.cfg level Organization
%endif

#----------------------------------------------------------------------
# Include the personal.ucf configuration file. _USTN_USERCFG is predefined
# It is included here because it may contain definitions for _USTN_WORKSPACENAME
#  and _USTN_WORKSETNAME. We need those before we try to include the
#  WorkSpace and WorkSet configuration files.
#----------------------------------------------------------------------
%if exists ($(_USTN_USERCFG))
%  include $(_USTN_USERCFG) level User
%else
%  error Exiting, $(_USTN_USERCFG) not found
%endif

#----------------------------------------------------------------------
# Select the initial WorkSpace file.
#
# A single workspace configuration file will be included.  This file gets
# selected based on the value of the workspace name - $(_USTN_WORKSPACENAME)
#
# So if _USTN_WORKSPACENAME is "sample" then MicroStation looks for a
# configuration file called "sample.cfg" in the $(_USTN_WORKSPACESROOT) directory -
# which is set to Bentley/Configuration/WorkSpaces/ by default.
#
# There are 3 ways (in order of priority) to set the workspace user name
# which selects the single user configuration file to be included:
#
#    1) Passed in on the command line (ex. ustation -wkNAME)
#    2) Define _USTN_WORKSPACENAME as an operating system environment variable
#       (ex. set _USTN_WORKSPACENAME=NAME)
#    3) It is stored in Personal.ucf from a previous session.
#
#----------------------------------------------------------------------
%level System
%if defined (_USTN_WORKSPACENAME)
%  if exists ($(_USTN_WORKSPACESROOT)$(_USTN_WORKSPACENAME).cfg)
     _USTN_WORKSPACECFG = $(_USTN_WORKSPACESROOT)$(_USTN_WORKSPACENAME).cfg
%    include $(_USTN_WORKSPACECFG) level WorkSpace
%  endif

#----------------------------------------------------------------------
# When we get to this point, we have a WorkSpace defined.
# There may be .cfg files within the WorkSpace. Process those here.
#----------------------------------------------------------------------
%  if exists ($(_USTN_WORKSPACEROOT)*.cfg)
%    include $(_USTN_WORKSPACEROOT)*.cfg level WorkSpace
%  endif
%endif

#----------------------------------------------------------------------
# Include the workset configuration file if _USTN_WORKSETNAME defined.
# _USTN_WORKSETNAME can be set by (in order of priority):
#       1) -ww command line option.
#       2) operating system environment variable.
#       3) configuration variable.
#----------------------------------------------------------------------
%level System
%if defined (_USTN_WORKSETNAME) && exists ($(_USTN_WORKSETSROOT)$(_USTN_WORKSETNAME).cfg)
  _USTN_WORKSETCFG = $(_USTN_WORKSETSROOT)$(_USTN_WORKSETNAME).cfg
%endif
#----------------------------------------------------------------------
#  iF _USTN_WORKSETCFG is not defined.
#  check if active configuration has "NoWorkSet.cfg"
#  if active configuration contains "NoWorkSet.cfg"  define it to _USTN_WORKSETCFG
#  else 
#  define _USTN_WORKSETCFG with the "NoWorkSet.cfg" present in the delivered configuration
#----------------------------------------------------------------------
%if !defined (_USTN_WORKSETCFG)
    %  if exists ($(_USTN_WORKSPACESROOT)NoWorkSpace/NoWorkSet.cfg)
        _USTN_WORKSETCFG : $(_USTN_WORKSPACESROOT)NoWorkSpace/NoWorkSet.cfg
    % else
        _USTN_WORKSETCFG : $(_USTN_INSTALLED_CONFIGURATION)WorkSpaces/NoWorkSpace/NoWorkSet.cfg
    % endif
  _USTN_HAVEWORKSET = 0
%else
  _USTN_HAVEWORKSET = 1
%endif

%if exists ($(_USTN_WORKSETCFG))
%  include $(_USTN_WORKSETCFG) level WorkSet
%endif

#----------------------------------------------------------------------
# Include product-specific configuration file at Organization, WorkSpace and WorkSet level (if any)
#----------------------------------------------------------------------
%if exists ($(_USTN_ORGANIZATION)$(_USTN_PRODUCT_DIRNAME)/*.cfg)
    %include $(_USTN_ORGANIZATION)$(_USTN_PRODUCT_DIRNAME)/*.cfg level Organization
%endif

%if exists ($(_USTN_WORKSPACESTANDARDS)$(_USTN_PRODUCT_DIRNAME)/*.cfg)
    %include $(_USTN_WORKSPACESTANDARDS)$(_USTN_PRODUCT_DIRNAME)/*.cfg level Workspace
%endif

%if exists ($(_USTN_WORKSETSTANDARDS)$(_USTN_PRODUCT_DIRNAME)/*.cfg)
    %include $(_USTN_WORKSETSTANDARDS)$(_USTN_PRODUCT_DIRNAME)/*.cfg level WorkSet
%endif

#----------------------------------------------------------------------
# Set variables to identify WorkSpace template and WorkSet template.
#----------------------------------------------------------------------
%level System
% if exists ($(_USTN_WORKSPACESROOT)Template/WorkSpace.Template)
    _USTN_WORKSPACETEMPLATE = $(_USTN_WORKSPACESROOT)Template/WorkSpace.Template
% else
    _USTN_WORKSPACETEMPLATE = $(_USTN_INSTALLED_CONFIGURATION)WorkSpaces/Template/WorkSpace.Template
% endif

% if exists ($(_USTN_WORKSPACESROOT)Template/WorkSet.Template)
    _USTN_WORKSETTEMPLATE   = $(_USTN_WORKSPACESROOT)Template/WorkSet.Template
% else
    _USTN_WORKSETTEMPLATE   = $(_USTN_INSTALLED_CONFIGURATION)WorkSpaces/Template/WorkSet.Template
% endif

% if exists ($(_USTN_WORKSPACESROOT)Template/WorkSetTemplate.dgnws)
    _USTN_WORKSETDGNWSTEMPLATE = $(_USTN_WORKSPACESROOT)Template/WorkSetTemplate.dgnws
% else
    _USTN_WORKSETDGNWSTEMPLATE = $(_USTN_INSTALLED_CONFIGURATION)WorkSpaces/Template/WorkSetTemplate.dgnws
% endif

#----------------------------------------------------------------------
# When we get to this point, we have a WorkSet defined.
# There may be .cfg files within the WorkSet. Process those here.
#----------------------------------------------------------------------
%if exists ($(_USTN_WORKSETROOT)*.cfg) && $(_USTN_HAVEWORKSET)
%  include $(_USTN_WORKSETROOT)*.cfg level WorkSet
%endif

#----------------------------------------------------------------------
# If it is defined at any of the preceding levels, include $(_USTN_ROLECFG)
#----------------------------------------------------------------------
%if defined (_USTN_ROLECFG)
%  include $(_USTN_ROLECFG) level Role
%endif

%iffeature FeatureAspects_Database
#----------------------------------------------------------------------
# Include the database configuration file if _USTN_DATABASENAME defined.
#
# _USTN_DATABASENAME can be set by (in order of priority):
#       1) -wd command line option.
#       2) operating system environment variable.
#       3) configuration variable.
#----------------------------------------------------------------------
%undef _USTN_DATABASECFG
%level User
_USTN_DATABASE          : $(MSDIR)config/database/

%if !defined (_USTN_DATABASENAME)
%  if exists ($(_USTN_HOMEPREFS)dfltdb.cfg)
%    include $(_USTN_HOMEPREFS)dfltdb.cfg
%  endif
%endif

%if defined (_USTN_DATABASENAME)
%  if exists ($(_USTN_DATABASE)$(_USTN_DATABASENAME).cfg)
     _USTN_DATABASECFG = $(_USTN_DATABASE)$(_USTN_DATABASENAME).cfg
%    include $(_USTN_DATABASECFG) level User
%  endif
%endif

%endif




